<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>STM32CubeMX教程1 工程建立</title>
    <link href="/2024/01/26/STM32CubeMX%E6%95%99%E7%A8%8B1-%E5%B7%A5%E7%A8%8B%E5%BB%BA%E7%AB%8B/"/>
    <url>/2024/01/26/STM32CubeMX%E6%95%99%E7%A8%8B1-%E5%B7%A5%E7%A8%8B%E5%BB%BA%E7%AB%8B/</url>
    
    <content type="html"><![CDATA[<h1 id="1、准备材料"><a href="#1、准备材料" class="headerlink" title="1、准备材料"></a>1、准备材料</h1><p>开发板（<a href="https://www.st.com/en/evaluation-tools/stm32f4discovery.html">STM32F407G-DISC1</a>）</p><p>STM32CubeMX软件（<a href="https://www.st.com/en/development-tools/stm32cubemx.html">Version 6.10.0</a>）</p><p>keil µVision5 IDE（<a href="https://www.keil.com/download/product/">MDK-Arm</a>）</p><p><a href="https://www.st.com/zh/development-tools/stsw-link009.html">ST-LINK&#x2F;V2驱动</a></p><h1 id="2、实验目标"><a href="#2、实验目标" class="headerlink" title="2、实验目标"></a>2、实验目标</h1><p>使用STM32CubeMX软件<font color="#fe2c24"><strong>建立一个STM32F407的空工程</strong></font></p><h1 id="3、建立流程"><a href="#3、建立流程" class="headerlink" title="3、建立流程"></a>3、建立流程</h1><h2 id="3-1、打开STM32CubeMX软件"><a href="#3-1、打开STM32CubeMX软件" class="headerlink" title="3.1、打开STM32CubeMX软件"></a>3.1、打开STM32CubeMX软件</h2><p>如下图所示为STM32CubeMX软件主界面</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/1.1.png" width = "700"></div><h2 id="3-2、开始建立工程"><a href="#3-2、开始建立工程" class="headerlink" title="3.2、开始建立工程"></a>3.2、开始建立工程</h2><p>单击ACCESS TO MCU SELECTOR</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/1.2.png" width = "700"></div><h2 id="3-3、选择MCU"><a href="#3-3、选择MCU" class="headerlink" title="3.3、选择MCU"></a>3.3、选择MCU</h2><p>在弹出的MCU选择界面，搜索工程使用的MCU型号，然后选中该MCU，单击界面右上角Start Project</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/1.3.png" width = "700"></div><h2 id="3-4、进行必要配置"><a href="#3-4、进行必要配置" class="headerlink" title="3.4、进行必要配置"></a>3.4、进行必要配置</h2><h3 id="3-4-1、Pinout-＆-Configuration页面配置"><a href="#3-4-1、Pinout-＆-Configuration页面配置" class="headerlink" title="3.4.1、Pinout ＆ Configuration页面配置"></a>3.4.1、Pinout ＆ Configuration页面配置</h3><p>进入Pinout ＆ Configuration页面中，如下图所示，<font color="#fe2c24"><strong>对于空工程来说只需在Pinout ＆ Configuration页面中配置RCC和SYS</strong></font>，RCC中主要配置高速外部时钟HSE和低速外部时钟LSE，SYS中主要配置单片机的Debug模式</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/1.4.png" width = "700"></div><p><font color="#fe2c24"><strong>如果使用高速外部时钟HSE，则需要单片机PH0-OSC_IN和PH0-OSC_OUT两个引脚接入一颗4MHz~16MHz的陶瓷晶振</strong></font></p><p><font color="#fe2c24"><strong>如果使用低速外部时钟LSE，则一般需要单片机PC14-OSC32_IN和PC15-OSC32_OUT两个引脚接入一颗32.768kHz的陶瓷晶振</strong></font></p><p>如果开发板单片机的引脚PH0-OSC_IN和PH0-OSC_OUT在原理图上连接了一颗4MHz~16MHz晶体 &#x2F; 陶瓷晶振，那么HSE就选择Crystal&#x2F;Ceramic Resonator，否则就选择Disable</p><p>同理如果PC14-OSC32_IN和PC15-OSC32_OUT两个引脚连接了一颗32.768kHz的晶体&#x2F;陶瓷晶振，那么LSE也选择Crystal&#x2F;Ceramic Resonator，否则一般直接选Disable即可</p><p>笔者使用的开发板HSE外部接入了一颗8MHz的陶瓷晶振，LSE未接入任何晶振，因此配置如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/1.5.png"></div><p><font color="#fe2c24"><strong>SYS中Debug模式表示MCU使用的下载调试模式，一般烧录程序会使用STLINK&#x2F;JTAG&#x2F;DAP等</strong></font>，按照自己的模式选择即可，笔者这里开发板板载了STLINK下载器，因此选择Serial Wire即可</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/1.6.png" ></div><h3 id="3-4-2、Clock-Configuration页面配置"><a href="#3-4-2、Clock-Configuration页面配置" class="headerlink" title="3.4.2、Clock Configuration页面配置"></a>3.4.2、Clock Configuration页面配置</h3><p>参考下图调节即可</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/1.7.png" width = "700"></div><h3 id="3-4-3、Project-Manager页面配置"><a href="#3-4-3、Project-Manager页面配置" class="headerlink" title="3.4.3、Project Manager页面配置"></a>3.4.3、Project Manager页面配置</h3><p>主要设置工程名称，存储位置，工具链&#x2F;IDE</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/1.8.png" width = "700"></div><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/1.9.png" width = "700"></div><h2 id="3-5、生成代码"><a href="#3-5、生成代码" class="headerlink" title="3.5、生成代码"></a>3.5、生成代码</h2><p>单击页面右上角GENERATE CODE生成代码，提示生成代码成功</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/1.10.png" ></div><p>找到生成代码目录下MDK-ARM里的.uvprojx结尾的keil工程文件，双击打开，编译工程</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/1.11.png" width = "700"></div><p>生成的工程代码结构主要有①单片机的启动文件②用户核心应用文件③HAL库驱动文件④单片机系统初始化文件</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/1.12.png" ></div><p><font color="#fe2c24"><strong>用户添加代码需要在代码注释中指定的BEGIN和END之间，否则使用CubeMX重新构建工程之后，添加的代码会消失</strong></font></p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/1.13.png" width = "700"></div><h1 id="4、烧录验证"><a href="#4、烧录验证" class="headerlink" title="4、烧录验证"></a>4、烧录验证</h1><p>将开发板利用调试器与电脑连接，确保调试器驱动已安装，可以通过设备管理器查看驱动，如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/1.14.png" width = "700"></div><p>单击魔术手，选择对应调试器并配置</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/1.15.png" width = "700"></div><p>单击LOAD，烧录程序</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/1.16.png"></div><h1 id="5、小结"><a href="#5、小结" class="headerlink" title="5、小结"></a>5、小结</h1><p>当创建好空工程后，以后需要使用到MCU的什么功能，就可以重新打开这个STM32CubeMX工程，然后主要是在软件Pinout ＆ Configuration页面对功能进行配置，需要修改时钟在Clock Configuration页面配置，需要修改生成的工程及代码可以在Project Manager页面进行配置。</p><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p><a href="https://www.st.com/resource/zh/user_manual/um1718-stm32cubemx-for-stm32-configuration-and-initialization-c-code-generation-stmicroelectronics.pdf">um1718-stm32cubemx-for-stm32-configuration-and-initialization-c-code-generation-stmicroelectronics.pdf</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>STM32CubeMX</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2024/01/26/hello-world/"/>
    <url>/2024/01/26/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
