<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>STM32CubeMX教程31 USB_DEVICE - HID外设_模拟键盘或鼠标</title>
    <link href="/2024/01/26/STM32CubeMX%E6%95%99%E7%A8%8B31-USB-DEVICE-HID%E5%A4%96%E8%AE%BE-%E6%A8%A1%E6%8B%9F%E9%94%AE%E7%9B%98%E6%88%96%E9%BC%A0%E6%A0%87/"/>
    <url>/2024/01/26/STM32CubeMX%E6%95%99%E7%A8%8B31-USB-DEVICE-HID%E5%A4%96%E8%AE%BE-%E6%A8%A1%E6%8B%9F%E9%94%AE%E7%9B%98%E6%88%96%E9%BC%A0%E6%A0%87/</url>
    
    <content type="html"><![CDATA[<h1 id="1、准备材料"><a href="#1、准备材料" class="headerlink" title="1、准备材料"></a>1、准备材料</h1><p><a href="http://47.111.11.73/docs/boards/stm32/zdyz_stm32f407_explorerV3.html">正点原子stm32f407探索者开发板V2.4</a></p><p>STM32CubeMX软件（<a href="https://www.st.com/en/development-tools/stm32cubemx.html">Version 6.10.0</a>）</p><p>keil µVision5 IDE（<a href="https://www.keil.com/download/product/">MDK-Arm</a>）</p><p><a href="https://www.st.com/zh/development-tools/stsw-link009.html">ST-LINK&#x2F;V2驱动</a></p><p><a href="https://doc.embedfire.com/stm32_products/must_read/zh/latest/doc/quickstart/DAP/DAP.html">野火DAP仿真器</a></p><p><a href="http://www.openedv.com/docs/tool/ruanjian/ATK-XCOM.html">XCOM V2.6串口助手</a></p><h1 id="2、实验目标"><a href="#2、实验目标" class="headerlink" title="2、实验目标"></a>2、实验目标</h1><p>使用STM32CubeMX软件配置STM32F407开发板<font color="#fe2c24"><strong>USB_OTG_FS为工作在Human Interface Device Class (HID)（人机接口设备类）模式下的USB_DEVICE（USB从机），利用上下左右四个用户按键模拟在Windwos上的鼠标或键盘操作</strong></font></p><h1 id="3、模拟鼠标实验流程"><a href="#3、模拟鼠标实验流程" class="headerlink" title="3、模拟鼠标实验流程"></a>3、模拟鼠标实验流程</h1><h2 id="3-0、前提知识"><a href="#3-0、前提知识" class="headerlink" title="3.0、前提知识"></a>3.0、前提知识</h2><p>关于USB的相关知识请读者阅读<a href="https://www.cnblogs.com/lc-guo/p/17983362">STM32CubeMX教程29 USB_HOST - 使用FatFs文件系统读写U盘</a>实验“3、USB概述”小节内容，USB_SALVE从机接口硬件原理图请读者阅读其“4.0、前提知识”小节内容</p><p>关于USB从机参数配置中Device Descriptor 选项卡下的参数配置请阅读<a href="https://www.cnblogs.com/lc-guo/p/17985801">STM32CubeMX教程30 USB_DEVICE - MSC外设_读卡器</a>实验”3.0、前提知识“小节</p><p>将USB设备接口配置工作在Human Interface Device Class (HID)模式下，然后通过USB线连接到Windows电脑上就可以作为一个人体学输入设备出现在PC的设备管理器中，在此模式下可以将USB设备模拟为鼠标、键盘等其他的外设，<font color="#fe2c24"><strong>默认情况下CubeMX生成的HID外设为鼠标</strong></font></p><p>鼠标设备和计算机通过USB通信采用HID的鼠标协议，该协议由四个字节组成，用于向计算机报告当前鼠标的状态，四个字节代表的含义如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/31.1.png" width = "700"></div><p>第一个字节共8位数据用于表示鼠标上的按键状态，每个位代表一个按钮，1表示按下，0表示未按下，最左边的Button位于字节的低位，通常下最低位表述鼠标左键，第一位表示鼠标右键，第二位表示鼠标中键，比如设置该字节数据为0x01，则表示鼠标左键被按下</p><p>第二个字节表示鼠标在水平（X）方向上的相对移动，比如设置该字节数据为10，则表示X正方向移动10刻度；第三个字节表示鼠标在竖直（Y）方向上的相对移动，比如设置该字节数据为-10，则表示Y负方向移动10刻度；第四个字节表示滚轮的状态，比如设置该字节数据为10表示向上滚动10刻度</p><h2 id="3-1、CubeMX相关配置"><a href="#3-1、CubeMX相关配置" class="headerlink" title="3.1、CubeMX相关配置"></a>3.1、CubeMX相关配置</h2><h3 id="3-1-0、工程基本配置"><a href="#3-1-0、工程基本配置" class="headerlink" title="3.1.0、工程基本配置"></a>3.1.0、工程基本配置</h3><p>打开STM32CubeMX软件，单击ACCESS TO MCU SELECTOR选择开发板MCU（选择你使用开发板的主控MCU型号），选中MCU型号后单击页面右上角Start Project开始工程，具体如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/31.2.png" width = "700"></div><p>开始工程之后在配置主页面System Core&#x2F;RCC中配置HSE&#x2F;LSE晶振，在System Core&#x2F;SYS中配置Debug模式，具体如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/31.3.png" width = "700"></div><p>详细工程建立内容读者可以阅读“<a href="https://www.cnblogs.com/lc-guo/p/17937268">STM32CubeMX教程1 工程建立</a>”</p><h3 id="3-1-1、时钟树配置"><a href="#3-1-1、时钟树配置" class="headerlink" title="3.1.1、时钟树配置"></a>3.1.1、时钟树配置</h3><p>将时钟树中48MHz时钟配置为48MHz，也即将Main PLL（主锁相环）的Q参数调节为7，其他HCLK、PCLK1和PCLK2时钟仍然设置为STM32F407能达到的最高时钟频率，具体如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/31.4.png" width = "700"></div><h3 id="3-1-2、外设参数配置"><a href="#3-1-2、外设参数配置" class="headerlink" title="3.1.2、外设参数配置"></a>3.1.2、外设参数配置</h3><p>本实验需要初始化开发板上WK_UP、KEY2、KEY1和KEY0用户按键，具体配置步骤请阅读“<a href="https://www.cnblogs.com/lc-guo/p/17938621">STM32CubeMX教程3 GPIO输入 - 按键响应</a>”</p><p>本实验需要初始化TIM6外设实现1ms定时，具体配置步骤请阅读“<a href="https://www.cnblogs.com/lc-guo/p/17942465">STM32CubeMX教程5 TIM 定时器概述及基本定时器</a>”</p><p>本实验需要初始化USART1作为输出信息渠道，具体配置步骤请阅读“<a href="https://www.cnblogs.com/lc-guo/p/17950348">STM32CubeMX教程9 USART&#x2F;UART 异步通信</a>”</p><p>单击Pinout ＆ Configuration页面左边功能分类栏目中<font color="#fe2c24"><strong>Connectivity&#x2F;USB_OTG_FS，将其模式配置为仅从机（Device_Only），其他所有参数保持默认即可</strong></font>，具体配置如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/31.5.png" width = "700"></div><p>单击Pinout ＆ Configuration页面左边功能分类栏目中<font color="#fe2c24"><strong>Middleware and Software Packs&#x2F;USB DEVICE，将其模式配置为Human Interface Device Class (HID)（人机接口设备类），其他所有参数保持默认即可</strong></font>，具体配置如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/31.6.png" width = "700"></div><p><font color="#be191c" style="background: #fef2f0"> HID_FS_BINTERVAL </font>（指定中断传输的轮询间隔）：可选0x01 ~ 0xFF，以毫秒为单位，此处设置为0XA表示USB主机每10ms轮询一次USB设备获取新的信息</p><p>Parameter Settings和Device Descriptor选项卡下其余参数请阅读<a href="https://www.cnblogs.com/lc-guo/p/17985801">STM32CubeMX教程30 USB_DEVICE - MSC外设_读卡器</a>实验”3.0、前提知识“和”3.1.2、外设参数配置“两个小节</p><h3 id="3-1-3、外设中断配置"><a href="#3-1-3、外设中断配置" class="headerlink" title="3.1.3、外设中断配置"></a>3.1.3、外设中断配置</h3><p>当在Middleware and SoftwarePacks中配置了USB_DEVICE的模式不为Disable时，便会自动开启USB_OTG的全局中断，且不可关闭，用户配置合适的中断优先级即可</p><p><font color="#fe2c24"><strong>注意本实验需要开启基本定时器TIM6的全局中断</strong></font>，勾选NVIC下的全局中断，具体配置如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/31.7.png" width = "700"></div><h2 id="3-2、生成代码"><a href="#3-2、生成代码" class="headerlink" title="3.2、生成代码"></a>3.2、生成代码</h2><h3 id="3-2-0、配置Project-Manager页面"><a href="#3-2-0、配置Project-Manager页面" class="headerlink" title="3.2.0、配置Project Manager页面"></a>3.2.0、配置Project Manager页面</h3><p>单击进入Project Manager页面，在左边Project分栏中修改工程名称、工程目录和工具链，然后在Code Generator中勾选“Gnerate peripheral initialization as a pair of ‘c&#x2F;h’ files per peripheral”，最后单击页面右上角GENERATE CODE生成工程，具体如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/31.8.png" width = "700"></div><p>详细Project Manager配置内容读者可以阅读“<a href="https://www.cnblogs.com/lc-guo/p/17937268">STM32CubeMX教程1 工程建立</a>”实验3.4.3小节</p><h3 id="3-2-1、设初始化调用流程"><a href="#3-2-1、设初始化调用流程" class="headerlink" title="3.2.1、设初始化调用流程"></a>3.2.1、设初始化调用流程</h3><p>暂无</p><h3 id="3-2-2、外设中断调用流程"><a href="#3-2-2、外设中断调用流程" class="headerlink" title="3.2.2、外设中断调用流程"></a>3.2.2、外设中断调用流程</h3><p>暂无</p><h3 id="3-2-3、添加其他必要代码"><a href="#3-2-3、添加其他必要代码" class="headerlink" title="3.2.3、添加其他必要代码"></a>3.2.3、添加其他必要代码</h3><p>在main.c文件最下方添加通过按键设置鼠标指针坐标值的函数 和 TIM6定时器1ms回调函数，具体源代码如下所示</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">/*设置鼠标指针坐标值*/</span><br><span class="hljs-type">static</span> <span class="hljs-type">void</span> <span class="hljs-title function_">GetPointerData</span><span class="hljs-params">(<span class="hljs-type">uint8_t</span> *pbuf)</span><br>&#123;<br>  <span class="hljs-type">int8_t</span>  x = <span class="hljs-number">0</span>, y = <span class="hljs-number">0</span>, button = <span class="hljs-number">0</span>, Wheel=<span class="hljs-number">0</span>;<br><br><span class="hljs-comment">/*按键WK_UP被按下*/</span><br><span class="hljs-keyword">if</span>(HAL_GPIO_ReadPin(WK_UP_GPIO_Port,WK_UP_Pin) == GPIO_PIN_SET)<br>&#123;<br><span class="hljs-keyword">if</span>(HAL_GPIO_ReadPin(WK_UP_GPIO_Port,WK_UP_Pin) == GPIO_PIN_SET)<br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Scroll the wheel up\r\n&quot;</span>);<br><span class="hljs-comment">//y -= CURSOR_STEP;</span><br>Wheel = <span class="hljs-number">10</span>;<br>&#125;<br>&#125;<br><span class="hljs-comment">/*按键KEY2被按下*/</span><br><span class="hljs-keyword">if</span>(HAL_GPIO_ReadPin(KEY2_GPIO_Port,KEY2_Pin) == GPIO_PIN_RESET)<br>&#123;<br><span class="hljs-keyword">if</span>(HAL_GPIO_ReadPin(KEY2_GPIO_Port,KEY2_Pin) == GPIO_PIN_RESET)<br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;←←←\r\n&quot;</span>);<br>x -= CURSOR_STEP;<br>&#125;<br>&#125;<br><span class="hljs-comment">/*按键KEY1被按下*/</span><br><span class="hljs-keyword">if</span>(HAL_GPIO_ReadPin(KEY1_GPIO_Port,KEY1_Pin) == GPIO_PIN_RESET)<br>&#123;<br><span class="hljs-keyword">if</span>(HAL_GPIO_ReadPin(KEY1_GPIO_Port,KEY1_Pin) == GPIO_PIN_RESET)<br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Left_Button_Pressed\r\n&quot;</span>);<br><span class="hljs-comment">//y += CURSOR_STEP;</span><br>button = <span class="hljs-number">0x01</span>;<br>&#125;<br>&#125;<br><span class="hljs-comment">/*按键KEY0被按下*/</span><br><span class="hljs-keyword">if</span>(HAL_GPIO_ReadPin(KEY0_GPIO_Port,KEY0_Pin) == GPIO_PIN_RESET)<br>&#123;<br><span class="hljs-keyword">if</span>(HAL_GPIO_ReadPin(KEY0_GPIO_Port,KEY0_Pin) == GPIO_PIN_RESET)<br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;→→→\r\n&quot;</span>);<br>x += CURSOR_STEP;<br>&#125;<br>&#125;<br>  pbuf[<span class="hljs-number">0</span>] = button;<br>  pbuf[<span class="hljs-number">1</span>] = x;<br>  pbuf[<span class="hljs-number">2</span>] = y;<br>  pbuf[<span class="hljs-number">3</span>] = Wheel;<br>&#125;<br><br><span class="hljs-comment">/*TIM6定时器1ms回调函数*/</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">HAL_TIM_PeriodElapsedCallback</span><span class="hljs-params">(TIM_HandleTypeDef *htim)</span><br>&#123;<br><span class="hljs-type">static</span> __IO <span class="hljs-type">uint32_t</span> counter = <span class="hljs-number">0</span>;<br><br><span class="hljs-comment">/* check Joystick state every polling interval (10ms) */</span><br><span class="hljs-keyword">if</span>(counter++ == USBD_HID_GetPollingInterval(&amp;hUsbDeviceFS))<br>&#123;<br>GetPointerData(HID_Buffer);<br> <br><span class="hljs-comment">/* send data though IN endpoint*/</span><br><span class="hljs-keyword">if</span>((HID_Buffer[<span class="hljs-number">0</span>] != <span class="hljs-number">0</span>) || (HID_Buffer[<span class="hljs-number">1</span>] != <span class="hljs-number">0</span>) || (HID_Buffer[<span class="hljs-number">2</span>] != <span class="hljs-number">0</span>) || (HID_Buffer[<span class="hljs-number">3</span>] != <span class="hljs-number">0</span>))<br>&#123;<br>USBD_HID_SendReport(&amp;hUsbDeviceFS, HID_Buffer, <span class="hljs-keyword">sizeof</span>(HID_Buffer));<br>&#125;<br>counter = <span class="hljs-number">0</span>;<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>在main.c文件中包含使用到的头文件，以及定义&#x2F;声明使用到的一些变量，最后在主函数main()初始化外设完毕后以中断方式打开TIM6定时器即可，具体源代码如下所示</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">/*main.c文件中*/</span><br><span class="hljs-comment">/*包含头文件*/</span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;usbd_hid.h&quot;</span></span><br><br><span class="hljs-comment">/*定义/声明变量*/</span><br><span class="hljs-keyword">extern</span> USBD_HandleTypeDef hUsbDeviceFS;<br><span class="hljs-meta">#<span class="hljs-keyword">define</span> CURSOR_STEP 7</span><br><span class="hljs-type">uint8_t</span> HID_Buffer[<span class="hljs-number">4</span>];<br><br><span class="hljs-comment">/*主函数进入主循环前启动TIM6定时器*/</span><br>HAL_TIM_Base_Start_IT(&amp;htim6);<br></code></pre></td></tr></table></figure><h1 id="4、烧录验证"><a href="#4、烧录验证" class="headerlink" title="4、烧录验证"></a>4、烧录验证</h1><p>烧录程序，使用USB连接线将开发板上USB_SALVE接口与Windows电脑的USB接口连接，连接成功后可以通过串口助手监视系统的运行</p><p>首先按下开发板上的KEY2和KEY0左右两个用户按键，可以发现电脑上的鼠标光标会随着按键的按下向左或者向右移动，然后按下WK_UP上方用户按键可以发现串口助手显示的内容被拉到最上方，也即实现了滚轮向上滚动，然后将鼠标光标移动到串口助手的打开&#x2F;关闭串口按钮上，按下KEY1按键之后发现可以控制串口的打开&#x2F;关闭，具体现象如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/31.9.gif"></div><h1 id="5、模拟键盘实验流程简述"><a href="#5、模拟键盘实验流程简述" class="headerlink" title="5、模拟键盘实验流程简述"></a>5、模拟键盘实验流程简述</h1><h2 id="5-0、前提知识"><a href="#5-0、前提知识" class="headerlink" title="5.0、前提知识"></a>5.0、前提知识</h2><p>键盘设备和计算机通过USB通信采用HID的键盘协议，该协议由八个字节组成，用于向计算机报告当前键盘的状态，八个字节代表的含义如下图所示 <em>（注释1）</em></p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/31.10.png"></div><h2 id="5-1、CubeMX相关配置"><a href="#5-1、CubeMX相关配置" class="headerlink" title="5.1、CubeMX相关配置"></a>5.1、CubeMX相关配置</h2><p>无需做任何修改，直接使用模拟鼠标时生成的工程代码</p><h2 id="5-2、生成代码"><a href="#5-2、生成代码" class="headerlink" title="5.2、生成代码"></a>5.2、生成代码</h2><p>打开生成的工程代码，由于CubeMX默认将设备描述为了鼠标设备，可以在usbd_hid.c文件中找到一个名为HID_MOUSE_ReportDesc的数组，该数组正式鼠标报告设备描述符，因此需要将该设备描述符修改为键盘的设备描述符，同时也应该修改该报告设备描述符数组的大小HID_MOUSE_REPORT_DESC_SIZE ，具体修改内容如下所示 <em>（注释2）</em></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">/*修改usbd_hid.c中的报告设备描述符*/</span><br>__ALIGN_BEGIN <span class="hljs-type">static</span> <span class="hljs-type">uint8_t</span> HID_MOUSE_ReportDesc[HID_MOUSE_REPORT_DESC_SIZE] __ALIGN_END =<br>&#123;<br><span class="hljs-number">0x05</span>, <span class="hljs-number">0x01</span>, <span class="hljs-comment">// USAGE_PAGE (Generic Desktop) //63</span><br><span class="hljs-number">0x09</span>, <span class="hljs-number">0x06</span>, <span class="hljs-comment">// USAGE (Keyboard)</span><br><span class="hljs-number">0xa1</span>, <span class="hljs-number">0x01</span>, <span class="hljs-comment">// COLLECTION (Application)</span><br><span class="hljs-number">0x05</span>, <span class="hljs-number">0x07</span>, <span class="hljs-comment">// USAGE_PAGE (Keyboard)</span><br><span class="hljs-number">0x19</span>, <span class="hljs-number">0xe0</span>, <span class="hljs-comment">// USAGE_MINIMUM (Keyboard LeftControl)</span><br><span class="hljs-number">0x29</span>, <span class="hljs-number">0xe7</span>, <span class="hljs-comment">// USAGE_MAXIMUM (Keyboard Right GUI)</span><br><span class="hljs-number">0x15</span>, <span class="hljs-number">0x00</span>, <span class="hljs-comment">// LOGICAL_MINIMUM (0)</span><br><span class="hljs-number">0x25</span>, <span class="hljs-number">0x01</span>, <span class="hljs-comment">// LOGICAL_MAXIMUM (1)</span><br><span class="hljs-number">0x75</span>, <span class="hljs-number">0x01</span>, <span class="hljs-comment">// REPORT_SIZE (1)</span><br><span class="hljs-number">0x95</span>, <span class="hljs-number">0x08</span>, <span class="hljs-comment">// REPORT_COUNT (8)</span><br><span class="hljs-number">0x81</span>, <span class="hljs-number">0x02</span>, <span class="hljs-comment">// INPUT (Data,Var,Abs)</span><br><span class="hljs-number">0x95</span>, <span class="hljs-number">0x01</span>, <span class="hljs-comment">// REPORT_COUNT (1)</span><br><span class="hljs-number">0x75</span>, <span class="hljs-number">0x08</span>, <span class="hljs-comment">// REPORT_SIZE (8)</span><br><span class="hljs-number">0x81</span>, <span class="hljs-number">0x03</span>, <span class="hljs-comment">// INPUT (Cnst,Var,Abs)</span><br><span class="hljs-number">0x95</span>, <span class="hljs-number">0x05</span>, <span class="hljs-comment">// REPORT_COUNT (5)</span><br><span class="hljs-number">0x75</span>, <span class="hljs-number">0x01</span>, <span class="hljs-comment">// REPORT_SIZE (1)</span><br><span class="hljs-number">0x05</span>, <span class="hljs-number">0x08</span>, <span class="hljs-comment">// USAGE_PAGE (LEDs)</span><br><span class="hljs-number">0x19</span>, <span class="hljs-number">0x01</span>, <span class="hljs-comment">// USAGE_MINIMUM (Num Lock)</span><br><span class="hljs-number">0x29</span>, <span class="hljs-number">0x05</span>, <span class="hljs-comment">// USAGE_MAXIMUM (Kana)</span><br><span class="hljs-number">0x91</span>, <span class="hljs-number">0x02</span>, <span class="hljs-comment">// OUTPUT (Data,Var,Abs)</span><br><span class="hljs-number">0x95</span>, <span class="hljs-number">0x01</span>, <span class="hljs-comment">// REPORT_COUNT (1)</span><br><span class="hljs-number">0x75</span>, <span class="hljs-number">0x03</span>, <span class="hljs-comment">// REPORT_SIZE (3)</span><br><span class="hljs-number">0x91</span>, <span class="hljs-number">0x03</span>, <span class="hljs-comment">// OUTPUT (Cnst,Var,Abs)</span><br><span class="hljs-number">0x95</span>, <span class="hljs-number">0x06</span>, <span class="hljs-comment">// REPORT_COUNT (6)</span><br><span class="hljs-number">0x75</span>, <span class="hljs-number">0x08</span>, <span class="hljs-comment">// REPORT_SIZE (8)</span><br><span class="hljs-number">0x15</span>, <span class="hljs-number">0x00</span>, <span class="hljs-comment">// LOGICAL_MINIMUM (0)</span><br><span class="hljs-number">0x25</span>, <span class="hljs-number">0x65</span>, <span class="hljs-comment">// LOGICAL_MAXIMUM (101)</span><br><span class="hljs-number">0x05</span>, <span class="hljs-number">0x07</span>, <span class="hljs-comment">// USAGE_PAGE (Keyboard)</span><br><span class="hljs-number">0x19</span>, <span class="hljs-number">0x00</span>, <span class="hljs-comment">// USAGE_MINIMUM (Reserved (no event indicated))</span><br><span class="hljs-number">0x29</span>, <span class="hljs-number">0x65</span>, <span class="hljs-comment">// USAGE_MAXIMUM (Keyboard Application)</span><br><span class="hljs-number">0x81</span>, <span class="hljs-number">0x00</span>, <span class="hljs-comment">// INPUT (Data,Ary,Abs)</span><br><span class="hljs-number">0xc0</span>,       <span class="hljs-comment">// END_COLLECTION</span><br>&#125;;<br><br><span class="hljs-comment">/*修改usbd_hid.h中的报告设备描述符大小*/</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> HID_MOUSE_REPORT_DESC_SIZE 63U</span><br></code></pre></td></tr></table></figure><p>修改报告设备描述符连接计算机之后，计算机就应该将其识别为一个键盘设备，计算机和该USB设备通信时就应该按照键盘设备的HID协议数据包进行数据解析，我们通过开发板上的四个按键来模拟键盘上的a&#x2F;x&#x2F;y&#x2F;z四个按键，将程序直接实现在main.c文件中，具体源代码如下所示</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">/*设置鼠标指针坐标值*/</span><br><span class="hljs-type">static</span> <span class="hljs-type">void</span> <span class="hljs-title function_">GetPointerData</span><span class="hljs-params">(<span class="hljs-type">uint8_t</span> *pbuf)</span><br>&#123;<br>  <span class="hljs-type">int8_t</span> keyboard = <span class="hljs-number">0</span>;<br><br><span class="hljs-comment">/*按键WK_UP被按下*/</span><br><span class="hljs-keyword">if</span>(HAL_GPIO_ReadPin(WK_UP_GPIO_Port,WK_UP_Pin) == GPIO_PIN_SET)<br>&#123;<br><span class="hljs-keyword">if</span>(HAL_GPIO_ReadPin(WK_UP_GPIO_Port,WK_UP_Pin) == GPIO_PIN_SET)<br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;WK_UP Pressed : a/A\r\n&quot;</span>);<br>keyboard = <span class="hljs-number">0x04</span>;<br><span class="hljs-keyword">while</span>(HAL_GPIO_ReadPin(WK_UP_GPIO_Port,WK_UP_Pin));<br>&#125;<br>&#125;<br><span class="hljs-comment">/*按键KEY2被按下*/</span><br><span class="hljs-keyword">if</span>(HAL_GPIO_ReadPin(KEY2_GPIO_Port,KEY2_Pin) == GPIO_PIN_RESET)<br>&#123;<br><span class="hljs-keyword">if</span>(HAL_GPIO_ReadPin(KEY2_GPIO_Port,KEY2_Pin) == GPIO_PIN_RESET)<br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;KEY2 Pressed : x/X\r\n&quot;</span>);<br>keyboard = <span class="hljs-number">0x1B</span>;<br><span class="hljs-keyword">while</span>(!HAL_GPIO_ReadPin(KEY2_GPIO_Port,KEY2_Pin));<br>&#125;<br>&#125;<br><span class="hljs-comment">/*按键KEY1被按下*/</span><br><span class="hljs-keyword">if</span>(HAL_GPIO_ReadPin(KEY1_GPIO_Port,KEY1_Pin) == GPIO_PIN_RESET)<br>&#123;<br><span class="hljs-keyword">if</span>(HAL_GPIO_ReadPin(KEY1_GPIO_Port,KEY1_Pin) == GPIO_PIN_RESET)<br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;KEY1 Pressed : y/Y\r\n&quot;</span>);<br>keyboard = <span class="hljs-number">0x1C</span>;<br><span class="hljs-keyword">while</span>(!HAL_GPIO_ReadPin(KEY1_GPIO_Port,KEY1_Pin));<br>&#125;<br>&#125;<br><span class="hljs-comment">/*按键KEY0被按下*/</span><br><span class="hljs-keyword">if</span>(HAL_GPIO_ReadPin(KEY0_GPIO_Port,KEY0_Pin) == GPIO_PIN_RESET)<br>&#123;<br><span class="hljs-keyword">if</span>(HAL_GPIO_ReadPin(KEY0_GPIO_Port,KEY0_Pin) == GPIO_PIN_RESET)<br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;KEY0 Pressed : z/Z\r\n&quot;</span>);<br>keyboard = <span class="hljs-number">0x1D</span>;<br><span class="hljs-keyword">while</span>(!HAL_GPIO_ReadPin(KEY0_GPIO_Port,KEY0_Pin));<br>&#125;<br>&#125;<br><span class="hljs-comment">//合成键盘数据包</span><br><span class="hljs-keyword">for</span>(<span class="hljs-type">uint8_t</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">8</span>;i++)<br>&#123;<br><span class="hljs-keyword">if</span>(i == <span class="hljs-number">2</span>) pbuf[i] = keyboard;<br><span class="hljs-keyword">else</span> pbuf[i] = <span class="hljs-number">0</span>;<br>&#125;<br>&#125;<br><br><span class="hljs-comment">/*TIM6定时器1ms回调函数*/</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">HAL_TIM_PeriodElapsedCallback</span><span class="hljs-params">(TIM_HandleTypeDef *htim)</span><br>&#123;<br><span class="hljs-type">static</span> __IO <span class="hljs-type">uint32_t</span> counter = <span class="hljs-number">0</span>;<br><br><span class="hljs-comment">/* check Joystick state every polling interval (10ms) */</span><br><span class="hljs-keyword">if</span>(counter++ == USBD_HID_GetPollingInterval(&amp;hUsbDeviceFS))<br>&#123;<br>GetPointerData(HID_Buffer);<br> <br><span class="hljs-comment">/* send data though IN endpoint*/</span><br>USBD_HID_SendReport(&amp;hUsbDeviceFS, HID_Buffer, <span class="hljs-keyword">sizeof</span>(HID_Buffer));<br><br><span class="hljs-comment">/* 重置counter */</span><br>counter = <span class="hljs-number">0</span>;<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="5-3、烧录验证"><a href="#5-3、烧录验证" class="headerlink" title="5.3、烧录验证"></a>5.3、烧录验证</h2><p>烧录程序，使用USB连接线将开发板上USB_SALVE接口与Windows电脑的USB接口连接，连接成功后可以通过串口助手监视系统的运行</p><p>首先我们可以通过设备管理器查找一下该设备，看看Windwos将其识别为了什么设备，打开设备管理器，在键盘中找到最后一个，右键查看其属性，在详细信息页面属性中找到父系，在下方可以查看到该设备的VID和PID，可以发现和我们配置的HID设备描述中的ID一致，具体如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/31.11.png" width = "700"></div><p>然后打开串口助手，将鼠标光标点击串口助手的发送数据区域，然后随机按下开发板上的四个用户按键，可以在串口助手发送数据区域发现每按下一个按键都会对应输出a、x、y、z四个字符，并且同时串口会输出哪个按键被按下的提示，具体现象如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/31.12.gif"></div><h1 id="6、常用函数"><a href="#6、常用函数" class="headerlink" title="6、常用函数"></a>6、常用函数</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">/*return polling interval from endpoint descriptor*/</span><br><span class="hljs-type">uint32_t</span> <span class="hljs-title function_">USBD_HID_GetPollingInterval</span><span class="hljs-params">(USBD_HandleTypeDef *pdev)</span><br><span class="hljs-comment">/*Send HID Report*/</span><br><span class="hljs-type">uint8_t</span> <span class="hljs-title function_">USBD_HID_SendReport</span><span class="hljs-params">(USBD_HandleTypeDef *pdev, <span class="hljs-type">uint8_t</span> *report, <span class="hljs-type">uint16_t</span> len)</span><br></code></pre></td></tr></table></figure><h1 id="7、注释详解"><a href="#7、注释详解" class="headerlink" title="7、注释详解"></a>7、注释详解</h1><p><em>注释1</em>：图片来源 <a href="http://usb.baiheee.com/special/usb_hid_spec/usb_hid_spec_75.html">3、USB接口的键盘描述符范例</a></p><p><em>注释2</em>：键盘的报告设备描述符来源 <a href="https://blog.csdn.net/qq_36347513/article/details/127534565">STM32CubeMX学习笔记（44）——USB接口使用（HID按键）</a></p><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p>微雪课堂：<a href="https://www.waveshare.net/study/article-664-1.html">STM32CubeMX系列教程25:USB Device</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>STM32CubeMX</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>STM32CubeMX教程30 USB_DEVICE - MSC外设_读卡器</title>
    <link href="/2024/01/26/STM32CubeMX%E6%95%99%E7%A8%8B30-USB-DEVICE-MSC%E5%A4%96%E8%AE%BE-%E8%AF%BB%E5%8D%A1%E5%99%A8/"/>
    <url>/2024/01/26/STM32CubeMX%E6%95%99%E7%A8%8B30-USB-DEVICE-MSC%E5%A4%96%E8%AE%BE-%E8%AF%BB%E5%8D%A1%E5%99%A8/</url>
    
    <content type="html"><![CDATA[<h1 id="1、准备材料"><a href="#1、准备材料" class="headerlink" title="1、准备材料"></a>1、准备材料</h1><p><a href="http://47.111.11.73/docs/boards/stm32/zdyz_stm32f407_explorerV3.html">正点原子stm32f407探索者开发板V2.4</a></p><p>STM32CubeMX软件（<a href="https://www.st.com/en/development-tools/stm32cubemx.html">Version 6.10.0</a>）</p><p>keil µVision5 IDE（<a href="https://www.keil.com/download/product/">MDK-Arm</a>）</p><p><a href="https://www.st.com/zh/development-tools/stsw-link009.html">ST-LINK&#x2F;V2驱动</a></p><p><a href="https://doc.embedfire.com/stm32_products/must_read/zh/latest/doc/quickstart/DAP/DAP.html">野火DAP仿真器</a></p><p><a href="http://www.openedv.com/docs/tool/ruanjian/ATK-XCOM.html">XCOM V2.6串口助手</a></p><h1 id="2、实验目标"><a href="#2、实验目标" class="headerlink" title="2、实验目标"></a>2、实验目标</h1><p>使用STM32CubeMX软件配置STM32F407开发板<font color="#fe2c24"><strong>USB_OTG_FS为工作在Mass Storage Class（大容量存储类）模式下的USB_DEVICE（USB从机），使其作为SD卡读卡器在Windows系统文件资源管理器中直接对SD卡进行读写操作</strong></font></p><h1 id="3、实验流程"><a href="#3、实验流程" class="headerlink" title="3、实验流程"></a>3、实验流程</h1><h2 id="3-0、前提知识"><a href="#3-0、前提知识" class="headerlink" title="3.0、前提知识"></a>3.0、前提知识</h2><p>关于USB的相关知识请读者阅读<a href="https://www.cnblogs.com/lc-guo/p/17983362">STM32CubeMX教程29 USB_HOST - 使用FatFs文件系统读写U盘</a>实验“3、USB概述”小节内容，USB_SALVE 从机接口硬件原理图请读者阅读其“4.0、前提知识”小节内容</p><p>当USB工作在USB_DEVICE时可以将其模式配置为以下6种模式中的任何一种，<font color="#fe2c24"><strong>本实验只会介绍其中的大容量存储设备，其他的一概不涉及</strong></font>，具体的6种模式如下图所述</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/30.1.png"></div><p>将USB设备接口配置工作在Mass Storage Class模式下，主要是为了将没有USB接口的大容量的存储设备（eg：SD卡）通过该接口，利用USB连接与USB主机之间建立联系，然后便可以通过USB主机对该大容量存储设备进行控制</p><p><font color="#fe2c24"><strong>对于USB_OTG_FS工作在任意USB外设模式下来说，在CubeMX中一般需要对Configuration下Parameter Settings、Device Descriptor 和User Constants三个参数页面参数进行配置（虽然这些参数一般无需修改，保持默认即可）</strong></font></p><p>其中Parameter Settings 选项卡下的参数会根据不同的外设工作模式出现对应该外设的一些重要参数设置，不同外设出现的参数不尽相同</p><p><font color="#fe2c24"><strong>Device Descriptor 选项卡下的参数则较为固定</strong></font>，不同外设之间往往只会改变Device Descriptor FS下的参数，该选项卡下的所有参数主要用于描述该USB外设，正因为其参数则较为固定，因此这里笔者直接列出了各个参数的含义，在之后的其他外设实验中便不再重复说明，具体含义如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/30.1_add.png" width = "700"></div><p>User Constants 选项卡主要用于设定一些用户需要的常量参数，增加之后会以宏定义的形式出现在main.h文件中</p><p>在完成该实验之后读者也可以验证下设备描述符中内容和Windwos中读取到的USB设备描述符是否一致</p><p>右键单击弹出的U盘驱动器，单击属性，双击硬件选项卡中的STM Product USB Device，在弹出的页面中单击详细信息，最后在属性里面找到父系，可以在下面找到设备描述中的VID和PID，将其转换为十进制之后发现和我们设定值一致，具体如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/30.1_add_add.png" width = "700"></div><h2 id="3-1、CubeMX相关配置"><a href="#3-1、CubeMX相关配置" class="headerlink" title="3.1、CubeMX相关配置"></a>3.1、CubeMX相关配置</h2><h3 id="3-1-0、工程基本配置"><a href="#3-1-0、工程基本配置" class="headerlink" title="3.1.0、工程基本配置"></a>3.1.0、工程基本配置</h3><p>打开STM32CubeMX软件，单击ACCESS TO MCU SELECTOR选择开发板MCU（选择你使用开发板的主控MCU型号），选中MCU型号后单击页面右上角Start Project开始工程，具体如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/30.2.png" width = "700"></div><p>开始工程之后在配置主页面System Core&#x2F;RCC中配置HSE&#x2F;LSE晶振，在System Core&#x2F;SYS中配置Debug模式，具体如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/30.3.png" width = "700"></div><p>详细工程建立内容读者可以阅读“<a href="https://www.cnblogs.com/lc-guo/p/17937268">STM32CubeMX教程1 工程建立</a>”</p><h3 id="3-1-1、时钟树配置"><a href="#3-1-1、时钟树配置" class="headerlink" title="3.1.1、时钟树配置"></a>3.1.1、时钟树配置</h3><p>将时钟树中48MHz时钟配置为48MHz，也即将Main PLL（主锁相环）的Q参数调节为7，其他HCLK、PCLK1和PCLK2时钟仍然设置为STM32F407能达到的最高时钟频率，具体如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/30.4.png" width = "700"></div><h3 id="3-1-2、外设参数配置"><a href="#3-1-2、外设参数配置" class="headerlink" title="3.1.2、外设参数配置"></a>3.1.2、外设参数配置</h3><p>本实验需要需要初始化USART1作为输出信息渠道，具体配置步骤请阅读“<a href="https://www.cnblogs.com/lc-guo/p/17950348">STM32CubeMX教程9 USART&#x2F;UART 异步通信</a>”</p><p>另外由于需要通过SDIO读写SD卡，USB_OTG_FS工作在从机模式下，因此还需要配置SDIO和USB_OTG_FS</p><p>单击Pinout ＆ Configuration页面左边功能分类栏目中Connectivity&#x2F;SDIO，将其模式配置为4位宽总线SD卡，在下方参数配置Configuration&#x2F;Parameter Settings中将参数<font color="#be191c" style="background: #fef2f0"> SDIOCLK clock divide factor </font> 配置为4即可，具体参数含义请读者阅读<a href="https://www.cnblogs.com/lc-guo/p/17972264">STM32CubeMX教程27 SDIO - 读写SD卡</a>实验内容，具体配置如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/30.5.png" width = "700"></div><p>单击Pinout ＆ Configuration页面左边功能分类栏目中<font color="#fe2c24"><strong>Connectivity&#x2F;USB_OTG_FS，将其模式配置为仅从机（Device_Only），其他所有参数保持默认即可</strong></font>，具体配置如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/30.6.png" width = "700"></div><p>单击Pinout ＆ Configuration页面左边功能分类栏目中<font color="#fe2c24"><strong>Middleware and Software Packs&#x2F;USB DEVICE，将其模式配置为Mass Storage Class（大容量存储类），其他所有参数保持默认即可</strong></font>，具体配置如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/30.7.png" width = "700"></div><p><font color="#be191c" style="background: #fef2f0"> USBD_MAX_NUM_INTERFACES </font>（支持的最大接口数）：可选1 ~ 255，不应超过可用内存的总大小</p><p><font color="#be191c" style="background: #fef2f0"> USBD_MAX_NUM_CONFIGURATION </font>（支持的最大配置数）：可选1 ~ 255，不应超过可用内存的总大小</p><p><font color="#be191c" style="background: #fef2f0"> USBD_MAX_STR_DESC_SIZ </font>（字符串描述符的最大大小） ：可选1 bytes ~ 64 Kbytes，用于设定Device Descriptor页面中对该USB设备的一些描述字符串最大长度</p><p><font color="#be191c" style="background: #fef2f0"> USBD_SELF_POWERED </font>（启用自供电） ：可选Enable、Disable，此处选择Enable表示USB设备有自己的电源供应，不需要从USB总线上获取电力</p><p><font color="#be191c" style="background: #fef2f0"> USBD_DEBUG_LEVEL </font> （USBD调试级别）：可选0、1、2、3，具体调试级别如下所示</p><ol><li>0 : No debug message is shown </li><li>1 : only User message are shown  </li><li>2 : User + Error messages are shown  </li><li>3 : All message and interal debug message are shown</li></ol><p><font color="#be191c" style="background: #fef2f0"> MSC_MEDIA_PACKET </font>（媒体I&#x2F;O缓冲区大小）：可选1 bytes ~ 32 Kbytes，在USB大容量存储设备中，数据传输通常是以数据包为单位进行的，该宏定义了每个数据包的大小</p><h3 id="3-1-3、外设中断配置"><a href="#3-1-3、外设中断配置" class="headerlink" title="3.1.3、外设中断配置"></a>3.1.3、外设中断配置</h3><p>当在Middleware and SoftwarePacks中配置了USB_DEVICE的模式不为Disable时，便会自动开启USB_OTG的全局中断，且不可关闭，用户配置合适的中断优先级即可，具体配置如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/30.8.png" width = "700"></div><h2 id="3-2、生成代码"><a href="#3-2、生成代码" class="headerlink" title="3.2、生成代码"></a>3.2、生成代码</h2><h3 id="3-2-0、配置Project-Manager页面"><a href="#3-2-0、配置Project-Manager页面" class="headerlink" title="3.2.0、配置Project Manager页面"></a>3.2.0、配置Project Manager页面</h3><p>单击进入Project Manager页面，在左边Project分栏中修改工程名称、工程目录和工具链，然后在Code Generator中勾选“Gnerate peripheral initialization as a pair of ‘c&#x2F;h’ files per peripheral”，最后单击页面右上角GENERATE CODE生成工程，具体如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/30.9.png" width = "700"></div><p>详细Project Manager配置内容读者可以阅读“<a href="https://www.cnblogs.com/lc-guo/p/17937268">STM32CubeMX教程1 工程建立</a>”实验3.4.3小节</p><h3 id="3-2-1、设初始化调用流程"><a href="#3-2-1、设初始化调用流程" class="headerlink" title="3.2.1、设初始化调用流程"></a>3.2.1、设初始化调用流程</h3><p>打开生成的工程，观察目录结构，由于启用了USB_DEVICE，因此在工程目录种增加了USB设备库文件目录USB_Device_Library，在USB_DEVICE&#x2F;Target目录下增加了usbd_conf.c参数配置文件，在USB_DEVICE&#x2F;App目录下增加了usb_device.c初始化文件、usbd_desc.c描述文件和usbd_storage_if.c外设接口文件</p><p>其中USB_Device_Library目录下所有文件、usbd_conf.c、usbd_desc.c和usb_device.c几个文件均不需要在生成的工程代码中做任何修改，<font color="#fe2c24"><strong>用户唯一需要修改的是在usbd_storage_if.c外设接口文件中实现的大容量存储设备的接口函数</strong></font>，如下图所示为USB_DEVICE工作在Mass Storage Class下生成工程文件目录</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/30.10.png"></div><p><font color="#fe2c24"><strong>究竟是在哪里将需要我们在usbd_storage_if.c外设接口文件中重新实现的接口函数与USBD实例化对象联系起来的呢？</strong></font></p><p>在 usb_device.c 文件中只有MX_USB_DEVICE_Init()一个函数，该函数体内执行了四个函数对USB_DEVICE进行了初始化和启动操作</p><p>其中通过调用USBD_MSC_RegisterStorage(&amp;hUsbDeviceFS, &amp;USBD_Storage_Interface_fops_FS)函数，将一个USBD_StorageTypeDef类型的结构体与USBD实例化对象联系了起来，该USBD_StorageTypeDef类型的结构体中包含的正是usbd_storage_if.c外设接口文件中的所有接口函数指针</p><h3 id="3-2-2、外设中断调用流程"><a href="#3-2-2、外设中断调用流程" class="headerlink" title="3.2.2、外设中断调用流程"></a>3.2.2、外设中断调用流程</h3><p>未使用外设任何中断</p><h3 id="3-2-3、添加其他必要代码"><a href="#3-2-3、添加其他必要代码" class="headerlink" title="3.2.3、添加其他必要代码"></a>3.2.3、添加其他必要代码</h3><p><font color="#fe2c24"><strong>STM32CubeMX工程生成工程代码后，读者应注意手动修改MX_SDIO_SD_Init()函数中SD卡数据总线宽度从默认的4位手动修改为1位，否则SD卡将初始化失败</strong></font></p><p>根据上面的描述，唯一需要用户修改的地方是usbd_storage_if.c文件中的7个函数，与W25Q128芯片移植FatFs时类似，读者可以参考<a href="https://www.cnblogs.com/lc-guo/p/17983168">STM32CubeMX教程26 FatFs 文件系统 - W25Q128读写</a>实验“3.2、生成代码“小节内容，如下所示为重新实现后的七个函数源代码</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">/*usbd_storage_if.c*/</span><br><br><span class="hljs-comment">/*初始化函数无需修改，因为SD卡初始化在SDIO初始化函数中已完成*/</span><br><span class="hljs-type">int8_t</span> <span class="hljs-title function_">STORAGE_Init_FS</span><span class="hljs-params">(<span class="hljs-type">uint8_t</span> lun)</span><br>&#123;<br>  <span class="hljs-comment">/* USER CODE BEGIN 2 */</span><br> UNUSED(lun);<br><br>  <span class="hljs-keyword">return</span> (USBD_OK);<br>  <span class="hljs-comment">/* USER CODE END 2 */</span><br>&#125;<br><br><span class="hljs-comment">/*获取存储介质容量*/</span><br><span class="hljs-type">int8_t</span> <span class="hljs-title function_">STORAGE_GetCapacity_FS</span><span class="hljs-params">(<span class="hljs-type">uint8_t</span> lun, <span class="hljs-type">uint32_t</span> *block_num, <span class="hljs-type">uint16_t</span> *block_size)</span><br>&#123;<br>  <span class="hljs-comment">/* USER CODE BEGIN 3 */</span><br>HAL_SD_CardInfoTypeDef cardInfo;<br><span class="hljs-comment">//使用SDIO库函数</span><br>HAL_StatusTypeDef res = HAL_SD_GetCardInfo(&amp;hsd, &amp;cardInfo);<br><span class="hljs-keyword">if</span>(res == HAL_OK)<br>&#123;<br>*block_num  = cardInfo.BlockNbr;    <span class="hljs-comment">//块的个数</span><br>*block_size = cardInfo.BlockSize;   <span class="hljs-comment">//块大小=512字节</span><br>&#125;<br><span class="hljs-keyword">else</span><br>&#123;<br>*block_num  = STORAGE_BLK_NBR;    <span class="hljs-comment">//0x10000</span><br>*block_size = STORAGE_BLK_SIZ;      <span class="hljs-comment">//块大小=512字节</span><br>&#125;<br><br><span class="hljs-keyword">return</span> (USBD_OK);<br>  <span class="hljs-comment">/* USER CODE END 3 */</span><br>&#125;<br><br><span class="hljs-comment">/*返回存储介质是否准备好，无需修改*/</span><br><span class="hljs-type">int8_t</span> <span class="hljs-title function_">STORAGE_IsReady_FS</span><span class="hljs-params">(<span class="hljs-type">uint8_t</span> lun)</span><br>&#123;<br>  <span class="hljs-comment">/* USER CODE BEGIN 4 */</span><br>  UNUSED(lun);<br><br>  <span class="hljs-keyword">return</span> (USBD_OK);<br>  <span class="hljs-comment">/* USER CODE END 4 */</span><br>&#125;<br><br><span class="hljs-comment">/*返回存储介质是否写保护，，无需修改*/</span><br><span class="hljs-type">int8_t</span> <span class="hljs-title function_">STORAGE_IsWriteProtected_FS</span><span class="hljs-params">(<span class="hljs-type">uint8_t</span> lun)</span><br>&#123;<br>  <span class="hljs-comment">/* USER CODE BEGIN 5 */</span><br>  UNUSED(lun);<br><br>  <span class="hljs-keyword">return</span> (USBD_OK);<br>  <span class="hljs-comment">/* USER CODE END 5 */</span><br>&#125;<br><br><span class="hljs-comment">/*读取存储介质*/</span><br><span class="hljs-type">int8_t</span> <span class="hljs-title function_">STORAGE_Read_FS</span><span class="hljs-params">(<span class="hljs-type">uint8_t</span> lun, <span class="hljs-type">uint8_t</span> *buf, <span class="hljs-type">uint32_t</span> blk_addr, <span class="hljs-type">uint16_t</span> blk_len)</span><br>&#123;<br>  <span class="hljs-comment">/* USER CODE BEGIN 6 */</span><br><span class="hljs-comment">//读取超时时间10000ms</span><br><span class="hljs-type">uint32_t</span> Timeout = <span class="hljs-number">10000</span>;  <br>HAL_StatusTypeDef res = HAL_OK;<br>res = HAL_SD_ReadBlocks(&amp;hsd, buf, blk_addr, blk_len, Timeout);<br>HAL_SD_CardStateTypeDef status = HAL_SD_CARD_RECEIVING;<br><br><span class="hljs-keyword">if</span>(res == HAL_OK)<br>&#123;<br><span class="hljs-comment">//等待传输完成</span><br><span class="hljs-keyword">while</span>(status != HAL_SD_CARD_TRANSFER)   <br>status = HAL_SD_GetCardState(&amp;hsd);<br><span class="hljs-keyword">return</span> (USBD_OK);<br>&#125;<br><span class="hljs-keyword">else</span><br><span class="hljs-keyword">return</span> (USBD_FAIL);<br>  <span class="hljs-comment">/* USER CODE END 6 */</span><br>&#125;<br><br><span class="hljs-comment">/*向存储介质写入数据*/</span><br><span class="hljs-type">int8_t</span> <span class="hljs-title function_">STORAGE_Write_FS</span><span class="hljs-params">(<span class="hljs-type">uint8_t</span> lun, <span class="hljs-type">uint8_t</span> *buf, <span class="hljs-type">uint32_t</span> blk_addr, <span class="hljs-type">uint16_t</span> blk_len)</span><br>&#123;<br>  <span class="hljs-comment">/* USER CODE BEGIN 7 */</span><br><span class="hljs-comment">//写入超时时间10000ms</span><br><span class="hljs-type">uint32_t</span> Timeout = <span class="hljs-number">10000</span>;   <br>HAL_StatusTypeDef res = HAL_OK;<br>res = HAL_SD_WriteBlocks(&amp;hsd, buf, blk_addr, blk_len, Timeout);<br>HAL_SD_CardStateTypeDef status = HAL_SD_CARD_SENDING;<br><br><span class="hljs-keyword">if</span> (res == HAL_OK)<br>&#123;<br><span class="hljs-comment">//等待传输完成</span><br><span class="hljs-keyword">while</span>(status != HAL_SD_CARD_TRANSFER)   <br>status = HAL_SD_GetCardState(&amp;hsd);<br><span class="hljs-keyword">return</span> (USBD_OK);<br>&#125;<br><span class="hljs-keyword">else</span><br><span class="hljs-keyword">return</span> (USBD_FAIL);<br>  <span class="hljs-comment">/* USER CODE END 7 */</span><br>&#125;<br><br><span class="hljs-comment">/*返回最大支持LUN数量，无需修改*/</span><br><span class="hljs-type">int8_t</span> <span class="hljs-title function_">STORAGE_GetMaxLun_FS</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span><br>&#123;<br>  <span class="hljs-comment">/* USER CODE BEGIN 8 */</span><br>  <span class="hljs-keyword">return</span> (STORAGE_LUN_NBR - <span class="hljs-number">1</span>);<br>  <span class="hljs-comment">/* USER CODE END 8 */</span><br>&#125;<br></code></pre></td></tr></table></figure><h1 id="4、烧录验证"><a href="#4、烧录验证" class="headerlink" title="4、烧录验证"></a>4、烧录验证</h1><p>烧录程序，开发板上电后，使用USB线将Windows电脑与开发板上的USB_SLAVE接口连接，连接成功后电脑上会弹出与U盘插入时一致的弹窗（第一次可能会自动安装驱动，稍微等待等待），之后就可以在文件资源管理器中找到新的可用卷</p><p>单击打开该卷便可以像操作U盘一样对开发板上插入的SD卡进行文件管理，如下图所示笔者的SD卡里还保存着之前实验所写入的信息，读者可以自行尝试写入或删除文件</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/30.11.png" ></div><p>读者还可以自己将本实验与<a href="https://www.cnblogs.com/lc-guo/p/17983322">STM32CubeMX教程28 SDIO - 使用FatFs文件系统读写SD卡</a>实验结合来验证使用FatFs读写SD卡操作是否真正成功，笔者通过开发板上的KEY0按键删除了原本写入SD卡中的test.txt文件，复位开发板重新识别SD卡之后，在Windwos资源管理器里查看发现test.txt文件确实被删除了，具体操作如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/30.12.gif" width = "700"></div><h1 id="5、常用函数"><a href="#5、常用函数" class="headerlink" title="5、常用函数"></a>5、常用函数</h1><p>请阅读<a href="https://www.cnblogs.com/lc-guo/p/17983322">STM32CubeMX教程28 SDIO - 使用FatFs文件系统读写SD卡</a>实验“7、常用函数”小节</p><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p><a href="https://www.epubit.com/bookDetails?id=UBc85046ed7208">STM32Cube高效开发教程（高级篇）</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>STM32CubeMX</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>STM32CubeMX教程29 USB_HOST - 使用FatFs文件系统读写U盘</title>
    <link href="/2024/01/26/STM32CubeMX%E6%95%99%E7%A8%8B29-USB-HOST-%E4%BD%BF%E7%94%A8FatFs%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E8%AF%BB%E5%86%99U%E7%9B%98/"/>
    <url>/2024/01/26/STM32CubeMX%E6%95%99%E7%A8%8B29-USB-HOST-%E4%BD%BF%E7%94%A8FatFs%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E8%AF%BB%E5%86%99U%E7%9B%98/</url>
    
    <content type="html"><![CDATA[<h1 id="1、准备材料"><a href="#1、准备材料" class="headerlink" title="1、准备材料"></a>1、准备材料</h1><p><a href="http://47.111.11.73/docs/boards/stm32/zdyz_stm32f407_explorerV3.html">正点原子stm32f407探索者开发板V2.4</a></p><p>STM32CubeMX软件（<a href="https://www.st.com/en/development-tools/stm32cubemx.html">Version 6.10.0</a>）</p><p>keil µVision5 IDE（<a href="https://www.keil.com/download/product/">MDK-Arm</a>）</p><p><a href="https://www.st.com/zh/development-tools/stsw-link009.html">ST-LINK&#x2F;V2驱动</a></p><p><a href="https://doc.embedfire.com/stm32_products/must_read/zh/latest/doc/quickstart/DAP/DAP.html">野火DAP仿真器</a></p><p><a href="http://www.openedv.com/docs/tool/ruanjian/ATK-XCOM.html">XCOM V2.6串口助手</a></p><h1 id="2、实验目标"><a href="#2、实验目标" class="headerlink" title="2、实验目标"></a>2、实验目标</h1><p>使用STM32CubeMX软件配置STM32F407开发板<font color="#fe2c24"><strong>USB_OTG_FS为工作在Mass Storage Host Class（大容量存储主机类）模式下的USB_HOST（USB主机），并使用FatFs文件系统对插入开发板的U盘进行读写等操作</strong></font></p><h1 id="3、USB概述"><a href="#3、USB概述" class="headerlink" title="3、USB概述"></a>3、USB概述</h1><h2 id="3-1、USB协议"><a href="#3-1、USB协议" class="headerlink" title="3.1、USB协议"></a>3.1、USB协议</h2><p>通用串行总线（Universal Serial Bus，简称USB）是1994年提出的一种支持热插拔的外部传输总线，现在不管是在什么设备上都可以非常容易看到它，USB协议从诞生到如今经历了很多次升级换代，如下图所示为USB历史版本号及传输速度等相关信息 <em>（注释1）</em></p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/29.1.png" width = "700"></div><p>另外在USB2.0的基础上还扩展出了一种既可以工作为USB主机又可以工作为USB外设（但不能同时）的<font color="#fe2c24"><strong>协议标准USB on the go（USB_OTG），易于进行角色的转换</strong></font></p><h2 id="3-2、USB设备"><a href="#3-2、USB设备" class="headerlink" title="3.2、USB设备"></a>3.2、USB设备</h2><p><font color="#fe2c24"><strong>一个USB系统包括USB主机（USB HOST）、USB外设（USB DEVICE）和USB连接三个部分，USB外设又可以分为USB功能外设（USB FUNCTION）和USB集线器（USB HUB）</strong></font></p><p>一个USB系统只能有一个USB主机，但USB主机通过连接USB集线器可以扩展USB端口数量，最多可以有127个USB从机，USB主机负责控制所有的USB外设，而USB外设接受USB主机的控制来实现某个具体的功能，USB设备分类及连接方式具体如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/29.2.png" width = "700"></div><h2 id="3-3、USB接口"><a href="#3-3、USB接口" class="headerlink" title="3.3、USB接口"></a>3.3、USB接口</h2><p>在USB协议从USB 1.0发展到今天USB4（虽然还未普及），速度有了很大的进步，接口的类型也多种多样（未来可能会暂时稳定在Type-C），有Type A&#x2F;B&#x2F;C，还有衍生出来的MINI类型接口，micro类型接口等，不同类型接口适配的USB协议也不尽相同，如下图所示为USB机械电子标准一览表 <em>（注释1）</em></p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/29.3.png" width = "700"></div><h2 id="3-4、硬件原理"><a href="#3-4、硬件原理" class="headerlink" title="3.4、硬件原理"></a>3.4、硬件原理</h2><p><font color="#fe2c24"><strong>STM32F407的两个USB_OTG都内置了PHY，因此无需在外部添加额外的PHY芯片</strong></font>，当USB仅工作在主机&#x2F;从机模式下时，USB座只需要VBUS、D+、D-和Vss共4根线，其中D+&#x2F;D-负责传输差分信号，在主机模式下VBUS用于给插入主机的USB设备供电，在从机模式下VBUS可以用于监测主机提供的电源，Vss为接地端</p><p>而当USB工作在双角色设备时，USB座除了需要上述的4根线外，还需要一根额外的ID信号线，该信号线用于判断插入USB接口的设备为主机设备还是从机设备，在内置的PHY中ID线拥有上拉电阻，<font color="#fe2c24"><strong>当检测到输入的ID线为高电平时，此时认为该USB设备为从机设备，否则认为该USB设备为主机设备</strong></font></p><p>当USB工作在仅主机模式（A类设备）下时，对于插入主机的USB设备需要由主机提供电源，而主机提供的电源一般由某一个引脚控制，方便在不使用USB设备的时候切断电源，节省能源，如下图所示为USB_OTG工作在仅主机模式下的硬件结构框图 <em>（注释2）</em></p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/29.4.png" width = "700"></div><p>当USB工作在仅从机模式（B类设备）下时，此时开发板USB接口的电源应该由其他的主机提供，这个时候VBUS信号线可以连接STM32F407的某一个引脚（默认为PA9），通过配置该引脚为输入可以监测其他主机提供给本从机设备的电压有无，如下图所示为USB_OTG工作在仅从机模式下的硬件结构框图</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/29.5.png" width = "700"></div><p>当USB工作在双角色设备（DRD）下时，通过输入的ID线决定该USB设备为主机设备还是从机设备，其硬件原理读者可以理解为A&#x2F;B两类设备的合并，ID线为高电平时，此时认为该USB设备为从机设备，否则认为该USB设备为主机设备，如下图所示为USB_OTG工作在双角色设备下的硬件结构框图</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/29.6.png" width = "700"></div><h1 id="4、实验流程"><a href="#4、实验流程" class="headerlink" title="4、实验流程"></a>4、实验流程</h1><h2 id="4-0、前提知识"><a href="#4-0、前提知识" class="headerlink" title="4.0、前提知识"></a>4.0、前提知识</h2><p>注意：由于USB协议源码比较复杂，故本实验对其源码具体内容一概不涉及，仅作应用，读者阅读本文将了解如何使用STM32CubeMX配置STM32F407作为USB主机读写SD里的内容</p><p><font color="#fe2c24"><strong>STM32F407片上集成了 USB_OTG_FS（全速，最高12Mb&#x2F;s） 和 USB_OTG_HS（高速，最高480Mb&#x2F;s） 两个USB_OTG，本实验我们将使用 USB_OTG_FS</strong></font>，将其配置为大容量存储主机类，使开发板工作在主机模式下，对接入开发板主机USB接口的大容量存储设备（U盘）进行读写等操作</p><p>片上集成的USB_OTG_FS挂载在APB2总线上，USB_OTG_HS直接挂载在AHB（应用总线）上，这两个USB_OTG内部均集成了PHY，硬件上无需外部重复设计，如下图所示为STM32F4XX的功能概览框图 <em>（注释2）</em></p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/29.7.png" width = "700"></div><p>USB_OTG_FS主要由OTG FS内核和PHY组成，时钟树上的48MHz时钟为其OTG FS内核提供了48MHz的USB时钟，如下图所示为其OTG_FS功能框图</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/29.8.png" width = "700"></div><p>笔者使用的开发板上有一个USB_HOST接口和一个USB_SALVE接口，这两个USB接口都是使用的USB_OTG_FS实现的，<font color="#fe2c24"><strong>在使用USB主机&#x2F;从机时需要将USB&#x2F;CNA排针座上的跳线帽选择为USB</strong></font>，同时在硬件原理图中还有一个控制USB作为主机时提供给USB外设设备电源VBUS的引脚PA15，该引脚通过一个三极管和一个P-MOS管组成了开关电路，具体硬件原理图如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/29.9.png" width = "700"></div><h2 id="4-1、CubeMX相关配置"><a href="#4-1、CubeMX相关配置" class="headerlink" title="4.1、CubeMX相关配置"></a>4.1、CubeMX相关配置</h2><h3 id="4-1-0、工程基本配置"><a href="#4-1-0、工程基本配置" class="headerlink" title="4.1.0、工程基本配置"></a>4.1.0、工程基本配置</h3><p>打开STM32CubeMX软件，单击ACCESS TO MCU SELECTOR选择开发板MCU（选择你使用开发板的主控MCU型号），选中MCU型号后单击页面右上角Start Project开始工程，具体如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/29.10.png" width = "700"></div><p>开始工程之后在配置主页面System Core&#x2F;RCC中配置HSE&#x2F;LSE晶振，在System Core&#x2F;SYS中配置Debug模式，具体如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/29.11.png" width = "700"></div><p>详细工程建立内容读者可以阅读“<a href="https://www.cnblogs.com/lc-guo/p/17937268">STM32CubeMX教程1 工程建立</a>”</p><h3 id="4-1-1、时钟树配置"><a href="#4-1-1、时钟树配置" class="headerlink" title="4.1.1、时钟树配置"></a>4.1.1、时钟树配置</h3><p>当在STM32CubeMX中启用USB_OTG功能后，时钟树中48MHz时钟便可以进行调节，该时钟一般如其名字一样配置为48MHz即可，也即将Main PLL（主锁相环）的Q参数调节为7即可，其他HCLK、PCLK1和PCLK2时钟仍然设置为STM32F407能达到的最高时钟频率，具体如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/29.12.png" width = "700"></div><h3 id="4-1-2、外设参数配置"><a href="#4-1-2、外设参数配置" class="headerlink" title="4.1.2、外设参数配置"></a>4.1.2、外设参数配置</h3><p>本实验需要需要初始化开发板上WK_UP、KEY2、KEY1和KEY0用户按键，具体配置步骤请阅读“<a href="https://www.cnblogs.com/lc-guo/p/17937704">STM32CubeMX教程2 GPIO输出 - 点亮LED灯</a>”</p><p>本实验需要需要初始化USART1作为输出信息渠道，具体配置步骤请阅读“<a href="https://www.cnblogs.com/lc-guo/p/17950348">STM32CubeMX教程9 USART&#x2F;UART 异步通信</a>”</p><p>单击Pinout ＆ Configuration页面左边功能分类栏目中<font color="#fe2c24"><strong>Connectivity&#x2F;USB OTG_FS，在模式配置中将其配置为Host_Only（仅主机）模式，不勾选Activate_SOF 和 Activate_VBUS</strong></font>，在下方的Configuration栏目中设置参数<font color="#be191c" style="background: #fef2f0"> Speed </font>为主机全速12MBit&#x2F;s，参数<font color="#be191c" style="background: #fef2f0"> Signal start of frame </font>选择Disabled，具体配置如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/29.13.png" width = "700"></div><p><font color="#be191c" style="background: #fef2f0"> Mode&#x2F;OTG&#x2F;Dual Role_Device </font>（双角色设备模式）：工作在双角色设备模式，通过ID线切换角色</p><p><font color="#be191c" style="background: #fef2f0"> Host_Only </font>（仅主机模式）：工作在主机模式下</p><p><font color="#be191c" style="background: #fef2f0"> Device_Only </font>（仅外设模式）：工作在外设模式下</p><p><font color="#be191c" style="background: #fef2f0"> Activate_SOF </font> （启用帧的起始信号引脚PA8）：不使能，读写SD卡无需SOF信号</p><p><font color="#be191c" style="background: #fef2f0"> Activate_VBUS </font>（激活VBUS PA9控制引脚）：笔者开发板上未使用PA9引脚，因此此处不激活</p><p><font color="#be191c" style="background: #fef2f0"> Speed </font>（USB主机速度设置）：可选12Mbit&#x2F;s、1.5Mbit&#x2F;s</p><p><font color="#be191c" style="background: #fef2f0"> Signal start of frame </font>（帧起始信号）：不使能</p><p>然后需要配置USB主机的电源控制引脚，在Pinout view（引脚功能预览）页面中找到<font color="#fe2c24"><strong>控制USB主机电源的引脚PA15，左键单击将其配置为GPIO_Output</strong></font></p><p>接下来单击Pinout ＆ Configuration页面左边功能分类栏目最下面的Middleware and SoftwarePacks，当USB_OTG配置为Host_Only时该栏目下的USB_HOST将变为可选状态</p><p><font color="#fe2c24"><strong>选择其中的USB_HOST，在模式配置中将Class for FS IP的模式选择为Mass Storage Host Class（大容量存储主机类）</strong></font>，下方的Configuration&#x2F;Prameter Settings无需修改，保持默认即可，具体配置如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/29.14.png" width = "700"></div><p>最后需要配置FatFs文件系统，<font color="#fe2c24"><strong>单击Middleware and SoftwarePacks中的FATFS，将其模式配置为USB Disk，在下方Configuration&#x2F;Set Defines修改参数 CODE_PAGE (Code page on target) 为 Simplified Chinese (DBCS)，其他参数保持默认即可</strong></font>，具体配置如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/29.15.png" width = "700"></div><h3 id="4-1-3、外设中断配置"><a href="#4-1-3、外设中断配置" class="headerlink" title="4.1.3、外设中断配置"></a>4.1.3、外设中断配置</h3><p>当在Middleware and SoftwarePacks中配置了USB_HOST的模式不为Disable时，便会自动开启USB_OTG的全局中断，且不可关闭，用户配置合适的中断优先级即可，具体配置如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/29.16.png" width = "700"></div><h2 id="4-2、生成代码"><a href="#4-2、生成代码" class="headerlink" title="4.2、生成代码"></a>4.2、生成代码</h2><h3 id="4-2-0、配置Project-Manager页面"><a href="#4-2-0、配置Project-Manager页面" class="headerlink" title="4.2.0、配置Project Manager页面"></a>4.2.0、配置Project Manager页面</h3><p>单击进入Project Manager页面，在左边Project分栏中修改工程名称、工程目录和工具链，然后在Code Generator中勾选“Gnerate peripheral initialization as a pair of ‘c&#x2F;h’ files per peripheral”，最后单击页面右上角GENERATE CODE生成工程，具体如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/29.17.png" width = "700"></div><p>详细Project Manager配置内容读者可以阅读”<a href="https://www.cnblogs.com/lc-guo/p/17937268">STM32CubeMX教程1 工程建立</a>”实验3.4.3小节</p><h3 id="4-2-1、设初始化调用流程"><a href="#4-2-1、设初始化调用流程" class="headerlink" title="4.2.1、设初始化调用流程"></a>4.2.1、设初始化调用流程</h3><p>在生成的工程代码中增加了USB_HOST相关初始化及其他用到的外设&#x2F;中间件功能初始化函数，同时读者可以发现，在以往配置好的工程生成的工程代码中，while主循环中并无任何程序，但是在本实验USB_HOST中增加了名为 MX_USB_HOST_Process() 的函数，该函数仅调用了 USBH_Process() 函数</p><p><font color="#fe2c24"><strong>USBH_Process() 函数是USB Core的后台进程函数，它负责监测USB主机接口的状态变化，在U盘热插拔的时候，可以判断出此时接口状态，同时如果定义了用户的回调函数，还会根据不同的接口状态调用对应该状态的用户定义的回调函数</strong></font></p><p>CubeMX在工程代码usb_host.c中自动生成了USBH_UserProcess()用户回调函数，在该函数中用户可以根据不同状态调用自己定义的函数；当然如果读者不需要热插拔，U盘一直插在主机USB接口上，接口状态不会发生变化，那么注释掉该后台进程函数也可以</p><hr><p>接下来我们来根据生成的工程代码，<font color="#fe2c24"><strong>给读者详细介绍USB_HOST工作流程</strong></font>，读者简单了解即可</p><p>在开发板上电进入主循环后会执行USB_HOST的初始化函数MX_USB_HOST_Init()，在该函数中分别调用了以下三个函数（三个函数位于usb_host.c中）</p><ol><li>USBH_Init(&amp;hUsbHostFS, USBH_UserProcess, HOST_FS)</li><li>USBH_RegisterClass(&amp;hUsbHostFS, USBH_MSC_CLASS)</li><li>USBH_Start(&amp;hUsbHostFS)</li></ol><p>第一个函数<font color="#fe2c24"><strong>用于USB_HOST的初始化</strong></font>，对我们实例化的USBH_HandleTypeDef结构体对象内部参数进行了配置，并且将名为USBH_UserProcess的函数指针赋值给USBH_HandleTypeDef结构体对象内部最后一个函数指针参数</p><p>第二个函数<font color="#fe2c24"><strong>用于注册当前USB_HOST工作的类别</strong></font>，开发板上的USB_HOST只能工作在一种模式下，不能同时工作在不同模式下，因此在该函数中判断注册的类数量是否超过最大值1，没有超过就设置USBH_HandleTypeDef结构体中ClassNumber为0，pClass为函数参数中指定的工作类别，这里为大容量主机存储类USBH_MSC_CLASS</p><p>第三个函数<font color="#fe2c24"><strong>用于启动USB_HOST内核，同时激活VBUS电源端口</strong></font></p><hr><p>执行完上述三个函数后退出USB_HOST的初始化函数MX_USB_HOST_Init()后，<font color="#fe2c24"><strong>如果之前就在开发板USB口插入了U盘，此时USB接口的状态应该为APPLICATION_START</strong></font>，这个时候还不能够对插入的U盘进行FatFs文件系统的挂载</p><p>需要进入while主循环中不断执行USB Core的后台进程函数MX_USB_HOST_Process()<font color="#fe2c24"><strong>直到接口状态变为APPLICATION_READY才可以挂载文件系统并通过上层API对U盘文件进行操作，此时如果拔掉U盘，接口状态会改变为APPLICATION_DISCONNECT</strong></font></p><p>读者可以将usb_host.c文件中的用户回调函数USBH_UserProcess()增加串口打印信息的功能，然后编译烧录程序到开发板并插拔U盘，观察串口助手接收到开发板传来的消息就可以清楚的看到这一变化，具体源代码如下所示</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">/*</span><br><span class="hljs-comment"> * user callback definition</span><br><span class="hljs-comment"> */</span><br><span class="hljs-type">static</span> <span class="hljs-type">void</span> <span class="hljs-title function_">USBH_UserProcess</span>  <span class="hljs-params">(USBH_HandleTypeDef *phost, <span class="hljs-type">uint8_t</span> id)</span><br>&#123;<br>  <span class="hljs-comment">/* USER CODE BEGIN CALL_BACK_1 */</span><br>  <span class="hljs-keyword">switch</span>(id)<br>  &#123;<br>  <span class="hljs-keyword">case</span> HOST_USER_SELECT_CONFIGURATION:<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;HOST_USER_SELECT_CONFIGURATION\r\n&quot;</span>);<br>  <span class="hljs-keyword">break</span>;<br><br>  <span class="hljs-keyword">case</span> HOST_USER_DISCONNECTION:<br>  Appli_state = APPLICATION_DISCONNECT;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Appli_state = APPLICATION_DISCONNECT\r\n&quot;</span>);<br>  <span class="hljs-keyword">break</span>;<br><br>  <span class="hljs-keyword">case</span> HOST_USER_CLASS_ACTIVE:<br>  Appli_state = APPLICATION_READY;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Appli_state = APPLICATION_READY\r\n&quot;</span>);<br>  <span class="hljs-keyword">break</span>;<br><br>  <span class="hljs-keyword">case</span> HOST_USER_CONNECTION:<br>  Appli_state = APPLICATION_START;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Appli_state = APPLICATION_START\r\n&quot;</span>);<br>  <span class="hljs-keyword">break</span>;<br><br>  <span class="hljs-keyword">default</span>:<br>  <span class="hljs-keyword">break</span>;<br>  &#125;<br>  <span class="hljs-comment">/* USER CODE END CALL_BACK_1 */</span><br>&#125;<br></code></pre></td></tr></table></figure><p>另外关于FatFs的初始化已经被CubeMX软件自动完成，读者可以阅读<a href="https://www.cnblogs.com/lc-guo/p/17983322">STM32CubeMX教程28 SDIO - 使用FatFs文件系统读写SD卡</a>实验“3.2.1、外设初始化调用流程”小节了解此过程</p><h3 id="4-2-2、外设中断调用流程"><a href="#4-2-2、外设中断调用流程" class="headerlink" title="4.2.2、外设中断调用流程"></a>4.2.2、外设中断调用流程</h3><p>在CubeMX中配置了USB_HOST的模式不为Disable时，便会强制自动开启USB_OTG的全局中断，在生成的工程文件stm32f4xx_it.c中将增加OTG_FS_IRQHandler()这个USB全局中断处理函数</p><p>读者对于其调用内容无需了解，也不需要任何修改（也不希望读者修改），<font color="#fe2c24"><strong>在使用USB的一系列回调函数时仅需要在usb_host.c文件中的用户回调函数USBH_UserProcess()处修改即可</strong></font></p><h3 id="4-2-3、添加其他必要代码"><a href="#4-2-3、添加其他必要代码" class="headerlink" title="4.2.3、添加其他必要代码"></a>4.2.3、添加其他必要代码</h3><p>在生成的工程代码中增加使用FatFs库中API进行文件操作的函数，包括挂载文件系统、显示存储设备信息、读&#x2F;写TXT文件、获取文件信息、扫描文件列表和删除文件等函数，笔者将其封装在了file_operate.c &#x2F; file_operate.h文件中，具体的源代码如下所示</p><p><strong>file_operate.c文件</strong></p><p>与<a href="https://www.cnblogs.com/lc-guo/p/17983168">STM32CubeMX教程26 FatFs 文件系统 - W25Q128读写</a>实验中实现的file_operate.c文件一致，除了测试写的函数FatFs_WriteTXTFile()中写入SD卡的内容修改为了“Hello,USB_HOST!\n”</p><p><strong>file_operate.h文件</strong></p><p>与<a href="https://www.cnblogs.com/lc-guo/p/17983168">STM32CubeMX教程26 FatFs 文件系统 - W25Q128读写</a>实验中实现的file_operate.h文件一致，除了下面三个宏定义需要修改为本实验的SD卡相关内容，修改内容如下所示</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">/*定义自己的存储设备*/</span><br><span class="hljs-comment">/*用户存储设备扇区字节数*/</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> User_Sector 512</span><br><span class="hljs-comment">/*用户存储设备FatFs对象*/</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> User_FatFs USBHFatFS</span><br><span class="hljs-comment">/*用户存储设备卷路径*/</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> User_SDPath USBHPath</span><br></code></pre></td></tr></table></figure><p>向工程中添加.c&#x2F;.h文件的步骤请阅读“<a href="https://www.cnblogs.com/lc-guo/p/17965519">STM32CubeMX教程19 I2C - MPU6050驱动</a>”实验3.2.3小节</p><p>这里需要读者<font color="#fe2c24"><strong>重点理解U盘在插入开发板主机的时候状态的变化过程</strong></font>，存在的四种状态是在usb_host.h文件中一个ApplicationTypeDef结构体中定义的，如下源码所示</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">/** Status of the application. */</span><br><span class="hljs-keyword">typedef</span> <span class="hljs-class"><span class="hljs-keyword">enum</span> &#123;</span><br>  APPLICATION_IDLE = <span class="hljs-number">0</span>,      <span class="hljs-comment">/*空闲*/</span><br>  APPLICATION_START,         <span class="hljs-comment">/*开始*/</span><br>  APPLICATION_READY,         <span class="hljs-comment">/*已准备好*/</span><br>  APPLICATION_DISCONNECT     <span class="hljs-comment">/*断开连接*/</span><br>&#125;ApplicationTypeDef;<br></code></pre></td></tr></table></figure><p>首先开发板上电复位，假设此时U盘还未插入开发板主机，在调用MX_USB_HOST_Init()对USB_HOST初始化之后应该不断执行USB Core的后台进程函数MX_USB_HOST_Process()，此时接口状态应该一直为APPLICATION_DISCONNECT状态</p><p>然后将U盘插入开发板主机，此时由于不断执行USB Core的后台进程函数，接口状态立马改变为APPLICATION_START状态 </p><p>当接口状态变为APPLICATION_START状态后，紧接着再执行几次USB Core的后台进程函数MX_USB_HOST_Process()，如果一切正常，接口状态应该改变为APPLICATION_READY，此时便可以在U盘上挂载FatFs文件系统，最后利用FatFs上层API对U盘进行读写等操作了</p><p>根据以上描述，构建的测试程序源代码如下所示，主循环中的按键逻辑控制程序与<a href="https://www.cnblogs.com/lc-guo/p/17983168">STM32CubeMX教程26 FatFs 文件系统 - W25Q128读写</a>实验中的一致</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">/*主函数初始化完进入主循环前*/</span><br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Reset\r\n&quot;</span>);<br><span class="hljs-keyword">while</span>(<span class="hljs-number">1</span>)<br>&#123;<br><span class="hljs-comment">//初始化完毕应不断执行该函数更新接口状态</span><br>MX_USB_HOST_Process();<br><span class="hljs-comment">//当接口状态Ready便可以退出循环</span><br><span class="hljs-keyword">if</span>(Appli_state == APPLICATION_READY) <span class="hljs-keyword">break</span>;<br>&#125;<br><span class="hljs-comment">//挂载文件系统</span><br>Mount_FatFs();<br>FatFs_GetDiskInfo();<br><br><span class="hljs-comment">/*主函数主循环中*/</span><br><span class="hljs-comment">/*按键WK_UP被按下*/</span><br><span class="hljs-keyword">if</span>(HAL_GPIO_ReadPin(WK_UP_GPIO_Port,WK_UP_Pin) == GPIO_PIN_SET)<br>&#123;<br>HAL_Delay(<span class="hljs-number">50</span>);<br><span class="hljs-keyword">if</span>(HAL_GPIO_ReadPin(WK_UP_GPIO_Port,WK_UP_Pin) == GPIO_PIN_SET)<br>&#123;<br>FatFs_ScanDir(<span class="hljs-string">&quot;0:/&quot;</span>);<br><span class="hljs-keyword">while</span>(HAL_GPIO_ReadPin(WK_UP_GPIO_Port,WK_UP_Pin));<br>&#125;<br>&#125;<br><br><span class="hljs-comment">/*按键KEY2被按下*/</span><br><span class="hljs-keyword">if</span>(HAL_GPIO_ReadPin(KEY2_GPIO_Port,KEY2_Pin) == GPIO_PIN_RESET)<br>&#123;<br>HAL_Delay(<span class="hljs-number">50</span>);<br><span class="hljs-keyword">if</span>(HAL_GPIO_ReadPin(KEY2_GPIO_Port,KEY2_Pin) == GPIO_PIN_RESET)<br>&#123;<br>FatFs_WriteTXTFile(<span class="hljs-string">&quot;test.txt&quot;</span>,<span class="hljs-number">2016</span>,<span class="hljs-number">11</span>,<span class="hljs-number">15</span>);<br><span class="hljs-keyword">while</span>(!HAL_GPIO_ReadPin(KEY2_GPIO_Port,KEY2_Pin));<br>&#125;<br>&#125;<br><br><span class="hljs-comment">/*按键KEY1被按下*/</span><br><span class="hljs-keyword">if</span>(HAL_GPIO_ReadPin(KEY1_GPIO_Port,KEY1_Pin) == GPIO_PIN_RESET)<br>&#123;<br>HAL_Delay(<span class="hljs-number">50</span>);<br><span class="hljs-keyword">if</span>(HAL_GPIO_ReadPin(KEY1_GPIO_Port,KEY1_Pin) == GPIO_PIN_RESET)<br>&#123;<br>FatFs_ReadTXTFile(<span class="hljs-string">&quot;test.txt&quot;</span>);<br>FatFs_GetFileInfo(<span class="hljs-string">&quot;test.txt&quot;</span>);<br><span class="hljs-keyword">while</span>(!HAL_GPIO_ReadPin(KEY1_GPIO_Port,KEY1_Pin));<br>&#125;<br>&#125;<br><br><span class="hljs-comment">/*按键KEY0被按下*/</span><br><span class="hljs-keyword">if</span>(HAL_GPIO_ReadPin(KEY0_GPIO_Port,KEY0_Pin) == GPIO_PIN_RESET)<br>&#123;<br>HAL_Delay(<span class="hljs-number">50</span>);<br><span class="hljs-keyword">if</span>(HAL_GPIO_ReadPin(KEY0_GPIO_Port,KEY0_Pin) == GPIO_PIN_RESET)<br>&#123;<br>FatFs_DeleteFile(<span class="hljs-string">&quot;test.txt&quot;</span>);<br><span class="hljs-keyword">while</span>(!HAL_GPIO_ReadPin(KEY0_GPIO_Port,KEY0_Pin));<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="5、烧录验证"><a href="#5、烧录验证" class="headerlink" title="5、烧录验证"></a>5、烧录验证</h1><p>烧录程序，开发板上电后将U盘插入开发板主机中，当接口状态变为APPLICATION_READY后，在U盘上挂载文件系统，挂载成功后会输出读取到的U盘的信息，接下来按照下面几个步骤使用FatFs文件系统对U盘进行读写等测试</p><ol><li>按下开发板上的WK_UP按键，扫描U盘根目录下所有文件，并通过串口将文件列表输出</li><li>按下开发板上的KEY2按键，在U盘根目录创建一个”test.txt“文件，将一个字符串”Hello,USB_HOST!”写入该文件中，该字符串大小为17个字节（该字符串末尾包括了一个’\n‘和一个‘\0’）</li><li>按下开发板上的KEY1按键，读取U盘根目录下名为”test.txt“的文件，将其中的内容通过串口输出，然后读取该文件的信息（大小，属性，名称，创建时间），并通过串口输出</li><li>按下开发板上的KEY0按键，删除U盘根目录下名为”test.txt“的文件</li></ol><p>最后将U盘从开发板主机USB接口拔出，整个实验过程串口具体的输出情况如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/29.18.gif"></div><p>写入”test.txt“文件信息到U盘后不删除，将U盘插入Windows电脑USB接口，利用第三方软件（笔者使用了 DiskGenius 软件）查看U盘中的内容（U盘被挂载了FatFs文件系统，所以Windows无法正常读取卷），发现U盘根目录下有一个名为“test.txt”的文件夹，其中内容为”Hello,USB_HOST!”，如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/29.19.png" width = "700"></div><h1 id="6、常用函数"><a href="#6、常用函数" class="headerlink" title="6、常用函数"></a>6、常用函数</h1><p>由于U盘往往内存较大，因此本实验没有使用按照根据地址对U盘进行读写等操作的函数，而是直接使用FatFs的上层API来对U盘进行读写等操作，对于FatFs的上层API常用函数读者可以阅读<a href="https://www.cnblogs.com/lc-guo/p/17983168">STM32CubeMX教程26 FatFs 文件系统 - W25Q128读写</a>实验“5、常用函数”小节，以下列出了一些最常用的按照地址对U盘读写等操作的函数</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">/*检查lun是否已准备好*/</span><br><span class="hljs-type">uint8_t</span> <span class="hljs-title function_">USBH_MSC_UnitIsReady</span><span class="hljs-params">(USBH_HandleTypeDef *phost, <span class="hljs-type">uint8_t</span> lun)</span><br><span class="hljs-comment">/*读*/</span><br>USBH_StatusTypeDef <span class="hljs-title function_">USBH_MSC_Read</span><span class="hljs-params">(USBH_HandleTypeDef *phost,</span><br><span class="hljs-params">                                 <span class="hljs-type">uint8_t</span> lun,</span><br><span class="hljs-params">                                 <span class="hljs-type">uint32_t</span> address,</span><br><span class="hljs-params">                                 <span class="hljs-type">uint8_t</span> *pbuf,</span><br><span class="hljs-params">                                 <span class="hljs-type">uint32_t</span> length)</span><br><span class="hljs-comment">/*写*/</span><br>USBH_StatusTypeDef <span class="hljs-title function_">USBH_MSC_Write</span><span class="hljs-params">(USBH_HandleTypeDef *phost,</span><br><span class="hljs-params">                                  <span class="hljs-type">uint8_t</span> lun,</span><br><span class="hljs-params">                                  <span class="hljs-type">uint32_t</span> address,</span><br><span class="hljs-params">                                  <span class="hljs-type">uint8_t</span> *pbuf,</span><br><span class="hljs-params">                                  <span class="hljs-type">uint32_t</span> length)</span><br><span class="hljs-comment">/*获取lun信息*/</span><br>USBH_StatusTypeDef <span class="hljs-title function_">USBH_MSC_GetLUNInfo</span><span class="hljs-params">(USBH_HandleTypeDef *phost, <span class="hljs-type">uint8_t</span> lun, MSC_LUNTypeDef *info)</span><br></code></pre></td></tr></table></figure><h1 id="7、注释详解"><a href="#7、注释详解" class="headerlink" title="7、注释详解"></a>7、注释详解</h1><p><em>注释1</em>：图片来源 <a href="https://zh.wikipedia.org/wiki/USB">维基百科 - USB</a></p><p><em>注释2</em>：图片来源 STM32F4XX 中文参考手册 RM009</p><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p><a href="https://www.epubit.com/bookDetails?id=UBc85046ed7208">STM32Cube高效开发教程（高级篇）</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>STM32CubeMX</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>STM32CubeMX教程28 SDIO - 使用FatFs文件系统读写SD卡</title>
    <link href="/2024/01/26/STM32CubeMX%E6%95%99%E7%A8%8B28-SDIO-%E4%BD%BF%E7%94%A8FatFs%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E8%AF%BB%E5%86%99SD%E5%8D%A1/"/>
    <url>/2024/01/26/STM32CubeMX%E6%95%99%E7%A8%8B28-SDIO-%E4%BD%BF%E7%94%A8FatFs%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E8%AF%BB%E5%86%99SD%E5%8D%A1/</url>
    
    <content type="html"><![CDATA[<h1 id="1、准备材料"><a href="#1、准备材料" class="headerlink" title="1、准备材料"></a>1、准备材料</h1><p><a href="http://47.111.11.73/docs/boards/stm32/zdyz_stm32f407_explorerV3.html">正点原子stm32f407探索者开发板V2.4</a></p><p>STM32CubeMX软件（<a href="https://www.st.com/en/development-tools/stm32cubemx.html">Version 6.10.0</a>）</p><p>keil µVision5 IDE（<a href="https://www.keil.com/download/product/">MDK-Arm</a>）</p><p><a href="https://www.st.com/zh/development-tools/stsw-link009.html">ST-LINK&#x2F;V2驱动</a></p><p><a href="https://doc.embedfire.com/stm32_products/must_read/zh/latest/doc/quickstart/DAP/DAP.html">野火DAP仿真器</a></p><p><a href="http://www.openedv.com/docs/tool/ruanjian/ATK-XCOM.html">XCOM V2.6串口助手</a></p><h1 id="2、实验目标"><a href="#2、实验目标" class="headerlink" title="2、实验目标"></a>2、实验目标</h1><p>使用STM32CubeMX软件配置STM32F407开发板<font color="#fe2c24"><strong>SDIO使用FatFs中间件读写4线SD卡，并实现以轮询方式读写SD卡或以DMA方式读取SD卡</strong></font></p><h1 id="3、FatFs轮询读取SD卡流程"><a href="#3、FatFs轮询读取SD卡流程" class="headerlink" title="3、FatFs轮询读取SD卡流程"></a>3、FatFs轮询读取SD卡流程</h1><h2 id="3-0、前提知识"><a href="#3-0、前提知识" class="headerlink" title="3.0、前提知识"></a>3.0、前提知识</h2><p>FatFs文件系统相关知识请读者阅读<a href="https://www.cnblogs.com/lc-guo/p/17983168">STM32CubeMX教程26 FatFs 文件系统 - W25Q128读写</a>实验”3.0、前提知识“、”3.2.1、外设初始化调用流程”和”3.2.3、添加其他必要代码”三个小节内容</p><p>SD卡及SDIO接口相关知识请读者阅读<a href="https://www.cnblogs.com/lc-guo/p/17972264">STM32CubeMX教程27 SDIO - 读写SD卡</a>实验”3.0、前提知识“小节内容</p><h2 id="3-1、CubeMX相关配置"><a href="#3-1、CubeMX相关配置" class="headerlink" title="3.1、CubeMX相关配置"></a>3.1、CubeMX相关配置</h2><h3 id="3-1-0、工程基本配置"><a href="#3-1-0、工程基本配置" class="headerlink" title="3.1.0、工程基本配置"></a>3.1.0、工程基本配置</h3><p>打开STM32CubeMX软件，单击ACCESS TO MCU SELECTOR选择开发板MCU（选择你使用开发板的主控MCU型号），选中MCU型号后单击页面右上角Start Project开始工程，具体如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/28.1.png" width = "700"></div><p>开始工程之后在配置主页面System Core&#x2F;RCC中配置HSE&#x2F;LSE晶振，在System Core&#x2F;SYS中配置Debug模式，具体如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/28.2.png" width = "700"></div><p>详细工程建立内容读者可以阅读“<a href="https://www.cnblogs.com/lc-guo/p/17937268">STM32CubeMX教程1 工程建立</a>”</p><h3 id="3-1-1、时钟树配置"><a href="#3-1-1、时钟树配置" class="headerlink" title="3.1.1、时钟树配置"></a>3.1.1、时钟树配置</h3><p>按照<a href="https://www.cnblogs.com/lc-guo/p/17972264">STM32CubeMX教程27 SDIO - 读写SD卡</a>实验配置，主锁相环参数Q配置为7，48MHz时钟频率配置为48MHz，其余时钟频率均设置为其能达到的最高频率，具体如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/28.3.png" width = "700"></div><h3 id="3-1-2、外设参数配置"><a href="#3-1-2、外设参数配置" class="headerlink" title="3.1.2、外设参数配置"></a>3.1.2、外设参数配置</h3><p>本实验需要初始化开发板上WK_UP、KEY2、KEY1和KEY0用户按键，具体配置步骤请阅读“<a href="https://www.cnblogs.com/lc-guo/p/17938621">STM32CubeMX教程3 GPIO输入 - 按键响应</a>”</p><p>本实验需要初始化USART1作为输出信息渠道，具体配置步骤请阅读“<a href="https://www.cnblogs.com/lc-guo/p/17950348">STM32CubeMX教程9 USART&#x2F;UART 异步通信</a>”</p><p><font color="#fe2c24"><strong>本实验对SDIO的初始化配置与上一实验</strong></font><a href="https://www.cnblogs.com/lc-guo/p/17972264">STM32CubeMX教程27 SDIO - 读写SD卡</a><font color="#fe2c24"><strong>3.1小节一致，无需做任何修改，只需要增加本实验需要的中间件FatFs即可</strong></font></p><p>单击Pinout ＆ Configuration页面左边功能分类栏目最下面的Middleware and SoftwarePacks，<font color="#fe2c24"><strong>单击其中FatFs，在右侧模式设置中选择SD卡，下方的Configuration中参数大多保持默认即可</strong></font>，需要使用到的时候可以再修改</p><p>对Set Defines页面的参数不理解的读者，请阅读<a href="https://www.cnblogs.com/lc-guo/p/17983168">STM32CubeMX教程26 FatFs 文件系统 - W25Q128读写</a>实验”3.1.2、外设参数配置”小节，<font color="#fe2c24"><strong>这里只需将</strong></font><font color="#be191c" style="background: #fef2f0"> CODE_PAGE </font><font color="#fe2c24"><strong>参数配置为简体中文即可</strong></font>，具体配置如下图所示 </p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/28.4.png" width = "700"></div><p>在Advanced Settings配置页面中，参数<font color="#be191c" style="background: #fef2f0"> SDIO instance </font>只可选SDIO，无SPI选项，因为STM32F407的SDIO接口不支持SPI；当SDIO配置了DMA时，如果希望FatFs使用SDIO的DMA，那么可以将参数<font color="#be191c" style="background: #fef2f0"> Use dma template </font>配置为Enable；参数<font color="#be191c" style="background: #fef2f0"> BSP code for SD </font>不可选，只能为通用模式</p><p>在Platform Settings配置页面中，需要配置SD卡的插入检测引脚<font color="#be191c" style="background: #fef2f0"> Detect SDIO </font>，如果不配置该参数，则默认认为SD卡插在SD卡槽中，并且在生成工程代码时也会出现警告，这里由于硬件上并不支持插入检测因此并未配置该选项，警告内容如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/28.5.png"></div><h3 id="3-1-3、外设中断配置"><a href="#3-1-3、外设中断配置" class="headerlink" title="3.1.3、外设中断配置"></a>3.1.3、外设中断配置</h3><p>FatFs轮询读取SD卡无需配置任何中断</p><h2 id="3-2、生成代码"><a href="#3-2、生成代码" class="headerlink" title="3.2、生成代码"></a>3.2、生成代码</h2><h3 id="3-2-0、配置Project-Manager页面"><a href="#3-2-0、配置Project-Manager页面" class="headerlink" title="3.2.0、配置Project Manager页面"></a>3.2.0、配置Project Manager页面</h3><p>单击进入Project Manager页面，在左边Project分栏中修改工程名称、工程目录和工具链，然后在Code Generator中勾选“Gnerate peripheral initialization as a pair of ‘c&#x2F;h’ files per peripheral”，最后单击页面右上角GENERATE CODE生成工程，具体如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/28.6.png" width = "700"></div><p>详细Project Manager配置内容读者可以阅读“<a href="https://www.cnblogs.com/lc-guo/p/17937268">STM32CubeMX教程1 工程建立</a>”实验3.4.3小节</p><h3 id="3-2-1、外设初始化调用流程"><a href="#3-2-1、外设初始化调用流程" class="headerlink" title="3.2.1、外设初始化调用流程"></a>3.2.1、外设初始化调用流程</h3><p>SDIO外设初始化调用流程请读者阅读<a href="https://www.cnblogs.com/lc-guo/p/17972264">STM32CubeMX教程27 SDIO - 读写SD卡</a>实验对应小节</p><p>FatFs文件系统初始化调用流程请阅读<a href="https://www.cnblogs.com/lc-guo/p/17983168">STM32CubeMX教程26 FatFs 文件系统 - W25Q128读写</a>实验对应小节</p><p>在之前<a href="https://www.cnblogs.com/lc-guo/p/17983168">STM32CubeMX教程26 FatFs 文件系统 - W25Q128读写</a>实验中笔者提到过，<font color="#fe2c24"><strong>对于Extemal SRAM、SD Card和USB Disk这三种固定类型的存储，则无需用户在App文件夹和Target文件夹中重新实现FatFs的底层IO读写等操作函数，CubeMX生成的工程代码中会自动实现</strong></font></p><p>将本实验生成的工程代码与<a href="https://www.cnblogs.com/lc-guo/p/17983168">STM32CubeMX教程26 FatFs 文件系统 - W25Q128读写</a>实验做对比，可以发现，FatFs在Target目录下多生成了一个名为bsp_driver_xxx.c的文件，如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/28.7.png"></div><p>该bsp_driver_xxx.c文件就是将对应内存设备底层读写等操作函数进行了封装，同时在sd_diskio.c文件中，本该在移植FatFs时由用户自己手动实现的初始化、状态、读&#x2F;写和IO控制等函数也被直接调用了bsp_driver_xxx.c里的函数进行了自动实现，无需用户的任何操作，极为方便</p><p>这部分实现的原始代码读者可以自行生成工程查看，也可以和<a href="https://www.cnblogs.com/lc-guo/p/17983168">STM32CubeMX教程26 FatFs 文件系统 - W25Q128读写</a>实验中笔者手动实现的几个函数做对比，更加容易发现其中共性</p><h3 id="3-2-2、外设中断调用流程"><a href="#3-2-2、外设中断调用流程" class="headerlink" title="3.2.2、外设中断调用流程"></a>3.2.2、外设中断调用流程</h3><p>FatFs轮询读取SD卡无配置任何中断</p><h3 id="3-2-3、添加其他必要代码"><a href="#3-2-3、添加其他必要代码" class="headerlink" title="3.2.3、添加其他必要代码"></a>3.2.3、添加其他必要代码</h3><p><font color="#fe2c24"><strong>STM32CubeMX工程生成工程代码后，读者应注意手动修改MX_SDIO_SD_Init()函数中SD卡数据总线宽度从默认的4位手动修改为1位，否则SD卡将初始化失败</strong></font></p><p>在生成的工程代码中增加使用FatFs库中API进行文件操作的函数，包括挂载文件系统、显示SD卡信息、读&#x2F;写TXT文件、获取文件信息、扫描文件列表和删除文件等函数，笔者将其封装在了file_operate.c &#x2F; file_operate.h文件中，具体的源代码如下所示</p><p><strong>file_operate.c文件</strong></p><p>与<a href="https://www.cnblogs.com/lc-guo/p/17983168">STM32CubeMX教程26 FatFs 文件系统 - W25Q128读写</a>实验中实现的file_operate.c文件一致，除了测试写的函数FatFs_WriteTXTFile()中写入SD卡的内容修改为了“Line1: Hello, FatFs***\n”</p><p><strong>file_operate.h文件</strong></p><p>与<a href="https://www.cnblogs.com/lc-guo/p/17983168">STM32CubeMX教程26 FatFs 文件系统 - W25Q128读写</a>实验中实现的file_operate.h文件一致，除了下面三个宏定义需要修改为本实验的SD卡相关内容，修改内容如下所示</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">/*定义自己的存储设备*/</span><br><span class="hljs-comment">/*用户存储设备扇区字节数*/</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> User_Sector 512</span><br><span class="hljs-comment">/*用户存储设备FatFs对象*/</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> User_FatFs SDFatFS</span><br><span class="hljs-comment">/*用户存储设备卷路径*/</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> User_SDPath SDPath</span><br></code></pre></td></tr></table></figure><p>向工程中添加.c&#x2F;.h文件的步骤请阅读“<a href="https://blog.csdn.net/lc_guo/article/details/135380334?spm=1001.2014.3001.5501">STM32CubeMX教程19 I2C - MPU6050驱动</a>”实验3.2.3小节</p><p>在main.c文件中添加 ”file_operate.h“ 头文件，然后在主函数 main() 中添加文件系统挂载函数及按键控制逻辑函数，具体源代码与<a href="https://www.cnblogs.com/lc-guo/p/17983168">STM32CubeMX教程26 FatFs 文件系统 - W25Q128读写</a>实验中实现的一模一样，无需任何修改</p><h1 id="4、烧录验证"><a href="#4、烧录验证" class="headerlink" title="4、烧录验证"></a>4、烧录验证</h1><p>烧录程序，开发板上电后会尝试在SD卡上挂载文件系统，挂载成功后会输出读取到的SD卡的信息，接下来按照下面几个步骤使用FatFs文件系统对SD卡进行读写等测试</p><ol><li>按下开发板上的WK_UP按键，扫描SD卡根目录下所有文件，并通过串口将文件列表输出</li><li>按下开发板上的KEY2按键，在SD卡根目录创建一个”test.txt“文件，将一个字符串”Line1: Hello, FatFs***“写入该文件中，该字符串大小为24个字节（该字符串中有2个空格，末尾包括一个’\n‘和一个‘\0’）</li><li>按下开发板上的KEY1按键，读取SD卡根目录下名为”test.txt“的文件，将其中的内容通过串口输出，然后读取该文件的信息（大小，属性，名称），并通过串口输出</li><li>按下开发板上的KEY0按键，删除SD卡根目录下名为”test.txt“的文件</li></ol><p>整个实验过程串口具体的输出情况如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/28.8.gif"></div><h1 id="5、FatFs-DMA读写SD卡流程简述"><a href="#5、FatFs-DMA读写SD卡流程简述" class="headerlink" title="5、FatFs DMA读写SD卡流程简述"></a>5、FatFs DMA读写SD卡流程简述</h1><h2 id="5-1、CubeMX相关配置"><a href="#5-1、CubeMX相关配置" class="headerlink" title="5.1、CubeMX相关配置"></a>5.1、CubeMX相关配置</h2><p>参考上一实验<a href="https://www.cnblogs.com/lc-guo/p/17972264">STM32CubeMX教程27 SDIO - 读写SD卡</a>的”6.1、CubeMX相关配置“小节对SDIO的DMA进行配置，具体如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/28.9.png" width = "700"></div><p>在System Core&#x2F;NVIC中<font color="#fe2c24"><strong>勾选SDIO全局中断、DMA2 stream3 全局中断和 DMA2 stream6 全局中断</strong></font>，然后选择合适的中断优先级即可，如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/28.10.png" width = "700"></div><p><font color="#fe2c24"><strong>最后只需在FatFs的Configuration页面Advanced Settings选项卡中将参数</strong></font><font color="#be191c" style="background: #fef2f0"> Use dma template </font><font color="#fe2c24"><strong>修改为Enable即可</strong></font>，具体如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/28.11.png" width = "700"></div><h2 id="5-2、生成代码"><a href="#5-2、生成代码" class="headerlink" title="5.2、生成代码"></a>5.2、生成代码</h2><p><font color="#fe2c24"><strong>修改STM32CubeMX工程重新生成工程代码后，读者应注意再次手动修改MX_SDIO_SD_Init()函数中SD卡数据总线宽度从默认的4位手动修改为1位</strong></font></p><p>除了上述修改外，在轮询读取SD卡基础上生成的代码无需做任何改动，可以直接编译后烧录到开发板上，程序应该直接可以运行，不需要额外添加任何代码</p><p>启用SDIO的DMA之后，对应生成的bsp_driver_xxx.c文件中所有的以轮询方式读写等操作SD卡的底层驱动函数都将被相应的替换为以DMA的方式对SD卡进行读写等操作的底层驱动函数，如下图所示以sd_diskio.c文件中的读函数为例简单展示区别</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/28.12.png" width = "700"></div><h2 id="5-3、烧录验证"><a href="#5-3、烧录验证" class="headerlink" title="5.3、烧录验证"></a>5.3、烧录验证</h2><p>FatFs DMA读写SD卡的实验现象与FatFs 轮询读取SD卡的实验现象一致，只不过底层SDIO读写SD卡的方式由轮询读写修改为了以DMA方式的读写，对上层FatFs应用无任何影响</p><h1 id="6、常用函数"><a href="#6、常用函数" class="headerlink" title="6、常用函数"></a>6、常用函数</h1><p>请读者阅读<a href="https://www.cnblogs.com/lc-guo/p/17983168">STM32CubeMX教程26 FatFs 文件系统 - W25Q128读写</a>实验 ”常用函数“ 小节</p><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p><a href="https://www.epubit.com/bookDetails?id=UBc85046ed7208">STM32Cube高效开发教程（高级篇）</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>STM32CubeMX</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>STM32CubeMX教程27 SDIO - 读写SD卡</title>
    <link href="/2024/01/26/STM32CubeMX%E6%95%99%E7%A8%8B27-SDIO-%E8%AF%BB%E5%86%99SD%E5%8D%A1/"/>
    <url>/2024/01/26/STM32CubeMX%E6%95%99%E7%A8%8B27-SDIO-%E8%AF%BB%E5%86%99SD%E5%8D%A1/</url>
    
    <content type="html"><![CDATA[<h1 id="1、准备材料"><a href="#1、准备材料" class="headerlink" title="1、准备材料"></a>1、准备材料</h1><p><a href="http://47.111.11.73/docs/boards/stm32/zdyz_stm32f407_explorerV3.html">正点原子stm32f407探索者开发板V2.4</a></p><p>STM32CubeMX软件（<a href="https://www.st.com/en/development-tools/stm32cubemx.html">Version 6.10.0</a>）</p><p>keil µVision5 IDE（<a href="https://www.keil.com/download/product/">MDK-Arm</a>）</p><p><a href="https://www.st.com/zh/development-tools/stsw-link009.html">ST-LINK&#x2F;V2驱动</a></p><p>逻辑分析仪<a href="https://github.com/wuxx/nanoDLA">nanoDLA</a></p><p><a href="https://doc.embedfire.com/stm32_products/must_read/zh/latest/doc/quickstart/DAP/DAP.html">野火DAP仿真器</a></p><p><a href="http://www.openedv.com/docs/tool/ruanjian/ATK-XCOM.html">XCOM V2.6串口助手</a></p><h1 id="2、实验目标"><a href="#2、实验目标" class="headerlink" title="2、实验目标"></a>2、实验目标</h1><p>使用STM32CubeMX软件配置STM32F407开发板<font color="#fe2c24"><strong>SDIO读写4线SD卡，实现轮询方式读写SD卡、以中断方式读取SD卡和以DMA方式读取SD卡</strong></font></p><h1 id="3、轮询方式读取SD卡流程"><a href="#3、轮询方式读取SD卡流程" class="headerlink" title="3、轮询方式读取SD卡流程"></a>3、轮询方式读取SD卡流程</h1><h2 id="3-0、前提知识"><a href="#3-0、前提知识" class="headerlink" title="3.0、前提知识"></a>3.0、前提知识</h2><p>安全数码卡（Secure Digital Memory Card），简称SD卡，是嵌入式设备上常用的一种存储介质，通常可以将SD卡分为标准SD卡、miniSD卡和microSD卡（TF卡）三种类型，每种卡形状大小不一，除标准SD卡卡身上拥有一个写保护开关外，其他的功能三张卡一致，如今miniSD卡正逐渐被microSD卡所取代，如下图所示为三种不同类型SD卡形状 <em>（注释1）</em></p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/27.1.png" width = "700"></div><p>按照SD卡容量大小的不同可以将其分为SD、SDHC、SDXC等型号，按照SD卡读写机制速度的不同又可以将其分为Standard、High-speed、UHS-I等型号，具体如下表所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/27.2.png" width = "700"></div><p>STM32F407提供了一个SDIO接口可以直接通过HAL库来驱动1&#x2F;4位总线宽度的SD卡或1&#x2F;4&#x2F;8位总线宽度的多媒体卡，其完全兼容SD卡规范版本2.0，<font color="#fe2c24"><strong>但只支持高速SD卡，也即与SD卡进行数据传输最大速度为25MHz</strong></font></p><p>SDIO由APB2接口和SDIO适配器两部分组成，SDIO适配器提供了驱动SD&#x2F;MMC卡的全部功能，APB2接口则可以访问SDIO适配器寄存器在适当时候向内核发起中断&#x2F;DMA请求</p><p>SDIO适配器由48MHz的SDIOCLK驱动，根据SDIOCLK时钟频率、<font color="#be191c" style="background: #fef2f0"> SDIO Clock divider bypass </font>参数和<font color="#be191c" style="background: #fef2f0"> SDIOCLK clock divide factor </font>参数就可以确定与SD卡通信时SDIO_CLK的时钟频率，当时钟分频器旁路使能时，SDIO_CLK&#x3D;SDIOCLK；当时钟分频器旁路不使能时，SDIO_CLK&#x3D;SDIOCLK &#x2F; (2+时钟分频因子)；</p><p>根据上面的描述，由于STM32F407的SDIO只支持高速SD卡，因此时钟分频器旁路常常不使能，这样当时钟分频因子为0时，SDIO_CLK则达到最大速度48MHz &#x2F; 2 &#x3D; 24Mhz，但在实际的使用中往往稍微降低该时钟频率，否则可能会出现读写SD卡失败的现象</p><p><font color="#fe2c24"><strong>另外值得提醒的是SD卡初始化的时候应该以不超过400KHz的速率，1位总线宽度进行初始化，否则将初始化失败</strong></font></p><p>如下图所示为STM32F407内部的SDIO接口结构框图 <em>（注释2）</em></p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/27.3.png" width = "700"></div><p>笔者使用的开发板上SD卡槽设计为了4位总线宽度，在硬件设计时需要注意MCU与SD卡通信的1&#x2F;4根数据线SDIO_D0&#x2F;1&#x2F;2&#x2F;3和命令线SDIO_CMD均需外部上拉，硬件原理图如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/27.4.png" width = "700"></div><h2 id="3-1、CubeMX相关配置"><a href="#3-1、CubeMX相关配置" class="headerlink" title="3.1、CubeMX相关配置"></a>3.1、CubeMX相关配置</h2><h3 id="3-1-0、工程基本配置"><a href="#3-1-0、工程基本配置" class="headerlink" title="3.1.0、工程基本配置"></a>3.1.0、工程基本配置</h3><p>打开STM32CubeMX软件，单击ACCESS TO MCU SELECTOR选择开发板MCU（选择你使用开发板的主控MCU型号），选中MCU型号后单击页面右上角Start Project开始工程，具体如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/27.5.png" width = "700"></div><p>开始工程之后在配置主页面System Core&#x2F;RCC中配置HSE&#x2F;LSE晶振，在System Core&#x2F;SYS中配置Debug模式，具体如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/27.6.png" width = "700"></div><p>详细工程建立内容读者可以阅读“<a href="https://www.cnblogs.com/lc-guo/p/17937268">STM32CubeMX教程1 工程建立</a>”</p><h3 id="3-1-1、时钟树配置"><a href="#3-1-1、时钟树配置" class="headerlink" title="3.1.1、时钟树配置"></a>3.1.1、时钟树配置</h3><p>当在STM32CubeMX中启用SDIO功能后，时钟树中48MHz时钟便可以进行调节，该时钟一般如其名字一样配置为48MHz即可，也即将Main PLL（主锁相环）的Q参数调节为7即可，其他HCLK、PCLK1和PCLK2时钟仍然设置为STM32F407能达到的最高时钟频率，具体如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/27.7.png" width = "700"></div><h3 id="3-1-2、外设参数配置"><a href="#3-1-2、外设参数配置" class="headerlink" title="3.1.2、外设参数配置"></a>3.1.2、外设参数配置</h3><p>本实验需要初始化开发板上WK_UP、KEY2、KEY1和KEY0用户按键，具体配置步骤请阅读“<a href="https://www.cnblogs.com/lc-guo/p/17938621">STM32CubeMX教程3 GPIO输入 - 按键响应</a>”</p><p>本实验需要初始化USART1作为输出信息渠道，具体配置步骤请阅读“<a href="https://www.cnblogs.com/lc-guo/p/17950348">STM32CubeMX教程9 USART&#x2F;UART 异步通信</a>”</p><p>单击Pinout ＆ Configuration页面左边功能分类栏目<font color="#fe2c24"><strong>Connectivity&#x2F;SDIO，将其模式选择为4位宽总线SD卡</strong></font></p><p><font color="#be191c" style="background: #fef2f0"> Clock transition on which the bit capture is made </font>（时钟跳变沿捕获数据配置）：数据捕获边沿设置，可设置为上升沿&#x2F;下降沿</p><p><font color="#be191c" style="background: #fef2f0"> SDIO Clock divider bypass </font>（时钟分频器旁路使能）：使能该参数时，SDIO_CLK&#x3D;SDIOCLK；否则SDIO_CLK频率由时钟分频因子决定</p><p><font color="#be191c" style="background: #fef2f0"> SDIO Clock output enable when the bus is idle </font>（空闲模式时钟输出使能）：节能模式，此实验不使能</p><p><font color="#be191c" style="background: #fef2f0"> SDIO hardware flow control </font>（硬件流控）：设置是否使能SDIO的硬件流控，此处不使能</p><p><font color="#be191c" style="background: #fef2f0"> SDIOCLK clock divide factor </font>（时钟分频因子）：当不使能时钟分频器旁路时，SDIO_CLK&#x3D;SDIOCLK &#x2F; (2+时钟分频因子)</p><p><font color="#fe2c24"><strong>SDIO驱动4位宽总线SD卡的参数配置大多按照默认参数配置即可，但是要注意SD卡读写频率过高可能会导致读写失败，因此这里设置SD_CLK频率为8MHz</strong></font>，另外需要注意默认的SDIO复用引脚和开发板上的实际控制SD的引脚是否一致，具体配置如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/27.8.png" width = "700"></div><h3 id="3-1-3、外设中断配置"><a href="#3-1-3、外设中断配置" class="headerlink" title="3.1.3、外设中断配置"></a>3.1.3、外设中断配置</h3><p>轮询方式读写SD卡无需配置中断</p><h2 id="3-2、生成代码"><a href="#3-2、生成代码" class="headerlink" title="3.2、生成代码"></a>3.2、生成代码</h2><h3 id="3-2-0、配置Project-Manager页面"><a href="#3-2-0、配置Project-Manager页面" class="headerlink" title="3.2.0、配置Project Manager页面"></a>3.2.0、配置Project Manager页面</h3><p>单击进入Project Manager页面，在左边Project分栏中修改工程名称、工程目录和工具链，然后在Code Generator中勾选“Gnerate peripheral initialization as a pair of ‘c&#x2F;h’ files per peripheral”，最后单击页面右上角GENERATE CODE生成工程，具体如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/27.9.png" width = "700"></div><p>详细Project Manager配置内容读者可以阅读“<a href="https://www.cnblogs.com/lc-guo/p/17937268">STM32CubeMX教程1 工程建立</a>”实验3.4.3小节</p><h3 id="3-2-1、外设初始化调用流程"><a href="#3-2-1、外设初始化调用流程" class="headerlink" title="3.2.1、外设初始化调用流程"></a>3.2.1、外设初始化调用流程</h3><p>在main.c文件main()函数中调用MX_SDIO_SD_Init()对SDIO参数配置，并调用HAL_SD_Init()函数对SD卡初始化，最后将SD卡切换到4位宽总线模式</p><p>在stm32f4xx_hal_sd.c文件HAL_SD_Init()中调用HAL_SD_MspInit()函数对SDIO时钟使能和所使用到的引脚功能复用，如果配置了中断或DMA，该函数中还会相应的出现NVIC&#x2F;DMA相关配置，最后在真正的SD卡初始化函数HAL_SD_InitCard()中对SD卡初始化完毕</p><p>具体外设初始化函数调用流程如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/27.10.png" width = "700"></div><p><font color="#fe2c24"><strong>初始化配置中时钟分频因子为4，SD_CLK&#x3D;8MHz，为什么SD卡还可以初始化成功？</strong></font></p><p>这里读者需要搞清楚真正对SD卡初始化时使用的参数配置是不是我们设置的参数，上面提到真正的SD卡初始化函数为HAL_SD_InitCard()，进入该函数发现实际初始化SD卡时用到的并不是用户配置的参数，而是使用的默认初始化参数，这里时钟分频因子被设置为了0x76，也即118，根据上面提到的公式计算可知48MHz &#x2F; (118 + 2) &#x3D; 400KHz，满足SD卡的初始化频率，具体如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/27.11.png" width = "700"></div><h3 id="3-2-2、外设中断调用流程"><a href="#3-2-2、外设中断调用流程" class="headerlink" title="3.2.2、外设中断调用流程"></a>3.2.2、外设中断调用流程</h3><p>轮询方式读写SD卡无配置中断</p><h3 id="3-2-3、添加其他必要代码"><a href="#3-2-3、添加其他必要代码" class="headerlink" title="3.2.3、添加其他必要代码"></a>3.2.3、添加其他必要代码</h3><p>笔者使用的STM32CubeMX版本为6.10.0，<font color="#fe2c24"><strong>在生成的SDIO初始化函数MX_SDIO_SD_Init()中需要将参数配置中的SD卡数据总线宽度从默认的4位手动修改为1位（STM32CubeMX软件BUG？）</strong></font>，在SD卡初始化时应该以不超过400KHz的速率，1位总线宽度进行初始化，如果不修改这里SD卡将无法成功初始化，如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/27.12.png" width = "700"></div><p>在sdio.c中添加SD卡读、写、擦除和输出SD卡信息测试函数</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">/*显示SD卡的信息*/</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">SDCard_ShowInfo</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span><br>&#123;<br><span class="hljs-comment">//SD卡信息结构体变量</span><br>HAL_SD_CardInfoTypeDef cardInfo;  <br>HAL_StatusTypeDef res = HAL_SD_GetCardInfo(&amp;hsd, &amp;cardInfo);<br><br><span class="hljs-keyword">if</span>(res!=HAL_OK)<br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;HAL_SD_GetCardInfo() error\r\n&quot;</span>);<br><span class="hljs-keyword">return</span>;<br>&#125;<br><br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\r\n*** HAL_SD_GetCardInfo() info ***\r\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Card Type= %d\r\n&quot;</span>, cardInfo.CardType);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Card Version= %d\r\n&quot;</span>, cardInfo.CardVersion);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Card Class= %d\r\n&quot;</span>, cardInfo.Class);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Relative Card Address= %d\r\n&quot;</span>, cardInfo.RelCardAdd);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Block Count= %d\r\n&quot;</span>, cardInfo.BlockNbr);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Block Size(Bytes)= %d\r\n&quot;</span>, cardInfo.BlockSize);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;LogiBlockCount= %d\r\n&quot;</span>, cardInfo.LogBlockNbr);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;LogiBlockSize(Bytes)= %d\r\n&quot;</span>, cardInfo.LogBlockSize);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;SD Card Capacity(MB)= %d\r\n&quot;</span>, cardInfo.BlockNbr&gt;&gt;<span class="hljs-number">1</span>&gt;&gt;<span class="hljs-number">10</span>);<br>&#125;<br><br><span class="hljs-comment">//获取SD卡当前状态</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">SDCard_ShowStatus</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span><br>&#123;<br><span class="hljs-comment">//SD卡状态结构体变量</span><br>HAL_SD_CardStatusTypeDef cardStatus;<br>HAL_StatusTypeDef res = HAL_SD_GetCardStatus(&amp;hsd, &amp;cardStatus);<br><br><span class="hljs-keyword">if</span>(res!=HAL_OK)<br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;HAL_SD_GetCardStatus() error\r\n&quot;</span>);<br><span class="hljs-keyword">return</span>;<br>&#125;<br><br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\r\n*** HAL_SD_GetCardStatus() info ***\r\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;DataBusWidth= %d\r\n&quot;</span>, cardStatus.DataBusWidth);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;CardType= %d\r\n&quot;</span>, cardStatus.CardType);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;SpeedClass= %d\r\n&quot;</span>, cardStatus.SpeedClass);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;AllocationUnitSize= %d\r\n&quot;</span>, cardStatus.AllocationUnitSize);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;EraseSize= %d\r\n&quot;</span>, cardStatus.EraseSize);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;EraseTimeout= %d\r\n&quot;</span>, cardStatus.EraseTimeout);<br>&#125;<br><br><span class="hljs-comment">/*SD卡擦除测试*/</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">SDCard_EraseBlocks</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span><br>&#123;<br><span class="hljs-type">uint32_t</span> BlockAddrStart=<span class="hljs-number">0</span>;<br><span class="hljs-type">uint32_t</span> BlockAddrEnd=<span class="hljs-number">10</span>;<br><br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\r\n*** Erasing blocks ***\r\n&quot;</span>);<br><br><span class="hljs-keyword">if</span>(HAL_SD_Erase(&amp;hsd, BlockAddrStart, BlockAddrEnd)==HAL_OK)<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Erasing blocks,OK\r\n&quot;</span>);<br><span class="hljs-keyword">else</span><br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Erasing blocks,fail\r\n&quot;</span>);<br><br>HAL_SD_CardStateTypeDef cardState=HAL_SD_GetCardState(&amp;hsd);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;GetCardState()= %d\r\n&quot;</span>, cardState);<br><br><span class="hljs-keyword">while</span>(cardState != HAL_SD_CARD_TRANSFER)<br>&#123;<br>HAL_Delay(<span class="hljs-number">1</span>);<br>cardState=HAL_SD_GetCardState(&amp;hsd);<br>&#125;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Blocks 0-10 is erased.\r\n&quot;</span>);<br>&#125;<br><br><span class="hljs-comment">/*SD卡写入测试函数*/</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">SDCard_TestWrite</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span><br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\r\n*** Writing blocks ***\r\n&quot;</span>);<br><br><span class="hljs-comment">// BLOCKSIZE为512，在stm32f4xx_hal_sd.h中被定义</span><br><span class="hljs-type">uint8_t</span> pData[BLOCKSIZE]=<span class="hljs-string">&quot;Hello, welcome to UPC\0&quot;</span>;  <br><span class="hljs-type">uint32_t</span> BlockAddr=<span class="hljs-number">5</span>; <br><span class="hljs-type">uint32_t</span> BlockCount=<span class="hljs-number">1</span>; <br><span class="hljs-type">uint32_t</span> TimeOut=<span class="hljs-number">1000</span>;<br><br><span class="hljs-keyword">if</span>(HAL_SD_WriteBlocks(&amp;hsd,pData,BlockAddr,BlockCount,TimeOut) == HAL_OK)<br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Write to block 5, OK\r\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;The string is: %s\r\n&quot;</span>, pData);<br>&#125;<br><span class="hljs-keyword">else</span><br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Write to block 5, fail ***\r\n&quot;</span>);<br><span class="hljs-keyword">return</span>;<br>&#125;<br><br><span class="hljs-keyword">for</span>(<span class="hljs-type">uint16_t</span> i=<span class="hljs-number">0</span>;i&lt;BLOCKSIZE; i++)<br>pData[i]=i; <br><br>BlockAddr=<span class="hljs-number">6</span>;<br><span class="hljs-keyword">if</span>(HAL_SD_WriteBlocks(&amp;hsd,pData,BlockAddr,BlockCount,TimeOut) == HAL_OK) <br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Write block 6, OK\r\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Data in [10:15] is: &quot;</span>);<br><span class="hljs-keyword">for</span> (<span class="hljs-type">uint16_t</span> j=<span class="hljs-number">11</span>; j&lt;=<span class="hljs-number">15</span>;j++)<br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d,&quot;</span>, pData[j]);<br>&#125;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\r\n&quot;</span>);<br>&#125;<br><span class="hljs-keyword">else</span><br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Write to block 6, fail ***\r\n&quot;</span>);<br>&#125;<br><br><span class="hljs-comment">/*SD卡读取测试函数*/</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">SDCard_TestRead</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span><br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\r\n*** Reading blocks ***\r\n&quot;</span>);<br><br><span class="hljs-type">uint8_t</span> pData[BLOCKSIZE];<br><span class="hljs-type">uint32_t</span> BlockAddr=<span class="hljs-number">5</span>;<br><span class="hljs-type">uint32_t</span> BlockCount=<span class="hljs-number">1</span>;<br><span class="hljs-type">uint32_t</span> TimeOut=<span class="hljs-number">1000</span>;<br><br><span class="hljs-keyword">if</span>(HAL_SD_ReadBlocks(&amp;hsd,pData,BlockAddr,BlockCount,TimeOut) == HAL_OK)<br><span class="hljs-comment">//if(HAL_SD_ReadBlocks_IT(&amp;hsd,pData,BlockAddr,BlockCount) == HAL_OK)</span><br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Read block 5, OK\r\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;The string is: %s\r\n&quot;</span>, pData);<br>&#125;<br><span class="hljs-keyword">else</span><br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Read block 5, fail ***\r\n&quot;</span>);<br><span class="hljs-keyword">return</span>;<br>&#125;<br><br>BlockAddr=<span class="hljs-number">6</span>;<br><span class="hljs-keyword">if</span>(HAL_SD_ReadBlocks(&amp;hsd,pData,BlockAddr,BlockCount,TimeOut)== HAL_OK)<br><span class="hljs-comment">//if(HAL_SD_ReadBlocks_IT(&amp;hsd,pData,BlockAddr,BlockCount) == HAL_OK)</span><br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Read block 6, OK\r\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Data in [10:15] is: &quot;</span>);<br><br><span class="hljs-keyword">for</span> (<span class="hljs-type">uint16_t</span> j=<span class="hljs-number">11</span>; j&lt;=<span class="hljs-number">15</span>;j++)<br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d,&quot;</span>, pData[j]);<br>&#125;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\r\n&quot;</span>);<br>&#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>在sdio.h中声明定义的这些测试函数</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">/*在sdio.h中声明*/</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">SDCard_TestRead</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span>;<br><span class="hljs-type">void</span> <span class="hljs-title function_">SDCard_TestWrite</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span>;<br><span class="hljs-type">void</span> <span class="hljs-title function_">SDCard_ShowInfo</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span>;<br><span class="hljs-type">void</span> <span class="hljs-title function_">SDCard_EraseBlocks</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span>;<br></code></pre></td></tr></table></figure><p>在main.c文件主循环中添加按键逻辑控制程序，WK_UP按键按下输出SD卡信息，KEY2按键按下擦除SD卡块0-10，KEY1按键按下测试SD卡写功能，KEY0按键按下测试SD卡读功能</p><p>具体源代码如下所示</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">/*WK_UP按键按下*/</span><br><span class="hljs-keyword">if</span>(HAL_GPIO_ReadPin(WK_UP_GPIO_Port,WK_UP_Pin) == GPIO_PIN_SET)<br>&#123;<br>HAL_Delay(<span class="hljs-number">50</span>);<br><span class="hljs-keyword">if</span>(HAL_GPIO_ReadPin(WK_UP_GPIO_Port,WK_UP_Pin) == GPIO_PIN_SET)<br>&#123;<br>SDCard_ShowInfo();<br><span class="hljs-keyword">while</span>(HAL_GPIO_ReadPin(WK_UP_GPIO_Port,WK_UP_Pin));<br>&#125;<br>&#125;<br><br><span class="hljs-comment">/*KEY2按键按下*/</span><br><span class="hljs-keyword">if</span>(HAL_GPIO_ReadPin(KEY2_GPIO_Port,KEY2_Pin) == GPIO_PIN_RESET)<br>&#123;<br>HAL_Delay(<span class="hljs-number">50</span>);<br><span class="hljs-keyword">if</span>(HAL_GPIO_ReadPin(KEY2_GPIO_Port,KEY2_Pin) == GPIO_PIN_RESET)<br>&#123;<br>SDCard_EraseBlocks();<br><span class="hljs-keyword">while</span>(!HAL_GPIO_ReadPin(KEY2_GPIO_Port,KEY2_Pin));<br>&#125;<br>&#125;<br><br><span class="hljs-comment">/*KEY1按键按下*/</span><br><span class="hljs-keyword">if</span>(HAL_GPIO_ReadPin(KEY1_GPIO_Port,KEY1_Pin) == GPIO_PIN_RESET)<br>&#123;<br>HAL_Delay(<span class="hljs-number">50</span>);<br><span class="hljs-keyword">if</span>(HAL_GPIO_ReadPin(KEY1_GPIO_Port,KEY1_Pin) == GPIO_PIN_RESET)<br>&#123;<br>SDCard_TestWrite();<br><span class="hljs-keyword">while</span>(!HAL_GPIO_ReadPin(KEY1_GPIO_Port,KEY1_Pin));<br>&#125;<br>&#125;<br><br><span class="hljs-comment">/*KEY0按键按下*/</span><br><span class="hljs-keyword">if</span>(HAL_GPIO_ReadPin(KEY0_GPIO_Port,KEY0_Pin) == GPIO_PIN_RESET)<br>&#123;<br>HAL_Delay(<span class="hljs-number">50</span>);<br><span class="hljs-keyword">if</span>(HAL_GPIO_ReadPin(KEY0_GPIO_Port,KEY0_Pin) == GPIO_PIN_RESET)<br>&#123;<br>SDCard_TestRead();<br><span class="hljs-keyword">while</span>(!HAL_GPIO_ReadPin(KEY0_GPIO_Port,KEY0_Pin));<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="4、烧录验证"><a href="#4、烧录验证" class="headerlink" title="4、烧录验证"></a>4、烧录验证</h1><p>烧录程序，开发板复位后按下WK_UP按键会输出SD卡信息，按下KEY2按键会擦除SD卡的块0-10数据，按下KEY0按键会读取SD卡块5和块6的数据，按下KEY1按键会写入一段字符串到SD卡块5，写入块6从1-256整形数字，具体串口输出信息如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/27.13.gif"></div><h1 id="5、中断方式读取SD卡流程简述"><a href="#5、中断方式读取SD卡流程简述" class="headerlink" title="5、中断方式读取SD卡流程简述"></a>5、中断方式读取SD卡流程简述</h1><h2 id="5-1、CubeMX相关配置"><a href="#5-1、CubeMX相关配置" class="headerlink" title="5.1、CubeMX相关配置"></a>5.1、CubeMX相关配置</h2><p>工程、时钟树、外设参数等配置与轮询方式读取SD卡一致，中断方式读取SD卡只需要在CubeMX软件中启动SDIO的全局中断</p><p>在Pinout &amp; Configuration页面左边System Core&#x2F;NVIC中<font color="#fe2c24"><strong>勾选SDIO全局中断</strong></font>，然后选择合适的中断优先级即可，如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/27.14.png" width = "700"></div><h2 id="5-2、生成代码"><a href="#5-2、生成代码" class="headerlink" title="5.2、生成代码"></a>5.2、生成代码</h2><p><font color="#fe2c24"><strong>修改STM32CubeMX工程重新生成工程代码后，读者应注意再次手动修改MX_SDIO_SD_Init()函数中SD卡数据总线宽度从默认的4位手动修改为1位</strong></font></p><p>在sdio.c中增加以中断方式读写SD卡的测试函数，具体代码如下所示</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">/*SD卡中断写入测试函数*/</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">SDCard_TestWrite_IT</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span><br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\r\n*** IT Writing blocks ***\r\n&quot;</span>);<br><span class="hljs-type">uint32_t</span> BlockCount=<span class="hljs-number">1</span>; <br><span class="hljs-type">uint16_t</span> BlockAddr=<span class="hljs-number">5</span>;<br><br>HAL_SD_WriteBlocks_IT(&amp;hsd, TX, BlockAddr, BlockCount);<br>&#125;<br><br><span class="hljs-comment">/*SD卡中断读取测试函数*/</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">SDCard_TestRead_IT</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span><br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\r\n*** IT Reading blocks ***\r\n&quot;</span>);<br><span class="hljs-type">uint32_t</span> BlockCount=<span class="hljs-number">1</span>;<br><span class="hljs-type">uint16_t</span> BlockAddr=<span class="hljs-number">5</span>;<br><br>HAL_SD_ReadBlocks_IT(&amp;hsd, RX, BlockAddr, BlockCount);<br>&#125;<br></code></pre></td></tr></table></figure><p>在sdio.c中新增加SD卡Tx&#x2F;Rx传输完成回调函数HAL_SD_TxCpltCallback()和HAL_SD_RxCpltCallback()，具体代码如下所示</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">/*SD Tx传输完成回调*/</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">HAL_SD_TxCpltCallback</span><span class="hljs-params">(SD_HandleTypeDef *hsd)</span><br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;IT Write to block 5, OK\r\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;The string is: %s\r\n&quot;</span>, TX);<br>&#125;<br><br><span class="hljs-comment">/*SD Rx传输完成回调*/</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">HAL_SD_RxCpltCallback</span><span class="hljs-params">(SD_HandleTypeDef *hsd)</span><br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;IT Read block 5, OK\r\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;The string is: %s\r\n&quot;</span>, RX);<br>&#125;<br></code></pre></td></tr></table></figure><p>在sdio.c中定义全部变量发送缓存数组TX和接收缓存数组RX，并在sdio.h中声明修改后的中断方式的SD卡写入测试函数和SD卡读取测试函数，源代码如下</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">/*sdio.c中定义的发送、接收缓存数组*/</span><br><span class="hljs-type">uint8_t</span> TX[BLOCKSIZE] = <span class="hljs-string">&quot;Hello, welcome to UPC\0&quot;</span>;  <br><span class="hljs-type">uint8_t</span> RX[BLOCKSIZE];  <br><br><span class="hljs-comment">/*sdio.h中对函数声明*/</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">SDCard_TestRead_IT</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span>;<br><span class="hljs-type">void</span> <span class="hljs-title function_">SDCard_TestWrite_IT</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span>;<br></code></pre></td></tr></table></figure><p>最后在main.c文件主循环中实现与轮询读写SD时一致的按键逻辑程序，并用修改后的以中断方式读写SD卡的函数替换以轮询方式读写SD卡的函数即可</p><h2 id="5-3、烧录验证"><a href="#5-3、烧录验证" class="headerlink" title="5.3、烧录验证"></a>5.3、烧录验证</h2><p>烧录程序，开发板复位后按下WK_UP按键会输出SD卡信息，按下KEY2按键会擦除SD卡的块0-10数据，与轮询方式读写SD卡时现象一致</p><p>按下KEY0按键以中断方式读取SD卡的块5数据，读取完成后会进入Rx传输完成回调中，在该回调函数中会从串口输出读取到的SD卡块5的数据</p><p>按下KEY1按键会以中断方式写入一段字符串到SD卡块5，写入完成后会进入Tx传输完成回调中，在该回调函数中会从串口输出写入到SD卡块5中的数据</p><p>具体串口输出信息如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/27.15.gif" ></div><h1 id="6、DMA方式读取SD卡流程简述"><a href="#6、DMA方式读取SD卡流程简述" class="headerlink" title="6、DMA方式读取SD卡流程简述"></a>6、DMA方式读取SD卡流程简述</h1><h2 id="6-1、CubeMX相关配置"><a href="#6-1、CubeMX相关配置" class="headerlink" title="6.1、CubeMX相关配置"></a>6.1、CubeMX相关配置</h2><p><font color="#fe2c24"><strong>工程、时钟树、外设参数等配置与轮询方式读取SD卡一致，以DMA方式读取SD卡只需要在CubeMX软件中增加SDIO的DMA请求即可</strong></font></p><p>在Pinout &amp; Configuration页面单击Connectivity&#x2F;SDIO页面，在Configuration配置页面中点击DMA Settings选项卡对SDIO的DMA进行配置，单击ADD增加SDIO的RX&#x2F;TX两个DMA请求，SDIO的两个DMA请求除了内存地址递增可以设置外，其他的包括Mode、Use Fifo、Data Width和Burst Size等参数都不可以设置</p><p>对DMA参数不理解的可以阅读”<a href="https://www.cnblogs.com/lc-guo/p/17957875">STM32CubeMX教程12 DMA 直接内存读取</a>“实验，SDIO的具体DMA配置参数如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/27.16.png" width = "700"></div><p>在System Core&#x2F;NVIC中<font color="#fe2c24"><strong>勾选SDIO全局中断、DMA2 stream3 全局中断和 DMA2 stream6 全局中断</strong></font>，然后选择合适的中断优先级即可，如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/27.17.png" width = "700"></div><h2 id="6-2、生成代码"><a href="#6-2、生成代码" class="headerlink" title="6.2、生成代码"></a>6.2、生成代码</h2><p><font color="#fe2c24"><strong>修改STM32CubeMX工程重新生成工程代码后，读者应注意再次手动修改MX_SDIO_SD_Init()函数中SD卡数据总线宽度从默认的4位手动修改为1位</strong></font></p><p>在sdio.c中增加以DMA方式读写SD卡的测试函数，具体代码如下所示</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">/*SD卡DMA写入测试函数*/</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">SDCard_TestWrite_DMA</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span><br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\r\n*** DMA Writing blocks ***\r\n&quot;</span>);<br><span class="hljs-type">uint32_t</span> BlockCount=<span class="hljs-number">1</span>; <br><span class="hljs-type">uint16_t</span> BlockAddr=<span class="hljs-number">6</span>;<br><br><span class="hljs-keyword">for</span>(<span class="hljs-type">uint16_t</span> i=<span class="hljs-number">0</span>;i&lt;BLOCKSIZE; i++)<br>TX[i]=i; <br><br>HAL_SD_WriteBlocks_DMA(&amp;hsd, TX, BlockAddr, BlockCount);<br>&#125;<br><br><span class="hljs-comment">/*SD卡DMA读取测试函数*/</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">SDCard_TestRead_DMA</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span><br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\r\n*** DMA Reading blocks ***\r\n&quot;</span>);<br><span class="hljs-type">uint32_t</span> BlockCount=<span class="hljs-number">1</span>;<br><span class="hljs-type">uint16_t</span> BlockAddr=<span class="hljs-number">6</span>;<br><br>HAL_SD_ReadBlocks_DMA(&amp;hsd, RX, BlockAddr, BlockCount);<br>&#125;<br></code></pre></td></tr></table></figure><p>在sdio.h中对增加的函数声明</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">/*sdio.h中对函数声明*/</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">SDCard_TestWrite_DMA</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span>;<br><span class="hljs-type">void</span> <span class="hljs-title function_">SDCard_TestRead_DMA</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span>;<br></code></pre></td></tr></table></figure><p>DMA的回调函数使用的是外设的中断回调函数</p><p>当启用了SDIO TX DMA请求和SDIO全局中断，并以 HAL_SD_WriteBlocks_DMA() 写入SD卡块数据完成之后，会调用传输完成回调 HAL_SD_TxCpltCallback()</p><p>当启用了SDIO RX DMA请求和SDIO全局中断，并以 HAL_SD_ReadBlocks_DMA() 从SD卡块读取数据完毕之后，会调用读取完成回调函数 HAL_SD_RxCpltCallback()</p><p>故直接重新实现HAL_SD_RxCpltCallback&#x2F;HAL_SD_TxCpltCallback两个函数即可，源代码如下所示</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">/*DMA Tx传输完成回调*/</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">HAL_SD_TxCpltCallback</span><span class="hljs-params">(SD_HandleTypeDef *hsd)</span><br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;DMA Write to block 6, OK\r\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Data in [10:15] is: &quot;</span>);<br><br><span class="hljs-keyword">for</span> (<span class="hljs-type">uint16_t</span> j=<span class="hljs-number">10</span>; j&lt;=<span class="hljs-number">15</span>;j++)<br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d,&quot;</span>, TX[j]);<br>&#125;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\r\n&quot;</span>);<br>&#125;<br><br><span class="hljs-comment">/*DMA Rx传输完成回调*/</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">HAL_SD_RxCpltCallback</span><span class="hljs-params">(SD_HandleTypeDef *hsd)</span><br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;DMA Read block 6, OK\r\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Data in [10:15] is: &quot;</span>);<br><br><span class="hljs-keyword">for</span> (<span class="hljs-type">uint16_t</span> j=<span class="hljs-number">10</span>; j&lt;=<span class="hljs-number">15</span>;j++)<br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d,&quot;</span>, RX[j]);<br>&#125;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\r\n&quot;</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p>最后在main.c文件主循环中实现与轮询读写SD时一致的按键逻辑程序，并用修改后的以DMA方式读写SD卡的函数替换以中断方式读写SD卡的函数即可</p><h2 id="6-3、实验现象"><a href="#6-3、实验现象" class="headerlink" title="6.3、实验现象"></a>6.3、实验现象</h2><p>烧录程序，开发板复位后按下WK_UP按键会输出SD卡信息，按下KEY2按键会擦除SD卡的块0-10数据，与轮询方式读写SD卡时现象一致</p><p>按下KEY0按键以DMA的方式读取SD卡块6数据，读取完成后会进入Rx传输完成回调中，在该回调函数中会从串口输出读取到的SD卡块6的数据</p><p>按下KEY1按键会以DMA的方式写入1-256的数字到SD卡块6（一个字节写入一个数字），写入完成后会进入Tx传输完成回调中，在该回调函数中会从串口输出写入到SD卡块6中的数据</p><p>具体串口输出信息如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/27.18.gif" ></div><h1 id="7、常用函数"><a href="#7、常用函数" class="headerlink" title="7、常用函数"></a>7、常用函数</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">/*读块*/</span><br>HAL_StatusTypeDef <span class="hljs-title function_">HAL_SD_ReadBlocks</span><span class="hljs-params">(SD_HandleTypeDef *hsd, <span class="hljs-type">uint8_t</span> *pData, <span class="hljs-type">uint32_t</span> BlockAdd, <span class="hljs-type">uint32_t</span> NumberOfBlocks, <span class="hljs-type">uint32_t</span> Timeout)</span><br><br><span class="hljs-comment">/*写块*/</span><br>HAL_StatusTypeDef <span class="hljs-title function_">HAL_SD_WriteBlocks</span><span class="hljs-params">(SD_HandleTypeDef *hsd, <span class="hljs-type">uint8_t</span> *pData, <span class="hljs-type">uint32_t</span> BlockAdd, <span class="hljs-type">uint32_t</span> NumberOfBlocks, <span class="hljs-type">uint32_t</span> Timeout)</span><br><br><span class="hljs-comment">/*擦除块*/</span><br>HAL_StatusTypeDef <span class="hljs-title function_">HAL_SD_Erase</span><span class="hljs-params">(SD_HandleTypeDef *hsd, <span class="hljs-type">uint32_t</span> BlockStartAdd, <span class="hljs-type">uint32_t</span> BlockEndAdd)</span><br><br><span class="hljs-comment">/*获取SD卡信息*/</span><br>HAL_StatusTypeDef <span class="hljs-title function_">HAL_SD_GetCardInfo</span><span class="hljs-params">(SD_HandleTypeDef *hsd, HAL_SD_CardInfoTypeDef *pCardInfo)</span><br><br><span class="hljs-comment">/*获取SD卡状态*/</span><br>HAL_StatusTypeDef <span class="hljs-title function_">HAL_SD_GetCardStatus</span><span class="hljs-params">(SD_HandleTypeDef *hsd, HAL_SD_CardStatusTypeDef *pStatus)</span><br><br><span class="hljs-comment">/*以中断方式读块*/</span><br>HAL_StatusTypeDef <span class="hljs-title function_">HAL_SD_ReadBlocks_IT</span><span class="hljs-params">(SD_HandleTypeDef *hsd, <span class="hljs-type">uint8_t</span> *pData, <span class="hljs-type">uint32_t</span> BlockAdd, <span class="hljs-type">uint32_t</span> NumberOfBlocks)</span><br><br><span class="hljs-comment">/*以中断方式写块*/</span><br>HAL_StatusTypeDef <span class="hljs-title function_">HAL_SD_WriteBlocks_IT</span><span class="hljs-params">(SD_HandleTypeDef *hsd, <span class="hljs-type">uint8_t</span> *pData, <span class="hljs-type">uint32_t</span> BlockAdd, <span class="hljs-type">uint32_t</span> NumberOfBlocks)</span><br><br><span class="hljs-comment">/*以DMA方式读块*/</span><br>HAL_StatusTypeDef <span class="hljs-title function_">HAL_SD_ReadBlocks_DMA</span><span class="hljs-params">(SD_HandleTypeDef *hsd, <span class="hljs-type">uint8_t</span> *pData, <span class="hljs-type">uint32_t</span> BlockAdd, <span class="hljs-type">uint32_t</span> NumberOfBlocks)</span><br><br><span class="hljs-comment">/*以DMA方式写块*/</span><br>HAL_StatusTypeDef <span class="hljs-title function_">HAL_SD_WriteBlocks_DMA</span><span class="hljs-params">(SD_HandleTypeDef *hsd, <span class="hljs-type">uint8_t</span> *pData, <span class="hljs-type">uint32_t</span> BlockAdd, <span class="hljs-type">uint32_t</span> NumberOfBlocks)</span><br><br><span class="hljs-comment">/*SD卡Tx传输完成回调*/</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">HAL_SD_TxCpltCallback</span><span class="hljs-params">(SD_HandleTypeDef *hsd)</span><br><br><span class="hljs-comment">/*SD卡Rx传输完成回调*/</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">HAL_SD_RxCpltCallback</span><span class="hljs-params">(SD_HandleTypeDef *hsd)</span><br></code></pre></td></tr></table></figure><h1 id="8、注释详解"><a href="#8、注释详解" class="headerlink" title="8、注释详解"></a>8、注释详解</h1><p><em>注释1</em>：图片来源自 <a href="https://zh.wikipedia.org/wiki/SD%E5%8D%A1">维基百科-SD卡 </a></p><p><em>注释2</em>：图片来源自 STM32F407中文参考手册 RM009</p><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p><a href="https://www.epubit.com/bookDetails?id=UBc85046ed7208">STM32Cube高效开发教程（高级篇）</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>STM32CubeMX</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>STM32CubeMX教程26 FatFs 文件系统 - W25Q128读写</title>
    <link href="/2024/01/26/STM32CubeMX%E6%95%99%E7%A8%8B26-FatFs-%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F-W25Q128%E8%AF%BB%E5%86%99/"/>
    <url>/2024/01/26/STM32CubeMX%E6%95%99%E7%A8%8B26-FatFs-%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F-W25Q128%E8%AF%BB%E5%86%99/</url>
    
    <content type="html"><![CDATA[<h1 id="1、准备材料"><a href="#1、准备材料" class="headerlink" title="1、准备材料"></a>1、准备材料</h1><p><a href="http://47.111.11.73/docs/boards/stm32/zdyz_stm32f407_explorerV3.html">正点原子stm32f407探索者开发板V2.4</a></p><p>STM32CubeMX软件（<a href="https://www.st.com/en/development-tools/stm32cubemx.html">Version 6.10.0</a>）</p><p>keil µVision5 IDE（<a href="https://www.keil.com/download/product/">MDK-Arm</a>）</p><p><a href="https://www.st.com/zh/development-tools/stsw-link009.html">ST-LINK&#x2F;V2驱动</a></p><p><a href="https://doc.embedfire.com/stm32_products/must_read/zh/latest/doc/quickstart/DAP/DAP.html">野火DAP仿真器</a></p><p><a href="http://www.openedv.com/docs/tool/ruanjian/ATK-XCOM.html">XCOM V2.6串口助手</a></p><h1 id="2、实验目标"><a href="#2、实验目标" class="headerlink" title="2、实验目标"></a>2、实验目标</h1><p>使用STM32CubeMX软件配置STM32F407开发板<font color="#fe2c24"><strong>使用FatFs中间件通过SPI通信协议对W25Q128芯片进行读写等操作</strong></font></p><h1 id="3、实验流程"><a href="#3、实验流程" class="headerlink" title="3、实验流程"></a>3、实验流程</h1><h2 id="3-0、前提知识"><a href="#3-0、前提知识" class="headerlink" title="3.0、前提知识"></a>3.0、前提知识</h2><p>关于STM32F407使用SPI通信协议对W25Q128 FLASH芯片读写等操作涉及的SPI通信协议及W25Q128芯片相关知识请读者阅读<a href="https://www.cnblogs.com/lc-guo/p/17965537">STM32CubeMX教程20 SPI - W25Q128驱动</a>实验，本实验不再过多介绍</p><p>对于容量较小的存储设备可以使用底层库函数直接根据内存地址对设备来进行读写，但是一旦存储设备容量稍大，直接根据地址对设备来进行读写将变得比较困难</p><p>这个时候使用文件系统来对存储设备进行各种操作将比较方便，<font color="#fe2c24"><strong>FatFs是适用于小型嵌入式系统的通用 FAT&#x2F;exFAT 文件系统模块，它与磁盘I&#x2F;O层完全分离，可以独立于硬件平台，因此非常方便移植</strong></font></p><p>STM32CubeMX Version 6.10.0 中在中间件和软件包 Middleware and Software Packs 中集成了R0.12c 版本的FatFs文件系统模块，这个中间件支持Extemal SRAM、SD Card、USB Disk和User-defined四种模式</p><p>其中外部SRAM需要启用FSMC连接SRAM功能后才可以勾选，SD卡需要启用SDIO功能之后才可以勾选，USB Disk需要配置USB为大容量存储主机类功能后才可以勾选，User-defined则任何时候都可以勾选，将FatFs配置在User-defined模式下就可以利用FatFs使用除上述提到的三种存储之外的设备，比如SPI FLASH等</p><p>我们可以通过其官网<a href="http://elm-chan.org/fsw/ff/archives.html">FatFs历史版本记录</a>找到 R0.12c 版本的FatFs源码，将其下载下来之后观察其源码目录结构如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/26.1.png" ></div><p>其中ff.c&#x2F;ff.h为FatF模块的源码；fconf.h文件为模块配置文件，可以通过宏定义来选择哪些功能开启，哪些功能关闭；integer.h文件为变量类型重命名文件，主要是为了兼容不同的变量类型命名；option文件夹中的文件为unicode编码文件和操作系统相关函数的文件；上面提到的这些文件用户一般无需修改</p><p><font color="#fe2c24"><strong>如果读者希望手动移植FatFs到自己的嵌入式系统上，则应重点关注源码中diskio.c&#x2F;diskio.h两个文件</strong></font>，这两个文件中需要根据用户使用的RAM、MMC和USB这几个不同的内存类型来实现以下几个底层函数，函数如下列表所示，完成之后就可以直接通过FatFs提供的上层应用接口（eg：f_open()）来对底层的存储设备进行操作</p><ol><li>存储设备状态读取函数disk_status()</li><li>存储设备初始化函数disk_initialize()</li><li>存储设备读函数disk_read()</li><li>存储设备写函数disk_write()</li><li>存储设备IO控制操作函数disk_ioctl()</li></ol><p><font color="#fe2c24"><strong>但是如果要使用 STM32CubeMX 配置的话就不需要自己下载和移植源码</strong></font>，通过配置 STM32CubeMX 的 FatFs ，在生成的工程代码中就已经将 FatFs 的框架准备好，用户只需在生成的 user_diskio.c 文件中添加底层驱动IO函数即可（仅仅对于 User-defined 模式需要自己添加，其他的模式底层代码会自动生成），具体请阅读本实验”3.2.3、添加其他必要代码“小节</p><p>在 FatFs 中，大多数的API都拥有一个名为 FRESULT 的结构体返回值，其包含了20个枚举对象，由于该返回值对于查找错误有很大帮助，因此笔者在这里列出来所有返回值并做了简单解释，具体如下源代码所示</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-keyword">typedef</span> <span class="hljs-class"><span class="hljs-keyword">enum</span> &#123;</span><br>FR_OK = <span class="hljs-number">0</span>,<span class="hljs-comment">/* (0) 成功 */</span><br>FR_DISK_ERR,<span class="hljs-comment">/* (1) 在Disk IO层发生硬错误，检查user_diskio.c中代码 */</span><br>FR_INT_ERR,<span class="hljs-comment">/* (2) 参数检查错误 */</span><br>FR_NOT_READY,<span class="hljs-comment">/* (3) 物理驱动器不工作 */</span><br>FR_NO_FILE,<span class="hljs-comment">/* (4) 找不到文件 */</span><br>FR_NO_PATH,<span class="hljs-comment">/* (5) 找不到路径 */</span><br>FR_INVALID_NAME,<span class="hljs-comment">/* (6) 路径名称格式无效，检查是否8.3格式/是否支持长文件名 */</span><br>FR_DENIED,<span class="hljs-comment">/* (7) 因禁止访问或目录满导致无法访问 */</span><br>FR_EXIST,<span class="hljs-comment">/* (8) 因禁止访问导致无法访问 */</span><br>FR_INVALID_OBJECT,<span class="hljs-comment">/* (9) 文件/目录无效 */</span><br>FR_WRITE_PROTECTED,<span class="hljs-comment">/* (10) 物理驱动器写保护 */</span><br>FR_INVALID_DRIVE,<span class="hljs-comment">/* (11) 逻辑驱动器号无效 */</span><br>FR_NOT_ENABLED,<span class="hljs-comment">/* (12) 卷无工作区 */</span><br>FR_NO_FILESYSTEM,<span class="hljs-comment">/* (13) 无有效FAT卷 */</span><br>FR_MKFS_ABORTED,<span class="hljs-comment">/* (14) 函数f_mkfs()因为问题终止 */</span><br>FR_TIMEOUT,<span class="hljs-comment">/* (15) 不能在限定时间内获得访问卷的许可 */</span><br>FR_LOCKED,<span class="hljs-comment">/* (16) 因为文件共享策略导致操作被拒绝 */</span><br>FR_NOT_ENOUGH_CORE,<span class="hljs-comment">/* (17) 不能分配长文件名工作缓存区 */</span><br>FR_TOO_MANY_OPEN_FILES,<span class="hljs-comment">/* (18) 打开文件个数大于_FS_LOCK */</span><br>FR_INVALID_PARAMETER<span class="hljs-comment">/* (19) 无效参数 */</span><br>&#125; FRESULT;<br></code></pre></td></tr></table></figure><p>下图所示为带有 FatFs 模块的嵌入式系统的典型但非特定配置的依赖关系图，其中用户只需重点关注和实现”Low level disk I&#x2F;O layer”，实现之后在实际应用中只需使用 “User Application”中提供的上层应用接口即可 <em>（注释1）</em></p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/26.2.png"></div><h2 id="3-1、CubeMX相关配置"><a href="#3-1、CubeMX相关配置" class="headerlink" title="3.1、CubeMX相关配置"></a>3.1、CubeMX相关配置</h2><h3 id="3-1-0、工程基本配置"><a href="#3-1-0、工程基本配置" class="headerlink" title="3.1.0、工程基本配置"></a>3.1.0、工程基本配置</h3><p>打开STM32CubeMX软件，单击ACCESS TO MCU SELECTOR选择开发板MCU（选择你使用开发板的主控MCU型号），选中MCU型号后单击页面右上角Start Project开始工程，具体如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/26.3.png" width = "700"></div><p>开始工程之后在配置主页面System Core&#x2F;RCC中配置HSE&#x2F;LSE晶振，在System Core&#x2F;SYS中配置Debug模式，具体如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/26.4.png" width = "700"></div><p>详细工程建立内容读者可以阅读“<a href="https://blog.csdn.net/lc_guo/article/details/135071885?spm=1001.2014.3001.5502">STM32CubeMX教程1 工程建立</a>”</p><h3 id="3-1-1、时钟树配置"><a href="#3-1-1、时钟树配置" class="headerlink" title="3.1.1、时钟树配置"></a>3.1.1、时钟树配置</h3><p>系统时钟使用8MHz外部高速时钟HSE，HCLK、PCLK1和PCLK2均设置为STM32F407能达到的最高时钟频率，具体如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/26.5.png" width = "700"></div><h3 id="3-1-2、外设参数配置"><a href="#3-1-2、外设参数配置" class="headerlink" title="3.1.2、外设参数配置"></a>3.1.2、外设参数配置</h3><p>本实验需要初始化开发板上WK_UP、KEY2、KEY1和KEY0用户按键，具体配置步骤请阅读“<a href="https://blog.csdn.net/lc_guo/article/details/135103656?spm=1001.2014.3001.5502">STM32CubeMX教程3 GPIO输入 - 按键响应</a>”</p><p>本实验需要初始化USART1作为输出信息渠道，具体配置步骤请阅读“<a href="https://blog.csdn.net/lc_guo/article/details/135197604?spm=1001.2014.3001.5502">STM32CubeMX教程9 USART&#x2F;UART 异步通信</a>”</p><p>本实验需要以<a href="https://www.cnblogs.com/lc-guo/p/17965537">STM32CubeMX教程20 SPI - W25Q128驱动</a>实验为基础，需要读者能够通过CubeMX软件配置STM32F407的SPI实现正常读写W25Q128芯片的功能，然后接下来只需要增加本实验需要的中间件FatFs即可</p><p>在Pinout &amp; Configuration页面左边的功能分类栏中<font color="#fe2c24"><strong>单击 Middleware and SoftwarePacks&#x2F;FATFS，然后在右边的Mode下勾选 User-defined （目前只有该参数可以勾选）</strong></font>，在下方Configuration&#x2F;Set Defines对FatFs的功能进行配置，这个页面所有参数对应FatFs源码ffconf.h中的宏定义</p><p>这里我们将<font color="#be191c" style="background: #fef2f0"> CODE_PAGE(Code page on target) </font><font color="#fe2c24"><strong>参数修改为 Simplified Chinese (DBCS) ，然后将</strong></font><font color="#be191c" style="background: #fef2f0"> MAX_SS (Maximum Sector Size) </font><font color="#fe2c24"><strong>参数修改为W25Q128芯片的扇区大小4096字节，其他所有参数不做修改</strong></font>，具体如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/26.6.png" width = "700"></div><p>笔者将Set Defines页面的所有参数列为了一个表格，方便做简单介绍，具体如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/26.7.png" width = "700"></div><h3 id="3-1-3、外设中断配置"><a href="#3-1-3、外设中断配置" class="headerlink" title="3.1.3、外设中断配置"></a>3.1.3、外设中断配置</h3><p>本实验无需配置任何中断</p><h2 id="3-2、生成代码"><a href="#3-2、生成代码" class="headerlink" title="3.2、生成代码"></a>3.2、生成代码</h2><h3 id="3-2-0、配置Project-Manager页面"><a href="#3-2-0、配置Project-Manager页面" class="headerlink" title="3.2.0、配置Project Manager页面"></a>3.2.0、配置Project Manager页面</h3><p>单击进入Project Manager页面，在左边Project分栏中修改工程名称、工程目录和工具链，<font color="#fe2c24"><strong>接着在链接设置中将最小栈大小修改为0x2000（8KB），之前所有实验该参数都为默认的0x0400（1KB），这是因为其他实验不需要占用太多的栈空间，但是本实验需要比较大的栈空间，不增加可能会导致FatFs读写文件失败卡死或者导致MCU复位的情况发生，读者可根据自己的情况自行设置栈大小</strong></font></p><p>然后在Code Generator中勾选“Gnerate peripheral initialization as a pair of ‘c&#x2F;h’ files per peripheral”，最后单击页面右上角GENERATE CODE生成工程，具体如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/26.8.png" width = "700"></div><p>详细Project Manager配置内容读者可以阅读“<a href="https://blog.csdn.net/lc_guo/article/details/135071885?spm=1001.2014.3001.5502">STM32CubeMX教程1 工程建立</a>”实验3.4.3小节</p><h3 id="3-2-1、外设初始化调用流程"><a href="#3-2-1、外设初始化调用流程" class="headerlink" title="3.2.1、外设初始化调用流程"></a>3.2.1、外设初始化调用流程</h3><p>关于SPI的初始化函数调用流程请读者阅读<a href="https://www.cnblogs.com/lc-guo/p/17965537">STM32CubeMX教程20 SPI - W25Q128驱动</a>实验的”3.2.1、外设初始化调用流程“小节，在此不再赘述</p><p><font color="#fe2c24"><strong>重点来看看FatFs中间件是如何被初始化并与W25Q128芯片底层操作联系在一起的</strong></font>，首先在CubeMX中勾选启用FatFs中间件之后，会在生成的工程代码中增加MX_FATFS_Init()初始化函数，在该函数中只调用了FATFS_LinkDriver()一个函数</p><p>这个FATFS_LinkDriver()函数将一个名为 xxx_Driver（根据所选的存储设备不同，生成的该变量名称也会改变，比如User_Driver，SD_Driver等）的 Diskio_drvTypeDef 类结构体链接到了FatFs管理的驱动器列表中，并将卷路径赋值为”0:&#x2F;“</p><p><font color="#fe2c24"><strong>那么 xxx_Driver 是什么，为什么要将这个Diskio_drvTypeDef 类结构体的变量链接给FatFs管理呢？</strong></font></p><p>跳转到 xxx_Driver 的定义处，我们发现该结构体变量中保存了五个函数指针，刚刚好就是我们需要实现的对存储设备进行底层读写等操作的函数，具体xxx_Driver定义如下述代码所示</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs c">Diskio_drvTypeDef USER_Driver =<br>&#123;<br>  USER_initialize,<br>  USER_status,<br>  USER_read,<br>  USER_write,<br>  USER_ioctl,<br>&#125;;<br></code></pre></td></tr></table></figure><p><font color="#fe2c24"><strong>至此我们知道了FatFs初始化就是将用户重新实现的与存储设备底层进行读写等操作的函数链接到FatFs管理的驱动器列表中，将这些底层函数交给FatFs管理</strong></font>，用户直接使用FatFs提供的上层API函数来操作即可，对于为什么可以这样需要分析FatFs源码，本文就不涉及了</p><h3 id="3-2-2、外设中断调用流程"><a href="#3-2-2、外设中断调用流程" class="headerlink" title="3.2.2、外设中断调用流程"></a>3.2.2、外设中断调用流程</h3><p>本实验无配置任何中断</p><h3 id="3-2-3、添加其他必要代码"><a href="#3-2-3、添加其他必要代码" class="headerlink" title="3.2.3、添加其他必要代码"></a>3.2.3、添加其他必要代码</h3><p>打开整个工程之后观察其文件结构目录，在CubeMX中启用FatFs之后在生成的工程代码目录中会增加FatFs源码文件夹（该文件夹中文件无需用户修改），同时增加App和Target两个文件夹，<font color="#fe2c24"><strong>在App文件夹中的fatfs.c文件需要用户实现获取RTC时间的函数①get_fattime()，在App文件夹中的user_diskio.c中需要用户实现②USER_initialize()、③USER_status()、④USER_read()、⑤USER_write()和⑥USER_ioctl()共计六个函数</strong></font>，其中USER_initialize()，USER_status()，USER_read()三个函数必须实现，其他函数按需实现，其文件结构目录如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/26.9.png" ></div><p>对于配置为User-defined模式的FatFs来说，上面App文件夹和Target文件夹中的内容均需要用户自己实现，因为CubeMX并不知道用户想要使用的存储设备，所以也无法自动生成底层读写的IO驱动函数，但是对于Extemal SRAM、SD Card和USB Disk这三种固定类型的存储，则无需用户在App文件夹和Target文件夹中重新实现上面提到的一共六个函数，CubeMX生成的工程代码中会自动实现</p><p><font color="#fe2c24"><strong>接下来我们来实现上面提到的六个函数</strong></font>，注意FatFs获取RTC时间需要开启STM32F407的RTC功能，关于RTC的具体使用方法，读者可以阅读<a href="https://www.cnblogs.com/lc-guo/p/17953690">STM32CubeMX教程10 RTC 实时时钟 - 周期唤醒、闹钟AB事件和备份寄存器</a>实验，如果不需要可以直接将函数体内容注释</p><p>对于Flash_ReadID()、Flash_ReadBytes()和Flash_WriteSector()三个函数是在<a href="https://www.cnblogs.com/lc-guo/p/17965537">STM32CubeMX教程20 SPI - W25Q128驱动</a>实验中实现的，请读者自行查阅，重新实现的六个函数源代码如下所示</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">/*fatfs.h文件中*/</span><br><span class="hljs-comment">/*添加RTC头文件*/</span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;rtc.h&quot;</span></span><br><br><span class="hljs-comment">/*fatfs.c文件中*/</span><br><span class="hljs-comment">/*FatFs获取RTC时间*/</span><br>DWORD <span class="hljs-title function_">get_fattime</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span><br>&#123;<br>  <span class="hljs-comment">/* USER CODE BEGIN get_fattime */</span><br>RTC_TimeTypeDef sTime;<br>RTC_DateTypeDef sDate;<br><span class="hljs-comment">//获取RTC时间</span><br><span class="hljs-keyword">if</span>(HAL_RTC_GetTime(&amp;hrtc, &amp;sTime, RTC_FORMAT_BIN) == HAL_OK)<br>&#123;<br><span class="hljs-comment">//获取RTC日期</span><br>HAL_RTC_GetDate(&amp;hrtc, &amp;sDate, RTC_FORMAT_BIN);<br><br>WORD date=(<span class="hljs-number">2000</span>+sDate.Year<span class="hljs-number">-1980</span>)&lt;&lt;<span class="hljs-number">9</span>;<br>date = date |(sDate.Month&lt;&lt;<span class="hljs-number">5</span>) |sDate.Date;<br><br>WORD time=sTime.Hours&lt;&lt;<span class="hljs-number">11</span>;<br>time = time | (sTime.Minutes&lt;&lt;<span class="hljs-number">5</span>) | (sTime.Seconds&gt;<span class="hljs-number">1</span>);<br>DWORD dt=(date&lt;&lt;<span class="hljs-number">16</span>) | time;<br><br><span class="hljs-keyword">return</span>dt;<br>&#125;<br><span class="hljs-keyword">else</span><br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>  <span class="hljs-comment">/* USER CODE END get_fattime */</span><br>&#125;<br><br><span class="hljs-comment">/*user_diskio.c文件中*/</span><br><span class="hljs-comment">/*存储设备初始化函数*/</span><br>DSTATUS <span class="hljs-title function_">USER_initialize</span> <span class="hljs-params">(</span><br><span class="hljs-params">BYTE pdrv           <span class="hljs-comment">/* Physical drive nmuber to identify the drive */</span></span><br><span class="hljs-params">)</span><br>&#123;<br>  <span class="hljs-comment">/* USER CODE BEGIN INIT */</span><br>Stat = STA_NOINIT;<br><span class="hljs-comment">//获取驱动器状态</span><br>Stat = USER_status(pdrv);    <br>    <span class="hljs-keyword">return</span> Stat;<br>  <span class="hljs-comment">/* USER CODE END INIT */</span><br>&#125;<br><br><span class="hljs-comment">/*获取存储设备状态*/</span><br>DSTATUS <span class="hljs-title function_">USER_status</span> <span class="hljs-params">(</span><br><span class="hljs-params">BYTE pdrv       <span class="hljs-comment">/* Physical drive number to identify the drive */</span></span><br><span class="hljs-params">)</span><br>&#123;<br>  <span class="hljs-comment">/* USER CODE BEGIN STATUS */</span><br>Stat = STA_NOINIT;  <span class="hljs-comment">//驱动器未初始化，Stat=0x01</span><br><span class="hljs-keyword">if</span>(Flash_ReadID() != <span class="hljs-number">0</span>)   <span class="hljs-comment">//读取Flash芯片的ID,只要不是0就表示En25Q128已初始化</span><br>Stat &amp;= ~STA_NOINIT;  <span class="hljs-comment">//Stat=0x00</span><br><span class="hljs-keyword">return</span> Stat;<br>  <span class="hljs-comment">/* USER CODE END STATUS */</span><br>&#125;<br><br><span class="hljs-comment">/*底层读函数*/</span><br>DRESULT <span class="hljs-title function_">USER_read</span> <span class="hljs-params">(</span><br><span class="hljs-params">BYTE pdrv,      <span class="hljs-comment">/* Physical drive nmuber to identify the drive */</span></span><br><span class="hljs-params">BYTE *buff,     <span class="hljs-comment">/* Data buffer to store read data */</span></span><br><span class="hljs-params">DWORD sector,   <span class="hljs-comment">/* Sector address in LBA */</span></span><br><span class="hljs-params">UINT count      <span class="hljs-comment">/* Number of sectors to read */</span></span><br><span class="hljs-params">)</span><br>&#123;<br>  <span class="hljs-comment">/* USER CODE BEGIN READ */</span><br><span class="hljs-comment">//扇区编号左移12位得绝对起始地址</span><br><span class="hljs-type">uint32_t</span> globalAddr = sector &lt;&lt; <span class="hljs-number">12</span>;  <br><span class="hljs-comment">//字节个数，左移12位就是乘4096，每个扇有4096字节</span><br><span class="hljs-type">uint16_t</span> byteCount = count &lt;&lt; <span class="hljs-number">12</span>;   <br><span class="hljs-comment">//读取数据</span><br>Flash_ReadBytes(globalAddr, (<span class="hljs-type">uint8_t</span> *)buff, byteCount);<br><br><span class="hljs-keyword">return</span> RES_OK;<br>  <span class="hljs-comment">/* USER CODE END READ */</span><br>&#125;<br><br><span class="hljs-comment">/*底层写函数*/</span><br>DRESULT <span class="hljs-title function_">USER_write</span> <span class="hljs-params">(</span><br><span class="hljs-params">BYTE pdrv,          <span class="hljs-comment">/* Physical drive nmuber to identify the drive */</span></span><br><span class="hljs-params"><span class="hljs-type">const</span> BYTE *buff,   <span class="hljs-comment">/* Data to be written */</span></span><br><span class="hljs-params">DWORD sector,       <span class="hljs-comment">/* Sector address in LBA */</span></span><br><span class="hljs-params">UINT count          <span class="hljs-comment">/* Number of sectors to write */</span></span><br><span class="hljs-params">)</span><br>&#123;<br>  <span class="hljs-comment">/* USER CODE BEGIN WRITE */</span><br>  <span class="hljs-comment">/* USER CODE HERE */</span><br><span class="hljs-comment">//绝对地址</span><br><span class="hljs-type">uint32_t</span> globalAddr = sector&lt;&lt;<span class="hljs-number">12</span>;  <br><span class="hljs-comment">//字节个数</span><br><span class="hljs-type">uint16_t</span> byteCount  = count&lt;&lt;<span class="hljs-number">12</span>;   <br>Flash_WriteSector(globalAddr, (<span class="hljs-type">uint8_t</span>*)buff, byteCount);<br><br><span class="hljs-keyword">return</span> RES_OK;                                                                                                                       <br>  <span class="hljs-comment">/* USER CODE END WRITE */</span><br>&#125;<br><br><span class="hljs-comment">/*底层控制操作函数*/</span><br>DRESULT <span class="hljs-title function_">USER_ioctl</span> <span class="hljs-params">(</span><br><span class="hljs-params">BYTE pdrv,      <span class="hljs-comment">/* Physical drive nmuber (0..) */</span></span><br><span class="hljs-params">BYTE cmd,       <span class="hljs-comment">/* Control code */</span></span><br><span class="hljs-params"><span class="hljs-type">void</span> *buff      <span class="hljs-comment">/* Buffer to send/receive control data */</span></span><br><span class="hljs-params">)</span><br>&#123;<br>  <span class="hljs-comment">/* USER CODE BEGIN IOCTL */</span><br>DRESULT res = RES_OK;<br><br><span class="hljs-keyword">switch</span>(cmd)<br>&#123;<br><span class="hljs-comment">/*以下四个命令都是按照FatFs默认参数配置时必须需要的*/</span><br><span class="hljs-comment">//完成挂起的写入过程(在_FS_READONLY == 0时需要)</span><br><span class="hljs-keyword">case</span> CTRL_SYNC:   <br><span class="hljs-keyword">break</span>;<br><br><span class="hljs-comment">//获取存储介质容量(在_USE_MKFS == 1时需要)</span><br><span class="hljs-keyword">case</span> GET_SECTOR_COUNT:  <br><span class="hljs-comment">//W25Q128总的扇区个数,4096</span><br>*(DWORD *)buff = FLASH_SECTOR_COUNT;  <br><span class="hljs-keyword">break</span>;<br><br><span class="hljs-comment">//获取扇区大小(_MAX_SS != _MIN_SS时需要)</span><br><span class="hljs-keyword">case</span> GET_SECTOR_SIZE:  <br><span class="hljs-comment">//W25Q128每个扇区的大小，4096字节</span><br>*(DWORD *)buff = FLASH_SECTOR_SIZE;  <br><span class="hljs-keyword">break</span>;<br><br><span class="hljs-comment">//获取擦除块的大小(_USE_MKFS == 1时需要)</span><br><span class="hljs-keyword">case</span> GET_BLOCK_SIZE:  <br><span class="hljs-comment">//W25Q128每个块拥有16个扇区，按块擦除</span><br>*(DWORD *)buff = <span class="hljs-number">16</span>;  <br><span class="hljs-keyword">break</span>;<br><br><span class="hljs-keyword">default</span>:<br>res = RES_ERROR;<br>&#125;<br><br><span class="hljs-keyword">return</span> res;<br>  <span class="hljs-comment">/* USER CODE END IOCTL */</span><br>&#125;<br></code></pre></td></tr></table></figure><p>然后增加使用FatFs库中API进行文件操作的函数，包括挂载文件系统、显示SD卡信息、读&#x2F;写TXT文件、获取文件信息、扫描文件列表和删除文件等函数，笔者将其封装在了file_operate.c&#x2F;file_operate.h文件中，具体的源代码如下所示</p><p><strong>file_operate.c文件</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;file_operate.h&quot;</span></span><br><br><span class="hljs-comment">//定义用于格式化的工作区缓存</span><br>BYTE workBuffer[<span class="hljs-number">4</span>*User_Sector];<br><br><span class="hljs-comment">/*挂载FatFs文件系统*/</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">Mount_FatFs</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span><br>&#123;<br><span class="hljs-comment">//挂载文件系统</span><br>FRESULT retUSER = f_mount(&amp;User_FatFs, User_SDPath, <span class="hljs-number">1</span>);<br><span class="hljs-comment">//发生错误</span><br><span class="hljs-keyword">if</span>(retUSER != FR_OK)<br>&#123;<br><span class="hljs-comment">//没有文件系统，需要格式化</span><br><span class="hljs-keyword">if</span>(retUSER == FR_NO_FILESYSTEM)<br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\r\n没有文件系统,开始格式化\r\n&quot;</span>);<br><span class="hljs-comment">//创建文件系统</span><br>retUSER = f_mkfs(User_SDPath, FM_FAT32, <span class="hljs-number">0</span>, workBuffer, <span class="hljs-number">4</span>*User_Sector);<br><span class="hljs-comment">//格式化失败</span><br><span class="hljs-keyword">if</span>(retUSER != FR_OK)<br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;格式化失败，错误代码 = %d\r\n&quot;</span>, retUSER);<br>&#125;<br><span class="hljs-comment">//格式化成功</span><br><span class="hljs-keyword">else</span><br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;格式化成功，开始重新挂载\r\n&quot;</span>);<br><span class="hljs-comment">//有文件系统后重新挂载</span><br>retUSER = f_mount(&amp;User_FatFs, User_SDPath, <span class="hljs-number">1</span>);<br><span class="hljs-comment">//挂载失败</span><br><span class="hljs-keyword">if</span>(retUSER != FR_OK)<br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;发生错误，错误代码 = %d\r\n&quot;</span>, retUSER);<br>&#125;<br><span class="hljs-comment">//挂载成功</span><br><span class="hljs-keyword">else</span><br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;*** 文件系统挂载成功 ***\r\n&quot;</span>);<br>&#125;<br>&#125;<br>&#125;<br><span class="hljs-comment">//不是没有文件系统，而是发生其他错误</span><br><span class="hljs-keyword">else</span><br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;发生其他错误，错误代码 = %d\r\n&quot;</span>, retUSER);<br>&#125;<br>&#125;<br><span class="hljs-comment">//有文件系统直接挂在成功</span><br><span class="hljs-keyword">else</span><br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;文件系统挂载成功\r\n&quot;</span>);<br>&#125;<br>&#125;<br><br><span class="hljs-comment">/*获取磁盘信息并在LCD上显示*/</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">FatFs_GetDiskInfo</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span><br>&#123;<br>    FATFS *fs;<br><span class="hljs-comment">//定义剩余簇个数变量</span><br>    DWORD fre_clust; <br><span class="hljs-comment">//获取剩余簇个数</span><br>    FRESULT res = f_getfree(<span class="hljs-string">&quot;0:&quot;</span>, &amp;fre_clust, &amp;fs); <br><span class="hljs-comment">//获取失败</span><br>    <span class="hljs-keyword">if</span>(res != FR_OK)<br>    &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;f_getfree() error\r\n&quot;</span>);<br>        <span class="hljs-keyword">return</span>;<br>    &#125;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\r\n*** FAT disk info ***\r\n&quot;</span>);<br><br><span class="hljs-comment">//总的扇区个数</span><br>    DWORD tot_sect = (fs-&gt;n_fatent - <span class="hljs-number">2</span>) * fs-&gt;csize;  <br><br><span class="hljs-comment">//剩余的扇区个数 = 剩余簇个数 * 每个簇的扇区个数</span><br>    DWORD fre_sect = fre_clust * fs-&gt;csize;    <br><br><span class="hljs-comment">//对于SD卡和U盘, _MIN_SS=512字节</span><br><span class="hljs-meta">#<span class="hljs-keyword">if</span>  _MAX_SS == _MIN_SS  </span><br>    <span class="hljs-comment">//SD卡的_MIN_SS固定为512，右移11位相当于除以2048</span><br><span class="hljs-comment">//剩余空间大小，单位：MB，用于SD卡，U盘</span><br>    DWORD freespace= (fre_sect&gt;&gt;<span class="hljs-number">11</span>); <br><span class="hljs-comment">//总空间大小，单位：MB，用于SD卡，U盘</span><br>    DWORD totalSpace= (tot_sect&gt;&gt;<span class="hljs-number">11</span>);  <br><span class="hljs-meta">#<span class="hljs-keyword">else</span></span><br><span class="hljs-comment">//Flash存储器，小容量</span><br><span class="hljs-comment">//剩余空间大小，单位：KB</span><br>    DWORD freespace= (fre_sect*fs-&gt;ssize)&gt;&gt;<span class="hljs-number">10</span>;   <br><span class="hljs-comment">//总空间大小，单位：KB</span><br>    DWORD totalSpace= (tot_sect*fs-&gt;ssize)&gt;&gt;<span class="hljs-number">10</span>;  <br><span class="hljs-meta">#<span class="hljs-keyword">endif</span></span><br><br><span class="hljs-comment">//FAT类型</span><br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;FAT type = %d\r\n&quot;</span>,fs-&gt;fs_type);<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;[1=FAT12,2=FAT16,3=FAT32,4=exFAT]\r\n&quot;</span>);<br><br><span class="hljs-comment">//扇区大小，单位字节</span><br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Sector size(bytes) = &quot;</span>);<br><span class="hljs-comment">//SD卡固定512字节</span><br><span class="hljs-meta">#<span class="hljs-keyword">if</span>  _MAX_SS == _MIN_SS </span><br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d\r\n&quot;</span>, _MIN_SS);<br><span class="hljs-meta">#<span class="hljs-keyword">else</span></span><br><span class="hljs-comment">//FLASH存储器</span><br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d\r\n&quot;</span>, fs-&gt;ssize);<br><span class="hljs-meta">#<span class="hljs-keyword">endif</span></span><br><br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Cluster size(sectors) = %d\r\n&quot;</span>, fs-&gt;csize);<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Total cluster count = %ld\r\n&quot;</span>, fs-&gt;n_fatent<span class="hljs-number">-2</span>);<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Total sector count = %ld\r\n&quot;</span>, tot_sect);<br><br><span class="hljs-comment">//总空间</span><br><span class="hljs-meta">#<span class="hljs-keyword">if</span>  _MAX_SS == _MIN_SS </span><br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Total space(MB) = %ld\r\n&quot;</span>, totalSpace);<br><span class="hljs-meta">#<span class="hljs-keyword">else</span></span><br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Total space(KB) = %ld\r\n&quot;</span>, totalSpace);<br><span class="hljs-meta">#<span class="hljs-keyword">endif</span></span><br><br><span class="hljs-comment">//空闲簇数量</span><br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Free cluster count = %ld\r\n&quot;</span>,fre_clust);<br><span class="hljs-comment">//空闲扇区数量</span><br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Free sector count = %ld\r\n&quot;</span>, fre_sect);<br><br><span class="hljs-comment">//空闲空间</span><br><span class="hljs-meta">#<span class="hljs-keyword">if</span>  _MAX_SS == _MIN_SS </span><br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Free space(MB) = %ld\r\n&quot;</span>, freespace);<br><span class="hljs-meta">#<span class="hljs-keyword">else</span></span><br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Free space(KB) = %ld\r\n&quot;</span>, freespace);<br><span class="hljs-meta">#<span class="hljs-keyword">endif</span></span><br><br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Get FAT disk info OK\r\n&quot;</span>);<br>&#125;<br><br><span class="hljs-comment">/*创建文本文件*/</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">FatFs_WriteTXTFile</span><span class="hljs-params">(TCHAR *filename,<span class="hljs-type">uint16_t</span> year, <span class="hljs-type">uint8_t</span> month, <span class="hljs-type">uint8_t</span> day)</span><br>&#123;<br>FILfile;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\r\n*** Creating TXT file: %s ***\r\n&quot;</span>, filename);<br><br>FRESULT res = f_open(&amp;file, filename, FA_CREATE_ALWAYS | FA_WRITE);<br><span class="hljs-comment">//打开/创建文件成功</span><br><span class="hljs-keyword">if</span>(res == FR_OK)<br>&#123;<br><span class="hljs-comment">//字符串必须有换行符&quot;\n&quot;</span><br>TCHAR str[]=<span class="hljs-string">&quot;Line1: Hello, FatFs***\n&quot;</span>;  <br><span class="hljs-comment">//不会写入结束符&quot;\0&quot;</span><br>f_puts(str, &amp;file); <br><br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Write file OK: %s\r\n&quot;</span>, filename);<br>&#125;<br><span class="hljs-keyword">else</span><br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Open file error，error code: %d\r\n&quot;</span>, res);<br>&#125;<br><span class="hljs-comment">//使用完毕关闭文件</span><br>f_close(&amp;file);<br>&#125;<br><br><span class="hljs-comment">/*读取一个文本文件的内容*/</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">FatFs_ReadTXTFile</span><span class="hljs-params">(TCHAR *filename)</span><br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\r\n*** Reading TXT file: %s ***\r\n&quot;</span>, filename);<br><br>FILfile;<br><span class="hljs-comment">//以只读方式打开文件</span><br>FRESULT res = f_open(&amp;file, filename, FA_READ);  <br><span class="hljs-comment">//打开成功</span><br><span class="hljs-keyword">if</span>(res == FR_OK)<br>&#123;<br><span class="hljs-comment">//读取缓存</span><br>TCHAR str[<span class="hljs-number">100</span>];<br><span class="hljs-comment">//没有读到文件内容末尾</span><br><span class="hljs-keyword">while</span>(!f_eof(&amp;file))<br>&#123;<br><span class="hljs-comment">//读取1个字符串,自动加上结束符”\0”</span><br>f_gets(str,<span class="hljs-number">100</span>, &amp;file);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%s&quot;</span>, str);<br>&#125;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\r\n&quot;</span>);<br>&#125;<br><span class="hljs-comment">//如果没有该文件</span><br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(res == FR_NO_FILE)<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;File does not exist\r\n&quot;</span>);<br><span class="hljs-comment">//打开失败</span><br><span class="hljs-keyword">else</span><br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;f_open() error，error code: %d\r\n&quot;</span>, res);<br><span class="hljs-comment">//关闭文件</span><br>f_close(&amp;file);<br>&#125;<br><br><span class="hljs-comment">/*扫描和显示指定目录下的文件和目录*/</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">FatFs_ScanDir</span><span class="hljs-params">(<span class="hljs-type">const</span> TCHAR* PathName)</span><br>&#123;<br>DIR dir;<span class="hljs-comment">//目录对象</span><br>FILINFO fno;<span class="hljs-comment">//文件信息</span><br><span class="hljs-comment">//打开目录</span><br>FRESULT res = f_opendir(&amp;dir, PathName);<br><span class="hljs-comment">//打开失败</span><br><span class="hljs-keyword">if</span>(res != FR_OK)<br>&#123;<br><span class="hljs-comment">//关闭目录，直接退出函数</span><br>f_closedir(&amp;dir);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\r\nf_opendir() error，error code: %d\r\n&quot;</span>, res);<br><span class="hljs-keyword">return</span>;<br>&#125;<br><br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\r\n*** All entries in dir: %s ***\r\n&quot;</span>, PathName);<br><span class="hljs-comment">//顺序读取目录中的文件</span><br><span class="hljs-keyword">while</span>(<span class="hljs-number">1</span>)<br>&#123;<br><span class="hljs-comment">//读取目录下的一个项</span><br>res = f_readdir(&amp;dir, &amp;fno);    <br><span class="hljs-comment">//文件名为空表示没有多的项可读了</span><br><span class="hljs-keyword">if</span>(res != FR_OK || fno.fname[<span class="hljs-number">0</span>] == <span class="hljs-number">0</span>)<br><span class="hljs-keyword">break</span>;  <br><span class="hljs-comment">//如果是一个目录</span><br><span class="hljs-keyword">if</span>(fno.fattrib &amp; AM_DIR)  <br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;DIR: %s\r\n&quot;</span>, fno.fname);<br>&#125;<br><span class="hljs-comment">//如果是一个文件</span><br><span class="hljs-keyword">else</span>  <br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;FILE: %s\r\n&quot;</span>,fno.fname);<br>&#125;<br>&#125;<br><span class="hljs-comment">//扫描完毕，关闭目录</span><br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Scan dir OK\r\n&quot;</span>);<br>f_closedir(&amp;dir);<br>&#125;<br><br><span class="hljs-comment">/*获取一个文件的文件信息*/</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">FatFs_GetFileInfo</span><span class="hljs-params">(TCHAR *filename)</span><br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\r\n*** File info of: %s ***\r\n&quot;</span>, filename);<br><br>FILINFO fno;<br><span class="hljs-comment">//检查文件或子目录是否存在</span><br>FRESULT fr = f_stat(filename, &amp;fno);<br><span class="hljs-comment">//如果存在从fno中读取文件信息</span><br><span class="hljs-keyword">if</span>(fr == FR_OK)<br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;File size(bytes) = %ld\r\n&quot;</span>, fno.fsize);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;File attribute = 0x%x\r\n&quot;</span>, fno.fattrib);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;File Name = %s\r\n&quot;</span>, fno.fname);<br><span class="hljs-comment">//输出创建/修改文件时的时间戳</span><br>FatFs_PrintfFileDate(fno.fdate, fno.ftime);<br>&#125;<br><span class="hljs-comment">//如果没有该文件</span><br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (fr == FR_NO_FILE)<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;File does not exist\r\n&quot;</span>);<br><span class="hljs-comment">//发生其他错误</span><br><span class="hljs-keyword">else</span><br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;f_stat() error，error code: %d\r\n&quot;</span>, fr);<br>&#125;<br><br><span class="hljs-comment">/*删除文件*/</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">FatFs_DeleteFile</span><span class="hljs-params">(TCHAR *filename)</span><br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\r\n*** Delete File: %s ***\r\n&quot;</span>, filename);<br>FILfile;<br><span class="hljs-comment">//打开文件</span><br>FRESULT res = f_open(&amp;file, filename, FA_OPEN_EXISTING);  <br><span class="hljs-keyword">if</span>(res == FR_OK)<br>&#123;<br><span class="hljs-comment">//关闭文件</span><br>f_close(&amp;file);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;open successfully!\r\n&quot;</span>);<br>&#125;<br><span class="hljs-comment">//删除文件</span><br>res = f_unlink(filename);<br><span class="hljs-comment">//删除成功</span><br><span class="hljs-keyword">if</span>(res == FR_OK)<br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;The file was deleted successfully!\r\n&quot;</span>);<br>&#125;<br><span class="hljs-comment">//删除失败</span><br><span class="hljs-keyword">else</span><br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;File deletion failed, error code：%d\r\n&quot;</span>, res);<br>&#125;<br>&#125;<br><br><span class="hljs-comment">/*打印输出文件日期*/</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">FatFs_PrintfFileDate</span><span class="hljs-params">(WORD date, WORD time)</span><br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;File data = %d/%d/%d\r\n&quot;</span>, ((date&gt;&gt;<span class="hljs-number">9</span>)&amp;<span class="hljs-number">0x7F</span>)+<span class="hljs-number">1980</span>, (date&gt;&gt;<span class="hljs-number">5</span>)&amp;<span class="hljs-number">0xF</span>, date&amp;<span class="hljs-number">0x1F</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;File time = %d:%d:%d\r\n&quot;</span>, (time&gt;&gt;<span class="hljs-number">11</span>)&amp;<span class="hljs-number">0x1F</span>, (time&gt;&gt;<span class="hljs-number">5</span>)&amp;<span class="hljs-number">0x3F</span>, time&amp;<span class="hljs-number">0x1F</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>file_operate.h文件</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">ifndef</span> FILE_OPERATE_H</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> FILE_OPERATE_H</span><br><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;main.h&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;FatFs.h&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;stdio.h&quot;</span></span><br><br><span class="hljs-comment">/*定义自己的存储设备*/</span><br><span class="hljs-comment">/*用户存储设备扇区字节数*/</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> User_Sector 4096</span><br><span class="hljs-comment">/*用户存储设备FatFS对象*/</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> User_FatFs USERFatFS</span><br><span class="hljs-comment">/*用户存储设备卷路径*/</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> User_SDPath USERPath</span><br><br><span class="hljs-comment">/*函数声明*/</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">Mount_FatFs</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span>;<br><span class="hljs-type">void</span> <span class="hljs-title function_">FatFs_GetDiskInfo</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span>;<br><span class="hljs-type">void</span> <span class="hljs-title function_">FatFs_ScanDir</span><span class="hljs-params">(<span class="hljs-type">const</span> TCHAR* PathName)</span>;<br><span class="hljs-type">void</span> <span class="hljs-title function_">FatFs_ReadTXTFile</span><span class="hljs-params">(TCHAR *filename)</span>;<br><span class="hljs-type">void</span> <span class="hljs-title function_">FatFs_WriteTXTFile</span><span class="hljs-params">(TCHAR *filename,<span class="hljs-type">uint16_t</span> year, <span class="hljs-type">uint8_t</span> month, <span class="hljs-type">uint8_t</span> day)</span>;<br><span class="hljs-type">void</span> <span class="hljs-title function_">FatFs_GetFileInfo</span><span class="hljs-params">(TCHAR *filename)</span>;<br><span class="hljs-type">void</span> <span class="hljs-title function_">FatFs_DeleteFile</span><span class="hljs-params">(TCHAR *filename)</span>;<br><span class="hljs-type">void</span> <span class="hljs-title function_">FatFs_PrintfFileDate</span><span class="hljs-params">(WORD date, WORD time)</span>;<br><br><span class="hljs-meta">#<span class="hljs-keyword">endif</span></span><br></code></pre></td></tr></table></figure><p>向工程中添加.c&#x2F;.h文件的步骤请阅读“<a href="https://blog.csdn.net/lc_guo/article/details/135380334?spm=1001.2014.3001.5501">STM32CubeMX教程19 I2C - MPU6050驱动</a>”实验3.2.3小节</p><p>最后在main.c文件中添加 ”file_operate.h“ 头文件，然后在主函数 main() 中调用文件系统挂载函数，实现按键控制逻辑程序，具体源代码如下所示</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">/*main.c中添加头文件*/</span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;file_operate.h&quot;</span> </span><br><br><span class="hljs-comment">/*外输初始化完进入主循环前*/</span><br><span class="hljs-comment">//检测SPI与W25Q128通信是否正常</span><br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Reset,ID:0x%x\r\n&quot;</span>, Flash_ReadID());<br><span class="hljs-comment">//挂载文件系统</span><br>Mount_FatFs();<br><span class="hljs-comment">//获取磁盘信息</span><br>FatFs_GetDiskInfo();<br><br><span class="hljs-comment">/*主循环中按键逻辑*/</span><br><span class="hljs-comment">/*按键WK_UP被按下*/</span><br><span class="hljs-keyword">if</span>(HAL_GPIO_ReadPin(WK_UP_GPIO_Port,WK_UP_Pin) == GPIO_PIN_SET)<br>&#123;<br>HAL_Delay(<span class="hljs-number">50</span>);<br><span class="hljs-keyword">if</span>(HAL_GPIO_ReadPin(WK_UP_GPIO_Port,WK_UP_Pin) == GPIO_PIN_SET)<br>&#123;<br>FatFs_ScanDir(<span class="hljs-string">&quot;0:/&quot;</span>);<br><span class="hljs-keyword">while</span>(HAL_GPIO_ReadPin(WK_UP_GPIO_Port,WK_UP_Pin));<br>&#125;<br>&#125;<br><br><span class="hljs-comment">/*按键KEY2被按下*/</span><br><span class="hljs-keyword">if</span>(HAL_GPIO_ReadPin(KEY2_GPIO_Port,KEY2_Pin) == GPIO_PIN_RESET)<br>&#123;<br>HAL_Delay(<span class="hljs-number">50</span>);<br><span class="hljs-keyword">if</span>(HAL_GPIO_ReadPin(KEY2_GPIO_Port,KEY2_Pin) == GPIO_PIN_RESET)<br>&#123;<br>FatFs_WriteTXTFile(<span class="hljs-string">&quot;test.txt&quot;</span>,<span class="hljs-number">2016</span>,<span class="hljs-number">11</span>,<span class="hljs-number">15</span>);<br><span class="hljs-keyword">while</span>(!HAL_GPIO_ReadPin(KEY2_GPIO_Port,KEY2_Pin));<br>&#125;<br>&#125;<br><br><span class="hljs-comment">/*按键KEY1被按下*/</span><br><span class="hljs-keyword">if</span>(HAL_GPIO_ReadPin(KEY1_GPIO_Port,KEY1_Pin) == GPIO_PIN_RESET)<br>&#123;<br>HAL_Delay(<span class="hljs-number">50</span>);<br><span class="hljs-keyword">if</span>(HAL_GPIO_ReadPin(KEY1_GPIO_Port,KEY1_Pin) == GPIO_PIN_RESET)<br>&#123;<br>FatFs_ReadTXTFile(<span class="hljs-string">&quot;test.txt&quot;</span>);<br>FatFs_GetFileInfo(<span class="hljs-string">&quot;test.txt&quot;</span>);<br><span class="hljs-keyword">while</span>(!HAL_GPIO_ReadPin(KEY1_GPIO_Port,KEY1_Pin));<br>&#125;<br>&#125;<br><br><span class="hljs-comment">/*按键KEY0被按下*/</span><br><span class="hljs-keyword">if</span>(HAL_GPIO_ReadPin(KEY0_GPIO_Port,KEY0_Pin) == GPIO_PIN_RESET)<br>&#123;<br>HAL_Delay(<span class="hljs-number">50</span>);<br><span class="hljs-keyword">if</span>(HAL_GPIO_ReadPin(KEY0_GPIO_Port,KEY0_Pin) == GPIO_PIN_RESET)<br>&#123;<br>FatFs_DeleteFile(<span class="hljs-string">&quot;test.txt&quot;</span>);<br><span class="hljs-keyword">while</span>(!HAL_GPIO_ReadPin(KEY0_GPIO_Port,KEY0_Pin));<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="4、烧录验证"><a href="#4、烧录验证" class="headerlink" title="4、烧录验证"></a>4、烧录验证</h1><p>烧录程序，开发板上电后会尝试在W25Q128 FLASH芯片上挂载文件系统，挂载成功后会输出读取到的 FLASH芯片的信息，接下来按照下面几个步骤使用FatFs文件系统对 FLASH芯片进行读写等测试</p><ol><li>按下开发板上的WK_UP按键，扫描FLASH芯片根目录下所有文件，并通过串口将文件列表输出</li><li>按下开发板上的KEY2按键，在 FLASH芯片根目录创建一个”test.txt“文件，将一个字符串 ”Hello,OSnotes“ 写入该文件中，该字符串大小为15个字节（该字符串中末尾包括了一个’\n‘和一个‘\0’）</li><li>按下开发板上的KEY1按键，读取FLASH芯片根目录下名为”test.txt“的文件，将其中的内容通过串口输出，然后读取该文件的信息（大小，属性，名称），并通过串口输出</li><li>按下开发板上的KEY0按键，删除FLASH芯片根目录下名为”test.txt“的文件</li></ol><p>整个实验过程串口具体的输出情况如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/26.10.gif" ></div><h1 id="5、常用函数"><a href="#5、常用函数" class="headerlink" title="5、常用函数"></a>5、常用函数</h1><p>FatFs的所有API函数详细介绍请参看FatFs官网 <a href="http://elm-chan.org/fsw/ff/00index_e.html">FatFs - Generic FAT Filesystem Module</a>，如下所示为笔者对其常用应用接口及其功能做简单介绍</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">/*注册/取消注册卷的工作区域*/</span><br>FRESULT <span class="hljs-title function_">f_mount</span><span class="hljs-params">(FatFs* fs, <span class="hljs-type">const</span> TCHAR* path, BYTE opt)</span><br><span class="hljs-comment">/*在逻辑驱动器上创建FAT卷*/</span><br>FRESULT <span class="hljs-title function_">f_mkfs</span><span class="hljs-params">(<span class="hljs-type">const</span> TCHAR* path, BYTE opt, DWORD au, <span class="hljs-type">void</span>* work, UINT len)</span><br><span class="hljs-comment">/*获取卷上的可用空间*/</span><br>FRESULT <span class="hljs-title function_">f_getfree</span><span class="hljs-params">(<span class="hljs-type">const</span> TCHAR* path, DWORD* nclst, FatFs** FatFs)</span><br><span class="hljs-comment">/*打开/创建文件*/</span><br>FRESULT <span class="hljs-title function_">f_open</span><span class="hljs-params">(FIL* fp, <span class="hljs-type">const</span> TCHAR* path, BYTE mode)</span><br><span class="hljs-comment">/*写入一个字符串*/</span><br><span class="hljs-type">int</span> <span class="hljs-title function_">f_puts</span><span class="hljs-params">(<span class="hljs-type">const</span> TCHAR* str, FIL* fp)</span><br><span class="hljs-comment">/*写入格式化字符串*/</span><br><span class="hljs-type">int</span> <span class="hljs-title function_">f_printf</span><span class="hljs-params">(FIL* fp, <span class="hljs-type">const</span> TCHAR* fmt, ...)</span><br><span class="hljs-comment">/*关闭打开的文件*/</span><br>FRESULT <span class="hljs-title function_">f_close</span><span class="hljs-params">(FIL* fp)</span><br><span class="hljs-comment">/*读取字符串*/</span><br>TCHAR* <span class="hljs-title function_">f_gets</span><span class="hljs-params">(TCHAR* buff, <span class="hljs-type">int</span> len, FIL* fp)</span><br><span class="hljs-comment">/*打开目录*/</span><br>FRESULT <span class="hljs-title function_">f_opendir</span><span class="hljs-params">(DIR* dp, <span class="hljs-type">const</span> TCHAR* path)</span><br><span class="hljs-comment">/*读取目录项*/</span><br>FRESULT <span class="hljs-title function_">f_readdir</span><span class="hljs-params">(DIR* dp, FILINFO* fno)</span><br><span class="hljs-comment">/*关闭打开的目录*/</span><br>FRESULT <span class="hljs-title function_">f_closedir</span><span class="hljs-params">(DIR *dp)</span><br><span class="hljs-comment">/*检查文件或子目录是否存在*/</span><br>FRESULT <span class="hljs-title function_">f_stat</span><span class="hljs-params">(<span class="hljs-type">const</span> TCHAR* path, FILINFO* fno)</span><br><span class="hljs-comment">/*删除文件或子目录*/</span><br>FRESULT <span class="hljs-title function_">f_unlink</span><span class="hljs-params">(<span class="hljs-type">const</span> TCHAR* path)</span><br><span class="hljs-comment">/*重命名/移动文件或子目录*/</span><br>FRESULT <span class="hljs-title function_">f_rename</span><span class="hljs-params">(<span class="hljs-type">const</span> TCHAR* path_old, <span class="hljs-type">const</span> TCHAR* path_new)</span><br><span class="hljs-comment">/*创建子目录*/</span><br>FRESULT <span class="hljs-title function_">f_mkdir</span><span class="hljs-params">(<span class="hljs-type">const</span> TCHAR* path)</span><br></code></pre></td></tr></table></figure><h1 id="6、注释详解"><a href="#6、注释详解" class="headerlink" title="6、注释详解"></a>6、注释详解</h1><p><em>注释1</em>：图片来源 <a href="http://elm-chan.org/fsw/ff/doc/appnote.html">FatFs Module Application Note (elm-chan.org)</a></p><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p><a href="https://www.epubit.com/bookDetails?id=UBc85046ed7208">STM32Cube高效开发教程（高级篇）</a></p><p><strong>更多内容请浏览</strong> <a href="https://blog.csdn.net/lc_guo/article/details/135349375?spm=1001.2014.3001.5502">STM32CubeMX+STM32F4系列教程文章汇总贴</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>STM32CubeMX</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>STM32CubeMX教程25 PWR 电源管理 - 睡眠、停止和待机模式</title>
    <link href="/2024/01/26/STM32CubeMX%E6%95%99%E7%A8%8B25-PWR-%E7%94%B5%E6%BA%90%E7%AE%A1%E7%90%86-%E7%9D%A1%E7%9C%A0%E3%80%81%E5%81%9C%E6%AD%A2%E5%92%8C%E5%BE%85%E6%9C%BA%E6%A8%A1%E5%BC%8F/"/>
    <url>/2024/01/26/STM32CubeMX%E6%95%99%E7%A8%8B25-PWR-%E7%94%B5%E6%BA%90%E7%AE%A1%E7%90%86-%E7%9D%A1%E7%9C%A0%E3%80%81%E5%81%9C%E6%AD%A2%E5%92%8C%E5%BE%85%E6%9C%BA%E6%A8%A1%E5%BC%8F/</url>
    
    <content type="html"><![CDATA[<h1 id="1、准备材料"><a href="#1、准备材料" class="headerlink" title="1、准备材料"></a>1、准备材料</h1><p>开发板（<a href="http://47.111.11.73/docs/boards/stm32/zdyz_stm32f407_explorerV3.html">正点原子stm32f407探索者开发板V2.4</a>）</p><p>STM32CubeMX软件（<a href="https://www.st.com/en/development-tools/stm32cubemx.html">Version 6.10.0</a>）</p><p><a href="https://doc.embedfire.com/stm32_products/must_read/zh/latest/doc/quickstart/DAP/DAP.html" title="野火DAP仿真器">野火DAP仿真器</a></p><p>keil µVision5 IDE（<a href="https://www.keil.com/download/product/">MDK-Arm</a>）</p><p><a href="https://www.st.com/zh/development-tools/stsw-link009.html">ST-LINK&#x2F;V2驱动</a></p><p><a href="http://www.openedv.com/docs/tool/ruanjian/ATK-XCOM.html" title="XCOM V2.6串口助手">XCOM V2.6串口助手</a></p><h1 id="2、实验目标"><a href="#2、实验目标" class="headerlink" title="2、实验目标"></a>2、实验目标</h1><p>使用STM32CubeMX软件配置STM32F407开发板的<font color="#fe2c24"><strong>PWR电源管理，并了解STM32的睡眠、停止和待机模式</strong></font></p><h1 id="3、实验流程"><a href="#3、实验流程" class="headerlink" title="3、实验流程"></a>3、实验流程</h1><h2 id="3-0、前提知识"><a href="#3-0、前提知识" class="headerlink" title="3.0、前提知识"></a>3.0、前提知识</h2><h3 id="3-0-1、睡眠模式"><a href="#3-0-1、睡眠模式" class="headerlink" title="3.0.1、睡眠模式"></a>3.0.1、睡眠模式</h3><p>睡眠模式可以立即进入，也可以在退出优先级最低的中断时再进入，在进入睡眠模式前可以通过HAL_PWR_EnableSleepOnExit() &#x2F; HAL_PWR_DisableSleepOnExit()设置</p><p>通过调用HAL库的HAL_PWR_EnterSLEEPMode()函数可以进入睡眠模式，以WFI进入的睡眠模式任何中断均可将MCU唤醒，以WFE进入的睡眠模式任何唤醒事件均可将MCU唤醒</p><p>如下图所示为立即和退出休眠两种情况的进入&#x2F;退出说明 <em>（注释1）</em></p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/25.1.png" width = "700"></div><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/25.2.png" width = "700"></div><p>睡眠模式下系统状态如下</p><ol><li>CPU时钟关闭，CPU停止运行，程序暂停</li><li>外设时钟正常，所有外设正常工作，I&#x2F;O引脚状态与进入睡眠模式时一致</li><li>调压器正常工作</li></ol><p><font color="#fe2c24"><strong>任何中断或唤醒事件导致退出睡眠模式时，CPU重新运行，程序从暂停处继续运行</strong></font></p><h3 id="3-0-2、停止模式"><a href="#3-0-2、停止模式" class="headerlink" title="3.0.2、停止模式"></a>3.0.2、停止模式</h3><p>HAL库中通过HAL_PWR_EnterSTOPMode()可以进入停止模式</p><p>由于进入停止模式所有外部中断线均需退出，可以使用EXTI-&gt;PR &#x3D; 0;强制复位所有外部中断线，以保证实验可以正常进入停止模式</p><p>如下图所示为停止模式的进入&#x2F;退出说明 <em>（注释1）</em></p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/25.3.png" width = "700"></div><p>停止模式下系统状态如下</p><ol><li>CPU时钟关闭，CPU停止运行，程序暂停</li><li>1.2V域外设时钟停止，外设停止工作</li><li>调压器开启&#x2F;处于低功耗模式，寄存器&#x2F;SRAM内容保留</li><li>FLASH处于正常&#x2F;掉电模式（通过HAL_PWREx_EnableFlashPowerDown()&#x2F;HAL_PWREx_DisableFlashPowerDown()函数设置）</li><li>HSI和HSE振荡器关闭</li></ol><p><font color="#fe2c24"><strong>所有配置为外部中断线EXTI上的中断&#x2F;事件触发都将导致退出停止模式，退出停止模式时，系统重新启动HSI时钟，然后CPU重新运行，程序从暂停处继续运行</strong></font></p><h3 id="3-0-3、待机模式"><a href="#3-0-3、待机模式" class="headerlink" title="3.0.3、待机模式"></a>3.0.3、待机模式</h3><p>HAL库中通过HAL_PWR_EnterSTANDBYMode()可以进入停止模式</p><p>通过HAL_PWR_EnableWakeUpPin()可以使能唤醒引脚PA0，当处于待机模式时，PA0引脚出现上升沿则从待机模式退出</p><p>如下图所示为待机模式的进入&#x2F;退出说明 <em>（注释1）</em></p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/25.4.png" width = "700"></div><p>待机模式下系统状态如下</p><ol><li>所有外设停止工作，除能退出待机模式的一些引脚，其他引脚均为高阻态</li><li>1.2V调压器关闭，寄存器&#x2F;SRAM内容全部丢失</li><li>PLL、HSI和HSE振荡器均关闭</li><li>VBAT供电的RTC寄存器，备份域SRAM内容保留，RTC正常工作</li></ol><p><font color="#fe2c24"><strong>WKUP引脚上升沿、RTC闹钟（闹钟A和闹钟B）、RTC唤醒事件、RTC入侵事件、RTC时间戳事件、NRST引脚外部复位和IWDG复位 其中任何一个事件发生时退出待机模式，CPU复位，程序从头开始运行（退出待机模式相当于复位）</strong></font></p><p>另外从待机模式中唤醒后需要注意以下两件事情</p><ol><li>当MCU从待机模式中唤醒后需要使用__HAL_PWR_CLEAR_FLAG(PWR_FLAG_WU)软件手动清除唤醒标志，否则下次再次进入待机模式将直接唤醒</li><li>另外可以顺便使用HAL_PWR_DisableWakeUpPin(PWR_WAKEUP_PIN1)将PA0上升沿唤醒关闭，只在即将进入待机模式前开启</li></ol><h2 id="3-1、CubeMX相关配置"><a href="#3-1、CubeMX相关配置" class="headerlink" title="3.1、CubeMX相关配置"></a>3.1、CubeMX相关配置</h2><h3 id="3-1-0、工程基本配置"><a href="#3-1-0、工程基本配置" class="headerlink" title="3.1.0、工程基本配置"></a>3.1.0、工程基本配置</h3><p>打开STM32CubeMX软件，单击ACCESS TO MCU SELECTOR选择开发板MCU（选择你使用开发板的主控MCU型号），选中MCU型号后单击页面右上角Start Project开始工程，具体如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/25.5.png" width = "700"></div><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/25.6.png" width = "700"></div><p>开始工程之后在配置主页面System Core&#x2F;RCC中配置HSE&#x2F;LSE晶振，在System Core&#x2F;SYS中配置Debug模式，具体如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/25.7.png" width = "700"></div><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/25.8.png" width = "700"></div><p>详细工程建立内容读者可以阅读“<a href="https://www.cnblogs.com/lc-guo/p/17937268">STM32CubeMX教程1 工程建立</a>”</p><h3 id="3-1-1、时钟树配置"><a href="#3-1-1、时钟树配置" class="headerlink" title="3.1.1、时钟树配置"></a>3.1.1、时钟树配置</h3><p>系统时钟使用8MHz外部高速时钟HSE，HCLK、PCLK1和PCLK2均设置为STM32F407能达到的最高时钟频率，具体如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/25.9.png" width = "700"></div><h3 id="3-1-2、外设参数配置"><a href="#3-1-2、外设参数配置" class="headerlink" title="3.1.2、外设参数配置"></a>3.1.2、外设参数配置</h3><p>本实验需要初始化开发板上KEY2、KEY1和KEY0用户按键做普通输入，具体配置步骤请阅读“<a href="https://www.cnblogs.com/lc-guo/p/17938621">STM32CubeMX教程3 GPIO输入 - 按键响应</a>”</p><p>本实验需要初始化开发板上WK_UP按键为外部中断，具体配置请阅读“<a href="https://www.cnblogs.com/lc-guo/p/17939750">STM32CubeMX教程4 EXTI 按键外部中断</a>”</p><p>本实验需要初始化TIM6外设实现500ms定时，具体配置步骤请阅读“<a href="https://www.cnblogs.com/lc-guo/p/17942465">STM32CubeMX教程5 TIM 定时器概述及基本定时器</a>”</p><p>本实验需要初始化USART1作为输出信息渠道，具体配置步骤请阅读“<a href="https://www.cnblogs.com/lc-guo/p/17950348">STM32CubeMX教程9 USART&#x2F;UART 异步通信</a>”</p><h3 id="3-1-3、外设中断配置"><a href="#3-1-3、外设中断配置" class="headerlink" title="3.1.3、外设中断配置"></a>3.1.3、外设中断配置</h3><p>本实验无需配置</p><h2 id="3-2、生成代码"><a href="#3-2、生成代码" class="headerlink" title="3.2、生成代码"></a>3.2、生成代码</h2><h3 id="3-2-0、配置Project-Manager页面"><a href="#3-2-0、配置Project-Manager页面" class="headerlink" title="3.2.0、配置Project Manager页面"></a>3.2.0、配置Project Manager页面</h3><p>单击进入Project Manager页面，在左边Project分栏中修改工程名称、工程目录和工具链，然后在Code Generator中勾选“Gnerate peripheral initialization as a pair of ‘c&#x2F;h’ files per peripheral”，最后单击页面右上角GENERATE CODE生成工程，具体如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/25.10.png" width = "700"></div><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/25.11.png" width = "700"></div><p>详细Project Manager配置内容读者可以阅读“<a href="https://www.cnblogs.com/lc-guo/p/17937268">STM32CubeMX教程1 工程建立</a>”实验3.4.3小节</p><h3 id="3-2-1、外设初始化调用流程"><a href="#3-2-1、外设初始化调用流程" class="headerlink" title="3.2.1、外设初始化调用流程"></a>3.2.1、外设初始化调用流程</h3><p>无</p><h3 id="3-2-2、外设中断调用流程"><a href="#3-2-2、外设中断调用流程" class="headerlink" title="3.2.2、外设中断调用流程"></a>3.2.2、外设中断调用流程</h3><p>本实验没有启动电源管理相关中断</p><h3 id="3-2-3、添加其他必要代码"><a href="#3-2-3、添加其他必要代码" class="headerlink" title="3.2.3、添加其他必要代码"></a>3.2.3、添加其他必要代码</h3><p>在主函数中添加按键控制逻辑，按下KEY2按键进入睡眠模式，按下KEY1按键进入停止模式，按下KEY0按键进入待机模式</p><p>源代码如下</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">/*main.c标志位定义*/</span><br><span class="hljs-type">uint8_t</span> mode_flag = <span class="hljs-number">0</span>;<br> <br><span class="hljs-comment">/*main.h标志位声明*/</span><br><span class="hljs-keyword">extern</span> <span class="hljs-type">uint8_t</span> mode_flag;<br><span class="hljs-keyword">extern</span> <span class="hljs-type">void</span> <span class="hljs-title function_">SystemClock_Config</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span>;<br> <br><span class="hljs-comment">/*main.c主函数内初始化程序*/</span><br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\r\nReset\r\n&quot;</span>);<br>HAL_TIM_Base_Start_IT(&amp;htim6);<br> <br><span class="hljs-comment">/*main.c主循环内控制程序*/</span><br><span class="hljs-keyword">while</span>(<span class="hljs-number">1</span>)<br>&#123;<br>    <span class="hljs-comment">/*从待机模式唤醒后手动清除唤醒标志，否则下次进入待机模式将直接唤醒*/</span><br>    <span class="hljs-keyword">if</span>(__HAL_PWR_GET_FLAG(PWR_FLAG_WU)==SET)<br>    &#123;<br>        __HAL_PWR_CLEAR_FLAG(PWR_FLAG_WU);<br>    &#125;<br>    <span class="hljs-comment">/*从待机模式唤醒后失能唤醒引脚*/</span><br>    <span class="hljs-keyword">if</span>(__HAL_PWR_GET_FLAG(PWR_FLAG_SB)==SET)<br>    &#123;<br>        HAL_PWR_DisableWakeUpPin(PWR_WAKEUP_PIN1);<br>        __HAL_PWR_CLEAR_FLAG(PWR_FLAG_SB);<br>    &#125;<br> <br>    <span class="hljs-comment">/*按键KEY2被按下*/</span><br>    <span class="hljs-keyword">if</span>(HAL_GPIO_ReadPin(KEY2_GPIO_Port,KEY2_Pin) == GPIO_PIN_RESET)<br>    &#123;<br>        HAL_Delay(<span class="hljs-number">50</span>);<br>        <span class="hljs-keyword">if</span>(HAL_GPIO_ReadPin(KEY2_GPIO_Port,KEY2_Pin) == GPIO_PIN_RESET)<br>        &#123;<br>            <span class="hljs-comment">/*进入睡眠模式*/</span><br>            mode_flag = <span class="hljs-number">3</span>;<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\r\nKEY2 Pressed，Into Sleep Mode\r\n&quot;</span>);<br>            HAL_SuspendTick();<br>            HAL_PWR_EnterSLEEPMode(PWR_LOWPOWERREGULATOR_ON,PWR_SLEEPENTRY_WFI);<br>            <span class="hljs-keyword">while</span>(!HAL_GPIO_ReadPin(KEY2_GPIO_Port,KEY2_Pin));<br>        &#125;<br>    &#125;<br>    <span class="hljs-comment">/*按键KEY1被按下*/</span><br>    <span class="hljs-keyword">if</span>(HAL_GPIO_ReadPin(KEY1_GPIO_Port,KEY1_Pin) == GPIO_PIN_RESET)<br>    &#123;<br>        HAL_Delay(<span class="hljs-number">50</span>);<br>        <span class="hljs-keyword">if</span>(HAL_GPIO_ReadPin(KEY1_GPIO_Port,KEY1_Pin) == GPIO_PIN_RESET)<br>        &#123;<br>            <span class="hljs-comment">/*进入停止模式*/</span><br>            mode_flag = <span class="hljs-number">2</span>;<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\r\nKEY1 Pressed，Into Stop Mode\r\n&quot;</span>);<br>            HAL_PWREx_EnableFlashPowerDown();<br>            EXTI-&gt;PR = <span class="hljs-number">0</span>;<br>            HAL_PWR_EnterSTOPMode(PWR_LOWPOWERREGULATOR_ON,PWR_SLEEPENTRY_WFI);<br>            <span class="hljs-keyword">while</span>(!HAL_GPIO_ReadPin(KEY1_GPIO_Port,KEY1_Pin));<br>        &#125;<br>    &#125;<br>    <span class="hljs-comment">/*按键KEY0被按下*/</span><br>    <span class="hljs-keyword">if</span>(HAL_GPIO_ReadPin(KEY0_GPIO_Port,KEY0_Pin) == GPIO_PIN_RESET)<br>    &#123;<br>        HAL_Delay(<span class="hljs-number">50</span>);<br>        <span class="hljs-keyword">if</span>(HAL_GPIO_ReadPin(KEY0_GPIO_Port,KEY0_Pin) == GPIO_PIN_RESET)<br>        &#123;<br>            <span class="hljs-comment">/*进入待机模式*/</span><br>            mode_flag = <span class="hljs-number">1</span>;<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\r\nKEY0 Pressed，Into StandBy Mode\r\n&quot;</span>);<br>            HAL_PWR_EnableWakeUpPin(PWR_WAKEUP_PIN1);<br>            HAL_PWR_EnterSTANDBYMode();<br>            <span class="hljs-keyword">while</span>(!HAL_GPIO_ReadPin(KEY0_GPIO_Port,KEY0_Pin));<br>        &#125;<br>    &#125;<br>    HAL_Delay(<span class="hljs-number">100</span>);<br>    HAL_GPIO_TogglePin(GREEN_LED_GPIO_Port,GREEN_LED_Pin);<br>&#125;<br></code></pre></td></tr></table></figure><p>在gpio.c中重新实现WK_UP按键外部中断回调函数HAL_GPIO_EXTI_Callback()</p><p>源代码如下</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-type">void</span> <span class="hljs-title function_">HAL_GPIO_EXTI_Callback</span><span class="hljs-params">(<span class="hljs-type">uint16_t</span> GPIO_Pin)</span><br>&#123;<br>    <span class="hljs-keyword">if</span>(GPIO_Pin == WK_UP_Pin)<br>    &#123;<br>        <span class="hljs-comment">/*睡眠模式唤醒*/</span><br>        <span class="hljs-keyword">if</span>(mode_flag == <span class="hljs-number">3</span>)<br>        &#123;<br>            HAL_ResumeTick();<br>        &#125;<br>        <span class="hljs-comment">/*停止模式唤醒*/</span><br>        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(mode_flag == <span class="hljs-number">2</span>)<br>        &#123;<br>            HAL_Init();<br>            SystemClock_Config();<br>        &#125;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\r\nWK_UP Pressed\r\n&quot;</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="4、常用函数"><a href="#4、常用函数" class="headerlink" title="4、常用函数"></a>4、常用函数</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">/*进入睡眠模式*/</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">HAL_PWR_EnterSLEEPMode</span><span class="hljs-params">(<span class="hljs-type">uint32_t</span> Regulator, <span class="hljs-type">uint8_t</span> SLEEPEntry)</span><br> <br><span class="hljs-comment">/*进入停止模式*/</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">HAL_PWR_EnterSTOPMode</span><span class="hljs-params">(<span class="hljs-type">uint32_t</span> Regulator, <span class="hljs-type">uint8_t</span> STOPEntry)</span><br> <br><span class="hljs-comment">/*进入待机模式*/</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">HAL_PWR_EnterSTANDBYMode</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span><br> <br><span class="hljs-comment">/*挂起滴答定时器*/</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">HAL_SuspendTick</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span><br> <br><span class="hljs-comment">/*恢复滴答定时器*/</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">HAL_ResumeTick</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span><br> <br><span class="hljs-comment">/*使能停止模式时的FLASH掉电模式*/</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">HAL_PWREx_EnableFlashPowerDown</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span><br> <br><span class="hljs-comment">/*停止模式时的FLASH处于正常模式*/</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">HAL_PWREx_DisableFlashPowerDown</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span><br> <br><span class="hljs-comment">/*使能待机唤醒引脚*/</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">HAL_PWR_EnableWakeUpPin</span><span class="hljs-params">(<span class="hljs-type">uint32_t</span> WakeUpPinx)</span><br> <br><span class="hljs-comment">/*立即进入睡眠模式*/</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">HAL_PWR_EnableSleepOnExit</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span><br> <br><span class="hljs-comment">/*退出后进入睡眠模式*/</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">HAL_PWR_DisableSleepOnExit</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span><br></code></pre></td></tr></table></figure><h1 id="5、烧录验证"><a href="#5、烧录验证" class="headerlink" title="5、烧录验证"></a>5、烧录验证</h1><p>烧录程序，开发板上电后，由外设TIM控制的红色LED每隔500ms状态翻转一次，由程序控制的绿色LED大约每隔100ms状态翻转一次</p><p>当按下KEY2按键时单片机会进入睡眠模式，此时程序暂停运行，所有外设正常运行，因此绿色LED保持进入睡眠模式的状态不再改变，但是红色LED仍然正常每隔500ms状态翻转一次，在睡眠模式时如果按下WK_UP按键，单片机会被唤醒，程序从停止处正常运行</p><p>当按下KEY1按键时单片机会进入停止模式，此时程序暂停运行，所有外设也停止工作，调压器处于开启&#x2F;低功耗状态，因此绿色LED和红色LED的状态均保持进入停止模式时的状态不再改变，在停止模式时如果按下WK_UP按键，单片机会被唤醒，程序从停止处正常运行 <em>（注释2）</em></p><p>当按下KEY0按键时单片机会进入待机模式，此时程序暂停运行，所有外设也停止工作，调压器也关闭，因此绿色LED和红色LED均会熄灭，在待机模式下如果按下WK_UP按键，单片机会退出待机模式，但单片机会复位，程序会重新开始运行</p><p>如下图所示为上述整个过程串口输出的信息和开发板绿色&#x2F;红色LED状态</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/25.12.gif" width = "700"></div><h1 id="6、注释详解"><a href="#6、注释详解" class="headerlink" title="6、注释详解"></a>6、注释详解</h1><p><em>注释1</em>：图片来源于STM32F4xx 中文参考手册 RM009</p><p><em>注释2</em>：根据手册我们知道进入停止模式时内核暂停，程序此时不应该继续执行，外设也都停止，正常情况下我们设置的红色LED和绿色LED灯都将保持进入停止模式时的状态不改变；但是笔者遇到一个奇怪的现象，不知道是个例还是程序存在BUG（大概率程序BUG），当使用DAP&#x2F;STLINK烧录到开发板程序后，按下KEY1按键进入停止模式后会被自动唤醒一次，本应该不闪烁的LED灯，则因为意外唤醒而再次闪烁，只不过由于从停止模式唤醒后使用的是内部高速时钟HSI，因此闪烁会较慢，而当烧录到开发板程序后将开发板断电一次，上电后重新按下KEY1按键进入停止模式则一切正常</p><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p><a href="https://www.epubit.com/bookDetails?id=UB77e58e05a5ea9">STM32Cube高效开发教程（基础篇）</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>STM32CubeMX</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>STM32CubeMX教程24 WDG - 独立窗口看门狗</title>
    <link href="/2024/01/26/STM32CubeMX%E6%95%99%E7%A8%8B24-WDG-%E7%8B%AC%E7%AB%8B%E7%AA%97%E5%8F%A3%E7%9C%8B%E9%97%A8%E7%8B%97/"/>
    <url>/2024/01/26/STM32CubeMX%E6%95%99%E7%A8%8B24-WDG-%E7%8B%AC%E7%AB%8B%E7%AA%97%E5%8F%A3%E7%9C%8B%E9%97%A8%E7%8B%97/</url>
    
    <content type="html"><![CDATA[<h1 id="1、准备材料"><a href="#1、准备材料" class="headerlink" title="1、准备材料"></a>1、准备材料</h1><p>开发板（<a href="http://47.111.11.73/docs/boards/stm32/zdyz_stm32f407_explorerV3.html">正点原子stm32f407探索者开发板V2.4</a>）</p><p>STM32CubeMX软件（<a href="https://www.st.com/en/development-tools/stm32cubemx.html">Version 6.10.0</a>）</p><p><a href="https://doc.embedfire.com/stm32_products/must_read/zh/latest/doc/quickstart/DAP/DAP.html" title="野火DAP仿真器">野火DAP仿真器</a></p><p>keil µVision5 IDE（<a href="https://www.keil.com/download/product/">MDK-Arm</a>）</p><p><a href="https://www.st.com/zh/development-tools/stsw-link009.html">ST-LINK&#x2F;V2驱动</a></p><p><a href="http://www.openedv.com/docs/tool/ruanjian/ATK-XCOM.html" title="XCOM V2.6串口助手">XCOM V2.6串口助手</a></p><p>逻辑分析仪<a href="https://github.com/wuxx/nanoDLA" title="nanoDLA">nanoDLA</a></p><h1 id="2、实验目标"><a href="#2、实验目标" class="headerlink" title="2、实验目标"></a>2、实验目标</h1><p>使用STM32CubeMX软件配置STM32F407开发板的<font color="#fe2c24"><strong>独立看门狗（IWDG）和窗口看门狗（WWDG）并了解其功能实现</strong></font></p><h1 id="3、WWDG实验流程"><a href="#3、WWDG实验流程" class="headerlink" title="3、WWDG实验流程"></a>3、WWDG实验流程</h1><h2 id="3-0、前提知识"><a href="#3-0、前提知识" class="headerlink" title="3.0、前提知识"></a>3.0、前提知识</h2><p>STM32F407拥有两个看门狗，分别为独立看门狗和窗口看门狗，这两个看门狗的作用都是监控程序运行，程序死机或跑飞就使系统复位，值得注意的是，一旦开启看门狗就无法停止，除非系统复位</p><p>窗口看门狗的结构不复杂，其结构框图上描述了有关窗口看门狗的所有内容，首先WDG的时钟来自于PCLK1（STM32F407最高42MHz）的4096次分频后再进行可选的1&#x2F;2&#x2F;4&#x2F;8分频，其内部有一个7位的递减计数器T[6:0]，还有一个WWDG_CFR配置寄存器，该寄存器位6：0包含了用于与递减计数器进行比较的窗口值W[6:0]</p><p><font color="#fe2c24"><strong>当出现以下两种情况时会产生窗口看门狗复位操作</strong></font></p><ol><li><p>当看门狗激活（WDGA&#x3D;1）且T6位由1变为0时（也即T[6:0]&lt;0X3F时）</p></li><li><p>当看门狗激活且T[6:0]&gt;W[6:0]时用户写WWDG_CR寄存器的值（也即刷新T[6:0]值）</p></li></ol><p>如下所示为窗口看门狗逻辑框图 <em>（注释1）</em></p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/24.1.png" width = "700"></div><p>通过上述的描述，<font color="#fe2c24"><strong>可知窗口看门狗要想不产生复位操作，必须将其计数器的计数值控制在W[6:0]和0x3F之间才能喂狗（刷新T[6:0]值）</strong></font>，当 “计数器的值小于0x3F” 或者 “当计数器的值T[6:0]&gt;W[6:0]时用户喂狗” 都会产生Reset操作，这也是为什么叫窗口看门狗的原因，如下图所示为窗口看门狗的工作时序图（注释1）</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/24.2.png" width = "700"></div><p>窗口看门狗可设置的参数只有三个</p><p><font color="#be191c" style="background: #fef2f0"> WWDG counter clockprescaler </font>（时钟分频）：可以设置为1&#x2F;2&#x2F;4&#x2F;8分频</p><p><font color="#be191c" style="background: #fef2f0"> WWDG window value </font>（窗口W[6:0]值）：可设置范围T[6:0]~127</p><p><font color="#be191c" style="background: #fef2f0"> WWDG down-counter reload value </font>（递减计数器重装值）：可设置范围63-127（7位最大值127且不能小于0x3F）</p><p>注意本实验由于独立看门狗较为简单，所以选择将独立&#x2F;窗口看门狗放在一篇文章里，但是读者复现实验的时候应该分开做，不要同时启用窗口看门狗和独立看门狗（不是不可以同时启用，而是对于本实验例子同时启用不方便理解）</p><p>另外需要提醒的是，<font color="#fe2c24"><strong>独立&#x2F;窗口看门狗只要被初始化就会自动启动，用户只需喂狗即可</strong></font></p><h2 id="3-1、CubeMX相关配置"><a href="#3-1、CubeMX相关配置" class="headerlink" title="3.1、CubeMX相关配置"></a>3.1、CubeMX相关配置</h2><h3 id="3-1-0、工程基本配置"><a href="#3-1-0、工程基本配置" class="headerlink" title="3.1.0、工程基本配置"></a>3.1.0、工程基本配置</h3><p>打开STM32CubeMX软件，单击ACCESS TO MCU SELECTOR选择开发板MCU（选择你使用开发板的主控MCU型号）选中MCU型号后单击页面右上角Start Project开始工程，具体如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/24.3.png" width = "700"></div><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/24.4.png" width = "700"></div><p>开始工程之后在配置主页面System Core&#x2F;RCC中配置HSE&#x2F;LSE晶振，在System Core&#x2F;SYS中配置Debug模式，具体如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/24.5.png" width = "700"></div><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/24.6.png" width = "700"></div><p>详细工程建立内容读者可以阅读“<a href="https://www.cnblogs.com/lc-guo/p/17937268">STM32CubeMX教程1 工程建立</a>”</p><h3 id="3-1-1、时钟树配置"><a href="#3-1-1、时钟树配置" class="headerlink" title="3.1.1、时钟树配置"></a>3.1.1、时钟树配置</h3><p>由于窗口看门狗递减定时器为7位且递减到0x3F就会产生复位，因此最大计数值也才127-63&#x3D;64，因此其时钟频率尽可能低一点，否则超时时间太短，实验现象不太好观察，这里将PCLK1设置为了21MHz，具体时钟配置如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/24.7.png" width = "700"></div><h3 id="3-1-2、外设参数配置"><a href="#3-1-2、外设参数配置" class="headerlink" title="3.1.2、外设参数配置"></a>3.1.2、外设参数配置</h3><p>本实验需要初始化开发板上GREEN_LED和RED_LED，具体配置步骤请阅读“<a href="https://www.cnblogs.com/lc-guo/p/17937704">STM32CubeMX教程2 GPIO输出 - 点亮LED灯</a>”</p><p>本实验需要初始化开发板上KEY2用户按键，具体配置步骤请阅读“<a href="https://www.cnblogs.com/lc-guo/p/17938621">STM32CubeMX教程3 GPIO输入 - 按键响应</a>”</p><p>本实验需要初始化USART1作为输出信息渠道，具体配置步骤请阅读“<a href="https://www.cnblogs.com/lc-guo/p/17950348">STM32CubeMX教程9 USART&#x2F;UART 异步通信</a>”</p><p>单击Pinout &amp; Configuration页面左边的System Core的WWDG进入窗口看门狗的设置，在Mode中勾选Activated，在下方配置其分频系数为8，窗口值为90，计数器重装值为最大值127，具体配置如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/24.8.png" width = "700"></div><p><font color="#fe2c24"><strong>现在我们来计算一下窗口看门狗的超时时间</strong></font></p><p>首先PCLK1设置为了21MHz，然后该时钟经过4096次分频，在经过设置的8分频得到的频率为640.869140625Hz</p><p>则其超时时间可以计算得到为（127-63）&#x2F;640.869140625≈0.09986s≈99.86ms</p><p>其不允许喂狗的时间可以计算得到为（127-90）&#x2F;640.869140625≈57.734ms</p><p><font color="#fe2c24"><strong>即当窗口定时器被初始化启动后，如果在57.734ms-100ms之间没有进行喂狗操作，那么窗口看门狗将超时导致程序复位</strong></font></p><h3 id="3-1-3、外设中断配置"><a href="#3-1-3、外设中断配置" class="headerlink" title="3.1.3、外设中断配置"></a>3.1.3、外设中断配置</h3><p>在Pinout &amp; Configuration页面左边System Core&#x2F;NVIC中勾选Window watchdog interrupt全局中断，然后选择合适的中断优先级即可</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/24.9.png" width = "700"></div><h2 id="3-2、生成代码"><a href="#3-2、生成代码" class="headerlink" title="3.2、生成代码"></a>3.2、生成代码</h2><h3 id="3-2-0、配置Project-Manager页面"><a href="#3-2-0、配置Project-Manager页面" class="headerlink" title="3.2.0、配置Project Manager页面"></a>3.2.0、配置Project Manager页面</h3><p>单击进入Project Manager页面，在左边Project分栏中修改工程名称、工程目录和工具链，然后在Code Generator中勾选“Gnerate peripheral initialization as a pair of ‘c&#x2F;h’ files per peripheral”，最后单击页面右上角GENERATE CODE生成工程，具体如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/24.10.png" width = "700"></div><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/24.11.png" width = "700"></div><p>详细Project Manager配置内容读者可以阅读“<a href="https://www.cnblogs.com/lc-guo/p/17937268">STM32CubeMX教程1 工程建立</a>”实验3.4.3小节</p><h3 id="3-2-1、外设初始化调用流程"><a href="#3-2-1、外设初始化调用流程" class="headerlink" title="3.2.1、外设初始化调用流程"></a>3.2.1、外设初始化调用流程</h3><p>在生成的工程主函数main()中调用MX_WWDG_Init()函数对WWDG参数配置，并调用了HAL_WWDG_Init()初始化函数</p><p>在HAL_WWDG_Init()函数中对WWDG做了初始化，并调用了HAL_WWDG_MspInit()函数对WWDG的时钟、中断优先级和中断使能做了配置</p><p>WWDG具体初始化调用流程如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/24.12.png" width = "700"></div><h3 id="3-2-2、外设中断调用流程"><a href="#3-2-2、外设中断调用流程" class="headerlink" title="3.2.2、外设中断调用流程"></a>3.2.2、外设中断调用流程</h3><p>在STM32CubeMX中勾选了WWDG的中断后，会在stm32f4xx_it.c文件中出现串口看门狗中断服务函数WWDG_IRQHandler()</p><p>该中断服务函数WWDG_IRQHandler()调用了HAL库WWDG中断统一管理函数HAL_WWDG_IRQHandler()</p><p><font color="#fe2c24"><strong>最终在HAL_WWDG_IRQHandler()函数中调用了早期唤醒回调函数HAL_WWDG_EarlyWakeupCallback()，该函数为虚函数，需要用户重新实现</strong></font></p><p>WWDG具体中断调用流程如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/24.13.png" width = "700"></div><h3 id="3-2-3、添加其他必要代码"><a href="#3-2-3、添加其他必要代码" class="headerlink" title="3.2.3、添加其他必要代码"></a>3.2.3、添加其他必要代码</h3><p>在wwdg.c中重新实现早唤醒回调函数HAL_WWDG_EarlyWakeupCallback()，当递减计数器递减到0x40，下次递减即将产生看门狗复位时，就会进入到该早唤醒回调函数中，但是该函数只能执行一个时钟节拍，然后系统就复位了，因此该函数内部执行不了复杂的程序，笔者这里也只是输出了一个字符‘1’，源代码如下</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">/*早唤醒回调函数*/</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">HAL_WWDG_EarlyWakeupCallback</span><span class="hljs-params">(WWDG_HandleTypeDef *hwwdg)</span><br>&#123;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;1\r\n&quot;</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p>在主函数中初始化完毕拉低PF9引脚，主循环中延时喂狗，并闪烁GREEN_LED，当系统喂狗及时，用户就可以看到GREEN_LED闪烁，当喂狗不及时，系统反复复位，就看不到GREEN_LED闪烁</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/24.14.png"  ></div><p>源代码如下</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">/*主循环外代码*/</span><br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Reset\r\n&quot;</span>);<br>HAL_GPIO_WritePin(RED_LED_GPIO_Port,RED_LED_Pin,GPIO_PIN_RESET);<br> <br> <br><span class="hljs-comment">/*主循环内代码*/</span><br>HAL_Delay(<span class="hljs-number">70</span>);<br><span class="hljs-comment">//HAL_Delay(40);</span><br>HAL_WWDG_Refresh(&amp;hwwdg);<br>HAL_GPIO_TogglePin(GREEN_LED_GPIO_Port,GREEN_LED_Pin);<br></code></pre></td></tr></table></figure><h1 id="4、常用函数"><a href="#4、常用函数" class="headerlink" title="4、常用函数"></a>4、常用函数</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">/*独立看门狗喂狗函数*/</span><br>HAL_StatusTypeDef <span class="hljs-title function_">HAL_IWDG_Refresh</span><span class="hljs-params">(IWDG_HandleTypeDef *hiwdg)</span><br> <br><span class="hljs-comment">/*窗口看门狗喂狗函数*/</span><br>HAL_StatusTypeDef <span class="hljs-title function_">HAL_IWDG_Refresh</span><span class="hljs-params">(IWDG_HandleTypeDef *hiwdg)</span><br> <br><span class="hljs-comment">/*窗口看门狗早唤醒中断回调函数*/</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">HAL_WWDG_EarlyWakeupCallback</span><span class="hljs-params">(WWDG_HandleTypeDef *hwwdg)</span><br></code></pre></td></tr></table></figure><h1 id="5、烧录验证"><a href="#5、烧录验证" class="headerlink" title="5、烧录验证"></a>5、烧录验证</h1><p>将程序修改为延时110ms，烧录程序，单片机上电后通过串口可以发现每隔一段时间都会发生进入早唤醒中断和复位操作，此时开发板上只有RED_LED被点亮，GREEN_LED呈现熄灭状态，使用逻辑分析仪捕获PF9引脚的电平，可以发现复位间隔时间大概为99ms，与我们设置预期的99.864ms大致一致，如下图所示为串口输出数据和逻辑分析仪捕获PF9引脚电平图</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/24.15.gif"></div><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/24.16.png" width = "700"></div><p>使用PF9引脚的状态来判断复位时间间隔不太严谨，因此我们将WWDG的参数做修改二次测试，分频不变仍为8，窗口值修改为80，重装值修改为100，此时通过计算可知递减到63大约需要57.734ms，将程序修改为延时70ms，然后使用逻辑分析仪再次捕获PF9引脚的电平，可以发现复位间隔时间大概为57ms，经过这两次测试，可知虽然不严谨但可以验证，如下图所示为逻辑分析仪捕获的PF9引脚电平图</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/24.17.png" width = "700"></div><p>WWDG复原回原来参数，分频8，窗口值90，重装值127，将程序修改为延时70ms，然后烧录程序，单片机上电后通过串口可以发现不会频繁的输出复位信息，也不会进入早唤醒中断回调函数中，此时开发板上RED_LED被点亮，GREEN_LED呈现闪烁状态，证明喂狗比较及时，没有产生窗口看门狗复位</p><h1 id="6、IWDG实验流程简述"><a href="#6、IWDG实验流程简述" class="headerlink" title="6、IWDG实验流程简述"></a>6、IWDG实验流程简述</h1><h2 id="6-0、前提知识"><a href="#6-0、前提知识" class="headerlink" title="6.0、前提知识"></a>6.0、前提知识</h2><p><font color="#fe2c24"><strong>独立看门狗很简单，本质就是一个12位的递减计数器</strong></font>，当递减到0之后就产生看门狗复位操作，<font color="#fe2c24"><strong>其时钟来源于单片机内部的LSI RC（32KHz）且不可更换</strong></font>，该内部RC震荡产生的时钟信号频率误差较大，因此在设置看门狗复位时间时最好留有余量，如下图所示为其时钟来源</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/24.18.png" ></div><p>独立看门狗可设置的参数只有两个</p><p><font color="#be191c" style="background: #fef2f0"> IWDG counter clockprescaler </font>（时钟分频）：可以设置为4&#x2F;8&#x2F;16&#x2F;…&#x2F;256分频</p><p><font color="#be191c" style="background: #fef2f0"> IWDG down-counter reload value </font>（递减计数器重装值）：可设置范围0-4095（12位）</p><p>当其重装值设置为最大值4095，根据时钟分频的不同，看门狗的超时时间也不同，最长可达32.768s，最短只有0.512s，具体超时时间如下表所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/24.19.png" width = "700"></div><h2 id="6-1、CubeMX相关配置"><a href="#6-1、CubeMX相关配置" class="headerlink" title="6.1、CubeMX相关配置"></a>6.1、CubeMX相关配置</h2><p>只需在Pinout ＆ Configuration页面左边功能分类栏目System Core中单击其中IWDG，在Mode中勾选Activated，最后在下方配置两个参数即可，时钟使用LSI配置不可调，IWDG无中断，具体步骤如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/24.20.png" width = "700"></div><h2 id="6-2、添加其他必要代码"><a href="#6-2、添加其他必要代码" class="headerlink" title="6.2、添加其他必要代码"></a>6.2、添加其他必要代码</h2><p>程序初始化完毕后拉低PF9引脚，在主循环中实现按键响应，按下KEY2按键执行喂狗操作</p><p>源代码如下</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">/*主函数初始化完后将PF9引脚拉低*/</span><br>HAL_GPIO_WritePin(RED_LED_GPIO_Port,RED_LED_Pin,GPIO_PIN_RESET);<br> <br><span class="hljs-comment">/*主循环中程序/</span><br><span class="hljs-comment">/*按键KEY2被按下*/</span><br><span class="hljs-keyword">if</span>(HAL_GPIO_ReadPin(KEY2_GPIO_Port,KEY2_Pin) == GPIO_PIN_RESET)<br>&#123;<br>    HAL_Delay(<span class="hljs-number">50</span>);<br>    <span class="hljs-keyword">if</span>(HAL_GPIO_ReadPin(KEY2_GPIO_Port,KEY2_Pin) == GPIO_PIN_RESET)<br>    &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Now feed the dog\r\n&quot;</span>);<br>        HAL_IWDG_Refresh(&amp;hiwdg);<br>        <span class="hljs-keyword">while</span>(!HAL_GPIO_ReadPin(KEY2_GPIO_Port,KEY2_Pin));<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="6-3、实验现象"><a href="#6-3、实验现象" class="headerlink" title="6.3、实验现象"></a>6.3、实验现象</h2><p>烧录程序，单片机上电后通过串口可以发现每隔一段时间都会发生复位操作，当按下KEY2按键在该间隔时间内喂狗，就不会产生复位操作，而一旦停止喂狗，超时后又会产生复位操作，具体如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/24.21.gif" ></div><p>当单片机复位后会首先执行一系列初始化操作，然后手动将PF9引脚设置为低电平（该引脚默认为高），直到由于没有喂狗产生看门狗复位为止，通过逻辑分析仪捕获PF9引脚的电平，可以发现其两次复位间隔时间与我们所设置预期的看门狗超时时间大致一致，具体如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/24.22.png" width = "700"></div><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/24.23.png" width = "700"></div><h1 id="7、注释详解"><a href="#7、注释详解" class="headerlink" title="7、注释详解"></a>7、注释详解</h1><p><em>注释1</em>：图片来源于 STM32F4xx 参考手册 RM0090</p>]]></content>
    
    
    
    <tags>
      
      <tag>STM32CubeMX</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>STM32CubeMX教程23 FSMC - IS62WV51216(SRAM)驱动</title>
    <link href="/2024/01/26/STM32CubeMX%E6%95%99%E7%A8%8B23-FSMC-IS62WV51216-SRAM-%E9%A9%B1%E5%8A%A8/"/>
    <url>/2024/01/26/STM32CubeMX%E6%95%99%E7%A8%8B23-FSMC-IS62WV51216-SRAM-%E9%A9%B1%E5%8A%A8/</url>
    
    <content type="html"><![CDATA[<h1 id="1、准备材料"><a href="#1、准备材料" class="headerlink" title="1、准备材料"></a>1、准备材料</h1><p>开发板（<a href="http://47.111.11.73/docs/boards/stm32/zdyz_stm32f407_explorerV3.html">正点原子stm32f407探索者开发板V2.4</a>）</p><p>STM32CubeMX软件（<a href="https://www.st.com/en/development-tools/stm32cubemx.html">Version 6.10.0</a>）</p><p><a href="https://doc.embedfire.com/stm32_products/must_read/zh/latest/doc/quickstart/DAP/DAP.html" title="野火DAP仿真器">野火DAP仿真器</a></p><p>keil µVision5 IDE（<a href="https://www.keil.com/download/product/">MDK-Arm</a>）</p><p><a href="https://www.st.com/zh/development-tools/stsw-link009.html">ST-LINK&#x2F;V2驱动</a></p><p><a href="http://www.openedv.com/docs/tool/ruanjian/ATK-XCOM.html" title="XCOM V2.6串口助手">XCOM V2.6串口助手</a></p><h1 id="2、实验目标"><a href="#2、实验目标" class="headerlink" title="2、实验目标"></a>2、实验目标</h1><p>使用STM32CubeMX软件配置STM32F407开发板的<font color="#fe2c24"><strong>FSMC实现以轮询或DMA的方式读写IS62WV51216（SRAM）芯片</strong></font></p><h1 id="3、轮询方式读写SRAM"><a href="#3、轮询方式读写SRAM" class="headerlink" title="3、轮询方式读写SRAM"></a>3、轮询方式读写SRAM</h1><h2 id="3-0、前提知识"><a href="#3-0、前提知识" class="headerlink" title="3.0、前提知识"></a>3.0、前提知识</h2><p>关于FSMC的内容读者可阅读“<a href="">STM32CubeMX教程22 FSMC - 8080并行接口TFT-LCD驱动</a>”实验“3.0、前提知识”小节</p><p>本实验使用的SRAM芯片为IS62WV51216，其为16位宽512K容量的静态随机存取存储器，开发板使用FSMC Bank 1-NOR&#x2F;PSRAM3，片选信号为NE3（PG10），地址线A[0:18]，数据线D[0:15]来控制该存储芯片，如下图所示为该存储芯片的硬件原理图</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/23.1.png" width = "700"></div><p>FSMC的地址线是按照字节寻址的，<font color="#fe2c24"><strong>因此19根地址线的寻址范围应该为0x0 0000~0x7 FFFF</strong></font>（2^19&#x3D;524288&#x3D;0x8 0000）</p><p>但是由于该存储器为16位（2个字节），因此<font color="#fe2c24"><strong>其实际容量应该为2*512KB&#x3D;1024KB，其需要的寻址范围为0x0 0000~0xF FFFF</strong></font></p><p>再考虑到FSMC Bank 1-NOR&#x2F;PSRAM3起始地址为0x6800 0000，因此如果要访问IS62WV51216芯片全部的1024KB数据的地址范围应该为0x6800 0000~0x680F FFFF</p><p><font color="#fe2c24"><strong>19根地址线做不到，那怎么办？</strong></font></p><p>解决方法就是将16位宽分为高字节和低字节，通过FSMC的字节控制引脚FSMC_NBL0&#x2F;1实现全部1024KB存储空间的访问</p><h2 id="3-1、CubeMX相关配置"><a href="#3-1、CubeMX相关配置" class="headerlink" title="3.1、CubeMX相关配置"></a>3.1、CubeMX相关配置</h2><h3 id="3-1-0、工程基本配置"><a href="#3-1-0、工程基本配置" class="headerlink" title="3.1.0、工程基本配置"></a>3.1.0、工程基本配置</h3><p>打开STM32CubeMX软件，单击ACCESS TO MCU SELECTOR选择开发板MCU（选择你使用开发板的主控MCU型号），选中MCU型号后单击页面右上角Start Project开始工程，具体如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/23.2.png" width = "700"></div><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/23.3.png" width = "700"></div><p>开始工程之后在配置主页面System Core&#x2F;RCC中配置HSE&#x2F;LSE晶振，在System Core&#x2F;SYS中配置Debug模式，具体如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/23.4.png" width = "700"></div><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/23.5.png" width = "700"></div><p>详细工程建立内容读者可以阅读“<a href="https://www.cnblogs.com/lc-guo/p/17937268">STM32CubeMX教程1 工程建立</a>”</p><h3 id="3-1-1、时钟树配置"><a href="#3-1-1、时钟树配置" class="headerlink" title="3.1.1、时钟树配置"></a>3.1.1、时钟树配置</h3><p>系统时钟使用8MHz外部高速时钟HSE，HCLK、PCLK1和PCLK2均设置为STM32F407能达到的最高时钟频率，具体如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/23.6.png" width = "700"></div><h3 id="3-1-2、外设参数配置"><a href="#3-1-2、外设参数配置" class="headerlink" title="3.1.2、外设参数配置"></a>3.1.2、外设参数配置</h3><p>本实验需要需要初始化开发板上KEY1和KEY0两个用户按键，具体配置步骤请阅读“<a href="https://www.cnblogs.com/lc-guo/p/17938621">STM32CubeMX教程3 GPIO输入 - 按键响应</a>”</p><p>本实验需要需要初始化USART1作为输出信息渠道，具体配置步骤请阅读“<a href="https://www.cnblogs.com/lc-guo/p/17950348">STM32CubeMX教程9 USART&#x2F;UART 异步通信</a>”</p><p> <font color="#fe2c24"><strong>本实验写入SRAM数据时使用到了STM32的随机数RNG功能，读者直接在Security&#x2F;RNG中将其激活即可</strong></font></p><p>单击Pinout &amp; Configuration页面左边Connectivity&#x2F;FSMC选项，在右边的Mode下点开NORFIash&#x2F;PSRAM&#x2F;SRAM&#x2F;ROM&#x2F;LCD3选项卡（因为SRAM使用的是使用FSMC Bank 1-NOR&#x2F;PSRAM3），然后按照下面顺序配置</p><ol><li>选择片选信号NE3</li><li>内存类型为SRAM</li><li>FSMC地址线19位</li><li>数据Data为16位宽度（D0-D15）</li><li>使能字节控制Byte enable</li></ol><p>下方的读写时序参数配置可阅读“<a href="">STM32CubeMX教程22 FSMC - 8080并行接口TFT-LCD驱动</a>”实验“3.0、前提知识”小节，具体配置如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/23.7.png" width = "700"></div><p>配置完成之后<font color="#fe2c24"><strong>请读者对照STM32CubeMX中配置的默认功能引脚是否和开发板硬件原理图每个引脚对应，防止出现默认功能引脚与开发板设计的引脚不一致的现象</strong></font></p><h3 id="3-1-3、外设中断配置"><a href="#3-1-3、外设中断配置" class="headerlink" title="3.1.3、外设中断配置"></a>3.1.3、外设中断配置</h3><p>轮询方式读写SRAM无需配置任何中断</p><h2 id="3-2、生成代码"><a href="#3-2、生成代码" class="headerlink" title="3.2、生成代码"></a>3.2、生成代码</h2><h3 id="3-2-0、配置Project-Manager页面"><a href="#3-2-0、配置Project-Manager页面" class="headerlink" title="3.2.0、配置Project Manager页面"></a>3.2.0、配置Project Manager页面</h3><p>单击进入Project Manager页面，在左边Project分栏中修改工程名称、工程目录和工具链，然后在Code Generator中勾选“Gnerate peripheral initialization as a pair of ‘c&#x2F;h’ files per peripheral”，最后单击页面右上角GENERATE CODE生成工程，具体如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/23.8.png" width = "700"></div><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/23.9.png" width = "700"></div><p>详细Project Manager配置内容读者可以阅读“<a href="https://www.cnblogs.com/lc-guo/p/17937268">STM32CubeMX教程1 工程建立</a>”实验3.4.3小节</p><h3 id="3-2-1、外设初始化调用流程"><a href="#3-2-1、外设初始化调用流程" class="headerlink" title="3.2.1、外设初始化调用流程"></a>3.2.1、外设初始化调用流程</h3><p>请阅读“<a href="">STM32CubeMX教程22 FSMC - 8080并行接口TFT-LCD驱动</a>”实验3.2.1小节</p><h3 id="3-2-2、外设中断调用流程"><a href="#3-2-2、外设中断调用流程" class="headerlink" title="3.2.2、外设中断调用流程"></a>3.2.2、外设中断调用流程</h3><p>轮询方式读写SRAM无需配置任何中断</p><h3 id="3-2-3、添加其他必要代码"><a href="#3-2-3、添加其他必要代码" class="headerlink" title="3.2.3、添加其他必要代码"></a>3.2.3、添加其他必要代码</h3><p>在main.c文件中添加SRAM读写测试函数，具体函数源代码如下所示</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">/*用HAL函数写入数据*/</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">SRAM_WriteByFunc</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span><br>&#123;<br>    <span class="hljs-comment">//1.写入字符串</span><br>    <span class="hljs-type">uint32_t</span> *pAddr = (<span class="hljs-type">uint32_t</span> *)(SRAM_ADDR_BEGIN);<span class="hljs-comment">//给指针赋值</span><br>    <span class="hljs-type">uint8_t</span> strIn[] = <span class="hljs-string">&quot;Moment in UPC&quot;</span>;<br>    <span class="hljs-type">uint16_t</span> dataLen = <span class="hljs-keyword">sizeof</span>(strIn); <span class="hljs-comment">//数据长度，字节数，包括最后的结束符&#x27;\0’</span><br>    <span class="hljs-keyword">if</span>(HAL_SRAM_Write_8b(&amp;hsram3, pAddr, strIn, dataLen) == HAL_OK)<br>    &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Write string at 0x6800 0000:&quot;</span>);<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%s\r\n&quot;</span>,strIn);<br>    &#125;<br> <br>    <span class="hljs-comment">//2.写入一个随机数</span><br>    <span class="hljs-type">uint32_t</span> num=<span class="hljs-number">0</span>;<br>    pAddr=(<span class="hljs-type">uint32_t</span> *)(SRAM_ADDR_BEGIN+<span class="hljs-number">256</span>);<span class="hljs-comment">//指针重新赋值</span><br>    HAL_RNG_GenerateRandomNumber(&amp;hrng, &amp;num);<span class="hljs-comment">//产生32位随机数</span><br>    <span class="hljs-keyword">if</span>(HAL_SRAM_Write_32b(&amp;hsram3, pAddr, &amp;num, <span class="hljs-number">1</span>) == HAL_OK)<br>    &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Write 32b number at 0x6800 0100&quot;</span>);<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;0x%x\r\n&quot;</span>, num);<br>    &#125;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;-----------------------------------------\r\n&quot;</span>);<br>&#125;<br> <br><span class="hljs-comment">/*用HAL函数读取数据*/</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">SRAM_ReadByFunc</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span><br>&#123;<br>    <span class="hljs-comment">//1.读取字符串</span><br>    <span class="hljs-type">uint32_t</span> *pAddr = (<span class="hljs-type">uint32_t</span> *)(SRAM_ADDR_BEGIN);<span class="hljs-comment">//给指针赋值</span><br>    <span class="hljs-type">uint8_t</span> strOut[<span class="hljs-number">30</span>];<br>    <span class="hljs-type">uint16_t</span> dataLen = <span class="hljs-number">30</span>;<br>    <span class="hljs-keyword">if</span>(HAL_SRAM_Read_8b(&amp;hsram3, pAddr, strOut, dataLen) == HAL_OK)<br>    &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Read string at 0x6800 0000:&quot;</span>);<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%s\r\n&quot;</span>, strOut); <br>    &#125;<br> <br>    <span class="hljs-comment">//2.读取一个uint32_t数</span><br>    <span class="hljs-type">uint32_t</span> num=<span class="hljs-number">0</span>;<br>    pAddr=(<span class="hljs-type">uint32_t</span> *)(SRAM_ADDR_BEGIN+<span class="hljs-number">256</span>);<span class="hljs-comment">//指针重新赋值,指向一个新的地址</span><br>    <span class="hljs-keyword">if</span>(HAL_SRAM_Read_32b(&amp;hsram3, pAddr, &amp;num, <span class="hljs-number">1</span>) == HAL_OK)<br>    &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Read 32b number at 0x6800 0100:&quot;</span>);<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;0x%x\r\n&quot;</span>, num);<br>    &#125;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;-----------------------------------------\r\n&quot;</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p>在main.c文件中添加使用到的SRAM起始&#x2F;中间&#x2F;结束地址，并对定义的函数声明，源代码如下所示</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">/*定义SRAM地址*/</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> SRAM_ADDR_BEGIN0x68000000UL <span class="hljs-comment">//Bank1 子区3的 SRAM起始地址</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> SRAM_ADDR_HALF0x68080000UL <span class="hljs-comment">//SRAM 中间地址 512K字节</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> SRAM_ADDR_END    0x680FFFFFUL <span class="hljs-comment">//SRAM 结束地址 1024K字节</span></span><br> <br><span class="hljs-comment">/*读写测试函数声明*/</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">SRAM_ReadByFunc</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span>;<br><span class="hljs-type">void</span> <span class="hljs-title function_">SRAM_WriteByFunc</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span>;<br></code></pre></td></tr></table></figure><p>最后在主函数主循环while(1)中使用用户按键调用SRAM读写测试函数即可，源代码如下所示 </p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">/*KEY1被按下*/</span><br><span class="hljs-keyword">if</span>(HAL_GPIO_ReadPin(KEY1_GPIO_Port,KEY1_Pin) == GPIO_PIN_RESET)<br>&#123;<br>    HAL_Delay(<span class="hljs-number">50</span>);<br>    <span class="hljs-keyword">if</span>(HAL_GPIO_ReadPin(KEY1_GPIO_Port,KEY1_Pin) == GPIO_PIN_RESET)<br>    &#123;<br>        <span class="hljs-comment">//SRAM写测试函数</span><br>        SRAM_WriteByFunc();<br>        <span class="hljs-keyword">while</span>(!HAL_GPIO_ReadPin(KEY1_GPIO_Port,KEY1_Pin));<br>    &#125;<br>&#125;<br> <br><span class="hljs-comment">/*KEY0被按下*/</span><br><span class="hljs-keyword">if</span>(HAL_GPIO_ReadPin(KEY0_GPIO_Port,KEY0_Pin) == GPIO_PIN_RESET)<br>&#123;<br>    HAL_Delay(<span class="hljs-number">50</span>);<br>    <span class="hljs-keyword">if</span>(HAL_GPIO_ReadPin(KEY0_GPIO_Port,KEY0_Pin) == GPIO_PIN_RESET)<br>    &#123;<br>        <span class="hljs-comment">//SRAM读测试函数</span><br>        SRAM_ReadByFunc();<br>        <span class="hljs-keyword">while</span>(!HAL_GPIO_ReadPin(KEY0_GPIO_Port,KEY0_Pin));<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="4、常用函数"><a href="#4、常用函数" class="headerlink" title="4、常用函数"></a>4、常用函数</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">/*向SRAM中写8位缓存数据*/</span><br>HAL_StatusTypeDef <span class="hljs-title function_">HAL_SRAM_Write_8b</span><span class="hljs-params">(SRAM_HandleTypeDef *hsram, <span class="hljs-type">uint32_t</span> *pAddress, <span class="hljs-type">uint8_t</span> *pSrcBuffer, <span class="hljs-type">uint32_t</span> BufferSize)</span><br> <br><span class="hljs-comment">/*从SRAM中读8位缓存数据*/</span><br>HAL_StatusTypeDef <span class="hljs-title function_">HAL_SRAM_Read_8b</span><span class="hljs-params">(SRAM_HandleTypeDef *hsram, <span class="hljs-type">uint32_t</span> *pAddress, <span class="hljs-type">uint8_t</span> *pDstBuffer, <span class="hljs-type">uint32_t</span> BufferSize)</span><br> <br><span class="hljs-comment">/*向SRAM中写16位缓存数据*/</span><br>HAL_StatusTypeDef <span class="hljs-title function_">HAL_SRAM_Write_16b</span><span class="hljs-params">(SRAM_HandleTypeDef *hsram, <span class="hljs-type">uint32_t</span> *pAddress, <span class="hljs-type">uint8_t</span> *pSrcBuffer, <span class="hljs-type">uint32_t</span> BufferSize)</span><br> <br><span class="hljs-comment">/*从SRAM中读16位缓存数据*/</span><br>HAL_StatusTypeDef <span class="hljs-title function_">HAL_SRAM_Read_16b</span><span class="hljs-params">(SRAM_HandleTypeDef *hsram, <span class="hljs-type">uint32_t</span> *pAddress, <span class="hljs-type">uint8_t</span> *pDstBuffer, <span class="hljs-type">uint32_t</span> BufferSize)</span><br> <br><span class="hljs-comment">/*向SRAM中写32位缓存数据*/</span><br>HAL_StatusTypeDef <span class="hljs-title function_">HAL_SRAM_Write_32b</span><span class="hljs-params">(SRAM_HandleTypeDef *hsram, <span class="hljs-type">uint32_t</span> *pAddress, <span class="hljs-type">uint8_t</span> *pSrcBuffer, <span class="hljs-type">uint32_t</span> BufferSize)</span><br> <br><span class="hljs-comment">/*从SRAM中读32位缓存数据*/</span><br>HAL_StatusTypeDef <span class="hljs-title function_">HAL_SRAM_Read_32b</span><span class="hljs-params">(SRAM_HandleTypeDef *hsram, <span class="hljs-type">uint32_t</span> *pAddress, <span class="hljs-type">uint8_t</span> *pDstBuffer, <span class="hljs-type">uint32_t</span> BufferSize)</span><br> <br><span class="hljs-comment">/*向SRAM中写32位缓存数据*/</span><br>HAL_StatusTypeDef <span class="hljs-title function_">HAL_SRAM_Write_DMA</span><span class="hljs-params">(SRAM_HandleTypeDef *hsram, <span class="hljs-type">uint32_t</span> *pAddress, <span class="hljs-type">uint8_t</span> *pSrcBuffer, <span class="hljs-type">uint32_t</span> BufferSize)</span><br> <br><span class="hljs-comment">/*从SRAM中读32位缓存数据*/</span><br>HAL_StatusTypeDef <span class="hljs-title function_">HAL_SRAM_Read_DMA</span><span class="hljs-params">(SRAM_HandleTypeDef *hsram, <span class="hljs-type">uint32_t</span> *pAddress, <span class="hljs-type">uint8_t</span> *pDstBuffer, <span class="hljs-type">uint32_t</span> BufferSize)</span><br></code></pre></td></tr></table></figure><h1 id="5、烧录验证"><a href="#5、烧录验证" class="headerlink" title="5、烧录验证"></a>5、烧录验证</h1><p>烧录程序，开发板上电后打开串口助手，按下KEY0按键从SRAM中指定位置读取数据，发现读取到错误乱码信息；按下KEY1按键将准备好的数据写入SRAM指定位置，再次按下KEY0按键从该指定位置读取数据，发现和我们写入的数据一致，可重复多次尝试，发现读取的信息均和写入信息一致，如下图所示为串口输出详细信息</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/23.10.gif"></div><h1 id="6、DMA方式读写SRAM"><a href="#6、DMA方式读写SRAM" class="headerlink" title="6、DMA方式读写SRAM"></a>6、DMA方式读写SRAM</h1><h2 id="6-1、前提知识"><a href="#6-1、前提知识" class="headerlink" title="6.1、前提知识"></a>6.1、前提知识</h2><p>读写SRAM还可以使用DMA的方式进行，但是由于SRAM属于存储设备，因此读写SRAM的DMA方向应该为内存到内存</p><p>在“<a href="https://www.cnblogs.com/lc-guo/p/17957875">STM32CubeMX教程12 DMA 直接内存读取</a>”我们提到只有DAM2的8个通道可以实现从存储器到存储器这种传输模式，由于该模式比较特殊，因此读者可以发现不同于其他外设DMA的配置，在FSMC选项卡我们配置SRAM的页面中根本没有DMA选项卡可以设置，<font color="#fe2c24"><strong>因此想要设置从存储器到存储器这种传输模式的DMA必须在System Core&#x2F;DMA选项卡中设置</strong></font></p><p>另外在其他外设设置DMA时，DMA流与外设关联的函数__HAL_LINKDMA()会被自动生成在HAL_xxx_MspInit()函数中</p><p>但是如果DMA为存储器到存储器这种传输模式，则生成的工程代码中不会自动关联DMA流与外设（他也不知道该如何关联），<font color="#fe2c24"><strong>因此在DMA及外设均初始化完毕之后，需要用户手动增加__HAL_LINKDMA()函数将外设与DMA流关联</strong></font></p><h2 id="6-2、CubeMX相关配置"><a href="#6-2、CubeMX相关配置" class="headerlink" title="6.2、CubeMX相关配置"></a>6.2、CubeMX相关配置</h2><p>请读者先按照本实验“3.1、CubeMX相关配置” 小节配置RCC、SYS、用户按键、串口USART1和FSMC模式和基本参数</p><p>如果读者对DMA参数不理解，请阅读“<a href="https://www.cnblogs.com/lc-guo/p/17957875">STM32CubeMX教程12 DMA 直接内存读取</a>”实验，<font color="#fe2c24"><strong>然后按下方顺序配置DMA参数</strong></font></p><ol><li>单击Pinout &amp; Configuration页面左边System Core&#x2F;DMA选项卡</li><li>在Configuration中选择MemToMem</li><li>单击下方的增加按钮选择增加DMA请求</li><li>单击增加的DMA请求</li><li>在下方对其参数进行配置，模式为Normal</li><li>源&#x2F;目标内存地址均递增</li><li>数据宽度选择word（因为HAL库提供的DMA写入SRAM函数数据为32位的）</li></ol><p>其他参数默认，具体配置参看下图</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/23.11.png" width = "700"></div><p>在Pinout &amp; Configuration页面左边System Core&#x2F;NVIC中勾选DMA2 Stream0 全局中断，然后选择合适的中断优先级即可</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/23.12.png" width = "700"></div><h2 id="6-3、DMA中断调用流程"><a href="#6-3、DMA中断调用流程" class="headerlink" title="6.3、DMA中断调用流程"></a>6.3、DMA中断调用流程</h2><p>DMA触发中断，其回调函数是一个函数指针的形式，在外设使用DMA启动传输的时候会将外设对应的中断回调函数赋值给DMA中断回调函数指针，具体请阅读“<a href="https://www.cnblogs.com/lc-guo/p/17957875">STM32CubeMX教程12 DMA 直接内存读取</a>”实验实验3.2.2小节，流程大致一致</p><p>这里读者只需知道，<font color="#fe2c24"><strong>在STM32CubeMX开启FSMC配置的SRAM DMA中断之后，在工程代码中使用HAL_SRAM_Read_DMA() &#x2F; HAL_SRAM_Write_DMA()函数传输完毕之后，都会调用HAL_SRAM_DMA_XferCpltCallback()虚函数，用户重新实现该虚函数即可</strong></font></p><p>由于以DMA方式读和写SRAM传输完成的回调函数为同一个，因此用户可以自己设定标志位，从而可以在中断回调函数中判断是读完成还是写完成</p><h2 id="6-4、添加其他必要代码"><a href="#6-4、添加其他必要代码" class="headerlink" title="6.4、添加其他必要代码"></a>6.4、添加其他必要代码</h2><p>配置工程并单击页面右上角GENERATE CODE生成工程</p><p>在main.c文件中FSMC初始化完毕之后添加DMA流与外设关联的函数</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">//将外设与DMA流关联</span><br>__HAL_LINKDMA(&amp;hsram3, hdma, hdma_memtomem_dma2_stream0);<br></code></pre></td></tr></table></figure><p>在main.c文件中增加以DMA方式读写SRAM的测试函数，源代码如下</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">/*以DMA方式写入数据*/</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">SRAM_WriteDMA</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span><br>&#123;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Write 32bit array by DMA:&quot;</span>);<br>    <span class="hljs-type">uint32_t</span> Value=<span class="hljs-number">3000</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">uint8_t</span> i=<span class="hljs-number">0</span>; i&lt;COUNT; i++)<br>    &#123;<br>        txBuffer[i] = Value;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d,&quot;</span>,Value);<br>        Value += <span class="hljs-number">6</span>;<br>    &#125;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\r\n&quot;</span>);<br>    <span class="hljs-comment">//DMA传输方向，1=write, 0=read</span><br>    DMA_Direction=<span class="hljs-number">1</span>;<br>    <span class="hljs-comment">//表示DMA正在传输，1=working, 0=idle</span><br>    DMA_Busy=<span class="hljs-number">1</span>;<br>    <span class="hljs-comment">//给指针赋值</span><br>    <span class="hljs-type">uint32_t</span> *pAddr_32b=(<span class="hljs-type">uint32_t</span> *)(SRAM_ADDR_BEGIN);<br>    <span class="hljs-comment">//DMA方式写入SRAM</span><br>    HAL_SRAM_Write_DMA(&amp;hsram3, pAddr_32b, txBuffer, COUNT);<br>&#125;<br> <br><span class="hljs-comment">/*以DMA方式读取数据*/</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">SRAM_ReadDMA</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span><br>&#123;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Read 32bit array by DMA\r\n&quot;</span>);<br>    DMA_Direction=<span class="hljs-number">0</span>;<br>    DMA_Busy=<span class="hljs-number">1</span>;<br>    <span class="hljs-type">uint32_t</span> *pAddr_32b=(<span class="hljs-type">uint32_t</span> *)(SRAM_ADDR_BEGIN);<br>    <span class="hljs-comment">//以DMA方式读取SRAM</span><br>    HAL_SRAM_Read_DMA(&amp;hsram3, pAddr_32b, rxBuffer, COUNT);<br>&#125;<br></code></pre></td></tr></table></figure><p>在main.c文件头部增加函数声明及使用到的一些变量定义，源代码如下</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">/*函数声明*/</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">SRAM_WriteDMA</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span>;<br><span class="hljs-type">void</span> <span class="hljs-title function_">SRAM_ReadDMA</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span>;<br> <br><span class="hljs-comment">/*变量定义*/</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> COUNT 5                      <span class="hljs-comment">//缓存区数据个数</span></span><br><span class="hljs-type">uint32_t</span> txBuffer[COUNT];            <span class="hljs-comment">//DMA发送缓存区</span><br><span class="hljs-type">uint32_t</span> rxBuffer[COUNT];            <span class="hljs-comment">//DMA接收缓存区</span><br><span class="hljs-type">uint8_t</span> DMA_Direction = <span class="hljs-number">1</span>;           <span class="hljs-comment">//DMA传输方向，1=write, 0=read</span><br><span class="hljs-type">uint8_t</span> DMA_Busy = <span class="hljs-number">0</span>;                <span class="hljs-comment">//DMA工作状态，1=busy, 0=idle</span><br></code></pre></td></tr></table></figure><p>最后在主循环中使用用户按键调用SRAM读写测试函数即可，源代码如下所示</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">/*KEY1被按下*/</span><br><span class="hljs-keyword">if</span>(HAL_GPIO_ReadPin(KEY1_GPIO_Port,KEY1_Pin) == GPIO_PIN_RESET)<br>&#123;<br>    HAL_Delay(<span class="hljs-number">50</span>);<br>    <span class="hljs-keyword">if</span>(HAL_GPIO_ReadPin(KEY1_GPIO_Port,KEY1_Pin) == GPIO_PIN_RESET)<br>    &#123;<br>        <span class="hljs-comment">//SRAM DMA写测试函数</span><br>        SRAM_WriteDMA();<br>        <span class="hljs-keyword">while</span>(!HAL_GPIO_ReadPin(KEY1_GPIO_Port,KEY1_Pin));<br>    &#125;<br>&#125;<br> <br><span class="hljs-comment">/*KEY0被按下*/</span><br><span class="hljs-keyword">if</span>(HAL_GPIO_ReadPin(KEY0_GPIO_Port,KEY0_Pin) == GPIO_PIN_RESET)<br>&#123;<br>    HAL_Delay(<span class="hljs-number">50</span>);<br>    <span class="hljs-keyword">if</span>(HAL_GPIO_ReadPin(KEY0_GPIO_Port,KEY0_Pin) == GPIO_PIN_RESET)<br>    &#123;<br>        <span class="hljs-comment">//SRAM DMA读测试函数</span><br>        SRAM_ReadDMA();<br>        <span class="hljs-keyword">while</span>(!HAL_GPIO_ReadPin(KEY0_GPIO_Port,KEY0_Pin));<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="6-5、实验现象"><a href="#6-5、实验现象" class="headerlink" title="6.5、实验现象"></a>6.5、实验现象</h2><p>烧录程序，开发板上电后打开串口助手，按下KEY0按键以DMA方式从SRAM中指定位置读取数据，发现读取到错误的5个数据；按下KEY1按键将3000,3006,3012,3018,3024五个数据以DMA方式写入SRAM指定位置，再次按下KEY0按键以DMA方式从SRAM中指定位置读取数据，发现和我们写入的数据一致，整个过程读者也可以发现每次以DMA方式写入&#x2F;读取SRAM完成之后都会进入DMA传输完成回调函数中，如下图所示为整个过程串口输出的详细信息</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/23.13.gif"></div><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p><a href="https://www.epubit.com/bookDetails?id=UB77e58e05a5ea9">STM32Cube高效开发教程（基础篇）</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>STM32CubeMX</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>STM32CubeMX教程22 FSMC - 8080并行接口TFT-LCD驱动</title>
    <link href="/2024/01/26/STM32CubeMX%E6%95%99%E7%A8%8B22-FSMC-8080%E5%B9%B6%E8%A1%8C%E6%8E%A5%E5%8F%A3TFT-LCD%E9%A9%B1%E5%8A%A8/"/>
    <url>/2024/01/26/STM32CubeMX%E6%95%99%E7%A8%8B22-FSMC-8080%E5%B9%B6%E8%A1%8C%E6%8E%A5%E5%8F%A3TFT-LCD%E9%A9%B1%E5%8A%A8/</url>
    
    <content type="html"><![CDATA[<h1 id="1、准备材料"><a href="#1、准备材料" class="headerlink" title="1、准备材料"></a>1、准备材料</h1><p>开发板（<a href="http://47.111.11.73/docs/boards/stm32/zdyz_stm32f407_explorerV3.html">正点原子stm32f407探索者开发板V2.4</a>）</p><p>STM32CubeMX软件（<a href="https://www.st.com/en/development-tools/stm32cubemx.html">Version 6.10.0</a>）</p><p><a href="https://doc.embedfire.com/stm32_products/must_read/zh/latest/doc/quickstart/DAP/DAP.html" title="野火DAP仿真器">野火DAP仿真器</a></p><p>keil µVision5 IDE（<a href="https://www.keil.com/download/product/">MDK-Arm</a>）</p><p><a href="https://www.st.com/zh/development-tools/stsw-link009.html">ST-LINK&#x2F;V2驱动</a></p><p><a href="http://www.openedv.com/docs/tool/ruanjian/ATK-XCOM.html" title="XCOM V2.6串口助手">XCOM V2.6串口助手</a></p><h1 id="2、实验目标"><a href="#2、实验目标" class="headerlink" title="2、实验目标"></a>2、实验目标</h1><p>使用STM32CubeMX软件配置STM32F407开发板<font color="#fe2c24"><strong>FSMC接口驱动8080并行接口TFT-LCD显示</strong></font>，具体为使用FSMC Bank 1-NOR&#x2F;PSRAM4，片选信号为NE4（PG12），TFT-LCD的RS引脚接FSMC地址线A6（PF12）来驱动TFT-LCD进行不同颜色刷屏显示</p><h1 id="3、实验流程"><a href="#3、实验流程" class="headerlink" title="3、实验流程"></a>3、实验流程</h1><h2 id="3-0、前提知识"><a href="#3-0、前提知识" class="headerlink" title="3.0、前提知识"></a>3.0、前提知识</h2><p><font color="#fe2c24"><strong>开发板使用TFT-LCD时最好使用外接电源给开发板供电，如果使用单USB供电可能会出现电流不足电压波动TFT-LCD初始化失败的现象</strong></font>，以下TFT-LCD全部简称为LCD</p><h3 id="3-0-0、FSMC概述"><a href="#3-0-0、FSMC概述" class="headerlink" title="3.0.0、FSMC概述"></a>3.0.0、FSMC概述</h3><p>FSMC全称为灵活的静态存储控制器，其时钟信号为HCLK，FSMC根据支持的存储器类型可以分为NOR&#x2F;PSRAM、NAND Flash和PC卡三种，本实验只涉及第一种NOR&#x2F;PSRAM，严格意义上讲也与NOR&#x2F;PSRAM无关，只是使用其中的LCD Interface类型的内存类型，下图中2号红框中标出了本此实验需要使用的FSMC的一些引脚，主要包括片选引脚、地址线、数据线、输出和写入等，如下图所示为FSMC的具体框图 <em>（注释1）</em></p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/22.1.png" width = "700"></div><p>从FSMC的角度，外部存储器被划分为4个固定大小的存储区域，每个存储区域的大小为256 MB，存储区域1可连接4个NOR Flash或PSRAM存储器器件，此存储区域被划分为4个NOR&#x2F;PSRAM区域，带4个专用片选信号NE1&#x2F;2&#x2F;3&#x2F;4，每个区域大小为64MB，FSMC的具体存储区域映射如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/22.2.png" width = "700"></div><p>通过FSMC写入外部存储设备需要知道写入的地址，该地址有HADDR所确定，HADDR是AHB内部地址线，但也会参与对外部存储器的寻址，<font color="#fe2c24"><strong>其HADDR[27:26]两个位用于选择从地址0X6000 0000到地址0x6FFF FFFF处分成4个部分的存储区域，HADDR[25:0]的26个位用于地址线，确定写入选中存储区域中的地址</strong></font>，如下图所示位HADDR的解释 <em>（注释2）</em></p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/22.3.png" width = "700"></div><p>由于 HADDR 为字节地址，而存储器按字寻址，据存储器数据宽度不同，实际向存储器发送的地址也将有所不同，<font color="#fe2c24"><strong>当存储器宽度为16位（16根数据线）时，向存储器发出的数据地址将自动向右偏移一位</strong></font>，具体如下表所</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/22.4.png" width = "700"></div><h3 id="3-0-1、为什么使用FSMC控制LCD"><a href="#3-0-1、为什么使用FSMC控制LCD" class="headerlink" title="3.0.1、为什么使用FSMC控制LCD?"></a>3.0.1、为什么使用FSMC控制LCD?</h3><p>FSMC一般是用来连接SRAM、PSRAM、ROM和NOR Flash等存储设备的，为什么要使用FSMC来控制8080并口的LCD呢？</p><p>先来看一看这些存储设备和8080并口LCD的引脚，SRAM的接口如下图所示 <em>（注释3）</em></p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/22.5.png" width = "700"></div><p>8080并口LCD的接口引脚如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/22.6.png" width = "700"></div><p>可以发现LCD的接口中除去RST和背光BLK引脚外，其他的引脚均可以由FSMC来提供，RS引脚可以选择FSMC的26位地址线中的一根控制，片选信号可以由FSMC的NEx引脚提供，RD由NOE提供，WR由NWE提供，D0-D15可以与FSMC的16跟数据线直接连接</p><p>所以在FSMC的NORFIash&#x2F;PSRAM&#x2F;SRAM&#x2F;ROM&#x2F;LCDx中也有一个专门的LCD Interface类型的内存类型，因此我们其实可以把8080并口的LCD当成一个存储设备通过FSMC来控制</p><h3 id="3-0-2、LCD接口硬件原理详解"><a href="#3-0-2、LCD接口硬件原理详解" class="headerlink" title="3.0.2、LCD接口硬件原理详解"></a>3.0.2、LCD接口硬件原理详解</h3><p>如下图所示为LCD接口硬件原理图</p><ol><li>8080并口LCD的片选信号CS可以直接使用FSMC的NEx引脚，这里使用FSMC Bank 1-NOR&#x2F;PSRAM4来控制LCD，因此CS接FSMC_NE4</li><li>LCD写入引脚WR接FSMC的写入使能引脚FSMC_NWE</li><li>LCD的读操作引脚接FSMC的输出使能引脚FSMC_NOE</li><li>LCD寄存器选择引脚RS接26位地址线上任何一根都可以，这里接入了A6</li><li>16位数据线直接对接</li><li>LCD的复位引脚与开发板复位引脚相连，使用开发板复位引脚可以同时复位MCU和LCD</li><li>LCD的背光引脚由PB15引脚控制，当高电平时背光被点亮</li></ol><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/22.7.png" width = "700"></div><h3 id="3-0-3、控制FSMC对LCD命令-数据写入（重点）"><a href="#3-0-3、控制FSMC对LCD命令-数据写入（重点）" class="headerlink" title="3.0.3、控制FSMC对LCD命令&#x2F;数据写入（重点）"></a>3.0.3、控制FSMC对LCD命令&#x2F;数据写入（重点）</h3><p><font color="#fe2c24"><strong>使用FSMC写LCD时一般分为写数据（选择数据寄存器）或者写命令（选择控制寄存器），而LCD的RS引脚负责决定选择数据还是控制寄存器，如果RS引脚是高电平1，则选择数据寄存器；如果RS引脚引脚为低电平0，则选择控制寄存器</strong></font></p><p>FSMC的地址线一共有26位（FSMC_A[25:0]），对于LCD来说，只需要任选其中一根地址线与RS引脚连接即可实现对LCD写数据&#x2F;命令的控制，但是选择不同地址线所对应的控制写命令&#x2F;数据的地址也不相同</p><p>以本实验为例，此时LCD使用FSMC Bank 1-NOR&#x2F;PSRAM4，其起始地址为0x6C00 0000，LCD的RS引脚接FSMC地址线A6（PF12），且此时LCD为16位宽度数据传输，FSMC会将写入的地址自动向右偏移一位，<font color="#fe2c24"><strong>因此LCD的RS引脚选择控制寄存器只需要在起始地址基础上满足A7位为0即可，比如可以是0x6C00 0000，也可以是0x6C00 0040等；LCD的RS引脚选择写数据寄存器只需要在起始地址基础上满足A7位为1即可，比如可以是0x6C00 0080，也可以是0x6C00 00C0等；</strong></font></p><p>因此我们可以直接定义FSMC写LCD命令&#x2F;数据的地址，第一种方法源代码如下所示</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">/*LCD写命令地址*/</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> LCD_REG (*((volatile unsigned short *) 0x6C000000))</span><br><span class="hljs-comment">/*LCD写数据地址*/</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> LCD_RAM (*((volatile unsigned short *) 0x6C000080))</span><br> <br><span class="hljs-comment">/*将数据data写入LCD数据寄存器*/</span><br>LCD_RAM = data;<br><span class="hljs-comment">/*将寄存器值regval写入LCD控制寄存器*/</span><br>LCD_REG = regval;<br></code></pre></td></tr></table></figure><p>除了上述的方法外，常见的还有一种定义LCD地址结构体的方法，其原理一致，但读者理解的时候可能不太容易理解，接下来由笔者仔细分析一下，第二种方法源代码如下所示</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">/*定义LCD地址结构体*/</span><br><span class="hljs-keyword">typedef</span> <span class="hljs-class"><span class="hljs-keyword">struct</span></span><br><span class="hljs-class">&#123;</span><br>    <span class="hljs-keyword">volatile</span> <span class="hljs-type">uint16_t</span> LCD_REG;<br>    <span class="hljs-keyword">volatile</span> <span class="hljs-type">uint16_t</span> LCD_RAM;<br>&#125;LCD_TypeDef;<br> <br><span class="hljs-comment">/*LCD控制/数据寄存器基址*/</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> LCD_BASE ((uint32_t)(0x6C000000 | 0x0000007E))</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> LCD ((LCD_TypeDef *) LCD_BASE)</span><br> <br> <br><span class="hljs-comment">/*将数据data写入LCD数据寄存器*/</span><br>LCD-&gt;LCD_RAM=data;<br><span class="hljs-comment">/*将寄存器值regval写入LCD控制寄存器*/</span><br>LCD-&gt;LCD_REG=regval;<br></code></pre></td></tr></table></figure><p>我们已经知道，当LCD的RS引脚接FSMC地址线A6，由于FSMC会将写入的地址自动向右偏移一位，因此写入数据（选择数据寄存器）时地址线A7应该为1，写入命令（选择控制寄存器）时地址线A7应该为0</p><p>而在结构体中先定义了uint16_t（2个字节）的LCD_REG变量，紧接着定义了uint16_t的LCD_RAM变量，<font color="#fe2c24"><strong>这两个变量在内存中的地址应该是连续的</strong></font></p><p>并且我们将LCD变量强制转化为了LCD_TypeDef*类型的变量，同时将LCD_BASE的地址赋值给LCD，<font color="#fe2c24"><strong>因此LCD的地址应该为(0x6C000000 | 0x0000007E))，LCD-&gt;LCD_REG的地址应该同样为(0x6C000000 | 0x0000007E))，而LCD-&gt;LCD_RAM的地址应该为(0x6C000000 | 0x0000007E+2))</strong></font></p><p>此时读者应该可以发现<font color="#fe2c24"><strong>通过结构体中顺序定义的变量在内存中地址连续这一特点，LCD-&gt;LCD_REG表示了地址线A7为0，LCD-&gt;LCD_RAM表示了地址线A7为1</strong></font>，也即通过LCD-&gt;LCD_REG可以写入LCD命令，通过LCD-&gt;LCD_RAM可以写入LCD数据</p><p><font color="#fe2c24"><strong>再举个例子，如果LCD的RS引脚接FSMC地址线的A12呢？</strong></font></p><p>此时写入数据（选择数据寄存器）时地址线A13应该为1，写入命令（选择控制寄存器）时地址线A13应该为0</p><p>则按照第一种方法，可定义为如下代码</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">/*LCD写命令地址*/</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> LCD_REG (*((volatile unsigned short *) 0x6C000000))</span><br> <br><span class="hljs-comment">/*LCD写数据地址*/</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> LCD_RAM (*((volatile unsigned short *) 0x60002000))</span><br></code></pre></td></tr></table></figure><p>按照第二种方法，可定义为如下代码</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">/*LCD控制/数据寄存器基址*/</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> LCD_BASE ((uint32_t)(0x6C000000 | 0x00001FFE))</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> LCD ((LCD_TypeDef *) LCD_BASE)</span><br></code></pre></td></tr></table></figure><p>一个小技巧，在使用第二种方法确定 LCD_BASE 地址时，假如RS接FSMC的地址线A6，则从右边往左数到A7位<font color="#fe2c24"><strong>（中间全是1，两边两个0）</strong></font>，0111 1110（0x7E）；假如RS接FSMC的地址线A12，同样从右边往左数到A13位，01 1111 1111 1110（0x1FFE）；</p><h3 id="3-0-4、FSMC时序参数设置"><a href="#3-0-4、FSMC时序参数设置" class="headerlink" title="3.0.4、FSMC时序参数设置"></a>3.0.4、FSMC时序参数设置</h3><p>查看LCD使用的控制芯片NT35510的芯片数据手册 <em>（注释4）</em></p><p>在361页的7.6.1并行接口特性（80 系列 MCU）小节中说明了使用8080并行接口控制的LCD所需要满足的时序和信号特征的最大最小值</p><p>如下图中表格所示，重点看表格中读写的地址建立时间和数据建立时间，其规定了最小需要的时间</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/22.8.png" width = "700"></div><p>在STM32CubeMX中可以设置读写时序的地址建立时间和数据建立时间，单位为一个HCLK时钟周期，当HCLK时钟频率为STM32F407最高频率168MHz时，一个周期大约为6us</p><p><font color="#fe2c24"><strong>这里按照手册理论上读地址建立时间&gt;10ns（2个HCLK时钟周期），写地址建立时间&gt;0us，数据建立&#x2F;保持时间&gt;15+10ns（5个HCLK时钟周期），读写地址保持时间&gt;2ns</strong></font>，但生成代码中读写地址保持时间默认15个HCLK时钟周期，在软件上不可调，另外<font color="#fe2c24"><strong>总线翻转时间设置为0，访问模式选择A即可</strong></font></p><p>因此综上所述，将参数从上到下设置为2、5、0、A、0、5、0和A（笔者在正点原子探索者开发板上使用4.3寸NT35510控制的LCD上验证可以使用），实际使用中如果出现问题可以增大参数值，具体配置如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/22.9.png" width = "700"></div><p><font color="#fe2c24"><strong>再举个例子，如果你的LCD使用的控制芯片为ILI9341</strong></font>，那么找到ILI9341芯片数据手册 <em>（注释5）</em></p><p>在手册238页18.3.1小节中找到8080并口控制时的时序参数要求，如下图所示，根据手册我们可以知道理论上读&#x2F;写地址建立时间&gt;0ns，数据建立&#x2F;保持时间&gt;10+10ns（4个HCLK时钟周期），读写地址保持时间&gt;0ns</p><p>因此在STM32CubeMX中参数从上到下设置为0、4、0、A、0、4、0和A即可（笔者在正点原子探索者开发板上使用野火3.2寸ILI9341控制的LCD上验证可以使用）</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/22.10.png" width = "700"></div><h2 id="3-1、CubeMX相关配置"><a href="#3-1、CubeMX相关配置" class="headerlink" title="3.1、CubeMX相关配置"></a>3.1、CubeMX相关配置</h2><h3 id="3-1-0、工程基本配置"><a href="#3-1-0、工程基本配置" class="headerlink" title="3.1.0、工程基本配置"></a>3.1.0、工程基本配置</h3><p>打开STM32CubeMX软件，单击ACCESS TO MCU SELECTOR选择开发板MCU（选择你使用开发板的主控MCU型号）选中MCU型号后单击页面右上角Start Project开始工程，具体如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/22.11.png" width = "700"></div><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/22.12.png" width = "700"></div><p>开始工程之后在配置主页面System Core&#x2F;RCC中配置HSE&#x2F;LSE晶振，在System Core&#x2F;SYS中配置Debug模式，具体如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/22.13.png" width = "700"></div><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/22.14.png" width = "700"></div><p>详细工程建立内容读者可以阅读“<a href="https://www.cnblogs.com/lc-guo/p/17937268">STM32CubeMX教程1 工程建立</a>”</p><h3 id="3-1-1、时钟树配置"><a href="#3-1-1、时钟树配置" class="headerlink" title="3.1.1、时钟树配置"></a>3.1.1、时钟树配置</h3><p>系统时钟使用8MHz外部高速时钟HSE，HCLK、PCLK1和PCLK2均设置为STM32F407能达到的最高时钟频率，具体如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/22.15.png" width = "700"></div><h3 id="3-1-2、外设参数配置"><a href="#3-1-2、外设参数配置" class="headerlink" title="3.1.2、外设参数配置"></a>3.1.2、外设参数配置</h3><p>单击Pinout &amp; Configuration页面左边Connectivity&#x2F;FSMC选项，<font color="#fe2c24"><strong>在右边的Mode下点开NORFIash&#x2F;PSRAM&#x2F;SRAM&#x2F;ROM&#x2F;LCD4选项卡（因为LCD使用的是使用FSMC Bank 1-NOR&#x2F;PSRAM4），选择片选信号NE4，内存类型为LCD Interface，LCD寄存器选择（RS引脚）选择FSMC地址线A6，数据Data为16位（D0-D15）</strong></font>，具体配置如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/22.16.png" width = "700"></div><p>然后在Configuration里面配置其读写时序，<font color="#fe2c24"><strong>为什么要这样配置？</strong></font>可以阅读本实验“3.0.4、时序参数设置”小节，具体配置如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/22.17.png" width = "700"></div><p>配置好之后可以与硬件原理图上的引脚对照以下，看看有没有漏掉哪些引脚或者那些引脚默认配置不正确，由于RESET引脚直接与MCU的NRST引脚连接，当按下开发板复位按键时，LCD也会被复位，<font color="#fe2c24"><strong>因此最后只需设置LCD的背光控制引脚即可</strong></font>，具体配置如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/22.18.png" width = "700"></div><h3 id="3-1-3、外设中断配置"><a href="#3-1-3、外设中断配置" class="headerlink" title="3.1.3、外设中断配置"></a>3.1.3、外设中断配置</h3><p>本实验无需配置任何中断</p><h2 id="3-2、生成代码"><a href="#3-2、生成代码" class="headerlink" title="3.2、生成代码"></a>3.2、生成代码</h2><h3 id="3-2-0、配置Project-Manager页面"><a href="#3-2-0、配置Project-Manager页面" class="headerlink" title="3.2.0、配置Project Manager页面"></a>3.2.0、配置Project Manager页面</h3><p>单击进入Project Manager页面，在左边Project分栏中修改工程名称、工程目录和工具链，然后在Code Generator中勾选“Gnerate peripheral initialization as a pair of ‘c&#x2F;h’ files per peripheral”，最后单击页面右上角GENERATE CODE生成工程，具体如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/22.19.png" width = "700"></div><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/22.20.png" width = "700"></div><p>详细Project Manager配置内容读者可以阅读“<a href="https://www.cnblogs.com/lc-guo/p/17937268">STM32CubeMX教程1 工程建立</a>”实验3.4.3小节</p><h3 id="3-2-1、外设初始化调用流程"><a href="#3-2-1、外设初始化调用流程" class="headerlink" title="3.2.1、外设初始化调用流程"></a>3.2.1、外设初始化调用流程</h3><p>在STM32CubeMX中配置了FSMC之后，会在生成的工程代码中新增MX_FSMC_Init()函数，在该函数中对FSMC的模式和对FSMC的读写时序参数进行了配置，然后调用了HAL_SRAM_Init()初始化函数</p><p>在HAL_SRAM_Init()初始化函数中调用了HAL_SRAM_MspInit()，然后在HAL_SRAM_MspInit()函数中最终调用了HAL_FSMC_MspInit()</p><p>在HAL_FSMC_MspInit()函数中完成了FSMC的数据线、地址线、读和写等引脚的复用操作，并且使能了相应的时钟</p><p>如下图所示为FSMC初始化具体调用流程</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/22.21.png" width = "700"></div><h3 id="3-2-2、外设中断调用流程"><a href="#3-2-2、外设中断调用流程" class="headerlink" title="3.2.2、外设中断调用流程"></a>3.2.2、外设中断调用流程</h3><p>本实验无需配置任何中断</p><h3 id="3-2-3、添加其他必要代码"><a href="#3-2-3、添加其他必要代码" class="headerlink" title="3.2.3、添加其他必要代码"></a>3.2.3、添加其他必要代码</h3><p>首先需要添加LCD的驱动文件，该驱动文件中应该对LCD进行正常初始化操作，另外应该包含一些LCD的画图函数，比如绘制圆形、直线和矩形等函数，一般是按照LCD驱动芯片的手册进行编程，但是为了避免重复造轮子，这里的驱动文件直接使用正点原子提供的 <em>（注释6）</em>，笔者对文件稍微整理了以下，具体源代码如下所示</p><p><strong>tftlcd.c文件</strong></p><details><summary>点击查看代码</summary><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br><span class="line">754</span><br><span class="line">755</span><br><span class="line">756</span><br><span class="line">757</span><br><span class="line">758</span><br><span class="line">759</span><br><span class="line">760</span><br><span class="line">761</span><br><span class="line">762</span><br><span class="line">763</span><br><span class="line">764</span><br><span class="line">765</span><br><span class="line">766</span><br><span class="line">767</span><br><span class="line">768</span><br><span class="line">769</span><br><span class="line">770</span><br><span class="line">771</span><br><span class="line">772</span><br><span class="line">773</span><br><span class="line">774</span><br><span class="line">775</span><br><span class="line">776</span><br><span class="line">777</span><br><span class="line">778</span><br><span class="line">779</span><br><span class="line">780</span><br><span class="line">781</span><br><span class="line">782</span><br><span class="line">783</span><br><span class="line">784</span><br><span class="line">785</span><br><span class="line">786</span><br><span class="line">787</span><br><span class="line">788</span><br><span class="line">789</span><br><span class="line">790</span><br><span class="line">791</span><br><span class="line">792</span><br><span class="line">793</span><br><span class="line">794</span><br><span class="line">795</span><br><span class="line">796</span><br><span class="line">797</span><br><span class="line">798</span><br><span class="line">799</span><br><span class="line">800</span><br><span class="line">801</span><br><span class="line">802</span><br><span class="line">803</span><br><span class="line">804</span><br><span class="line">805</span><br><span class="line">806</span><br><span class="line">807</span><br><span class="line">808</span><br><span class="line">809</span><br><span class="line">810</span><br><span class="line">811</span><br><span class="line">812</span><br><span class="line">813</span><br><span class="line">814</span><br><span class="line">815</span><br><span class="line">816</span><br><span class="line">817</span><br><span class="line">818</span><br><span class="line">819</span><br><span class="line">820</span><br><span class="line">821</span><br><span class="line">822</span><br><span class="line">823</span><br><span class="line">824</span><br><span class="line">825</span><br><span class="line">826</span><br><span class="line">827</span><br><span class="line">828</span><br><span class="line">829</span><br><span class="line">830</span><br><span class="line">831</span><br><span class="line">832</span><br><span class="line">833</span><br><span class="line">834</span><br><span class="line">835</span><br><span class="line">836</span><br><span class="line">837</span><br><span class="line">838</span><br><span class="line">839</span><br><span class="line">840</span><br><span class="line">841</span><br><span class="line">842</span><br><span class="line">843</span><br><span class="line">844</span><br><span class="line">845</span><br><span class="line">846</span><br><span class="line">847</span><br><span class="line">848</span><br><span class="line">849</span><br><span class="line">850</span><br><span class="line">851</span><br><span class="line">852</span><br><span class="line">853</span><br><span class="line">854</span><br><span class="line">855</span><br><span class="line">856</span><br><span class="line">857</span><br><span class="line">858</span><br><span class="line">859</span><br><span class="line">860</span><br><span class="line">861</span><br><span class="line">862</span><br><span class="line">863</span><br><span class="line">864</span><br><span class="line">865</span><br><span class="line">866</span><br><span class="line">867</span><br><span class="line">868</span><br><span class="line">869</span><br><span class="line">870</span><br><span class="line">871</span><br><span class="line">872</span><br><span class="line">873</span><br><span class="line">874</span><br><span class="line">875</span><br><span class="line">876</span><br><span class="line">877</span><br><span class="line">878</span><br><span class="line">879</span><br><span class="line">880</span><br><span class="line">881</span><br><span class="line">882</span><br><span class="line">883</span><br><span class="line">884</span><br><span class="line">885</span><br><span class="line">886</span><br><span class="line">887</span><br><span class="line">888</span><br><span class="line">889</span><br><span class="line">890</span><br><span class="line">891</span><br><span class="line">892</span><br><span class="line">893</span><br><span class="line">894</span><br><span class="line">895</span><br><span class="line">896</span><br><span class="line">897</span><br><span class="line">898</span><br><span class="line">899</span><br><span class="line">900</span><br><span class="line">901</span><br><span class="line">902</span><br><span class="line">903</span><br><span class="line">904</span><br><span class="line">905</span><br><span class="line">906</span><br><span class="line">907</span><br><span class="line">908</span><br><span class="line">909</span><br><span class="line">910</span><br><span class="line">911</span><br><span class="line">912</span><br><span class="line">913</span><br><span class="line">914</span><br><span class="line">915</span><br><span class="line">916</span><br><span class="line">917</span><br><span class="line">918</span><br><span class="line">919</span><br><span class="line">920</span><br><span class="line">921</span><br><span class="line">922</span><br><span class="line">923</span><br><span class="line">924</span><br><span class="line">925</span><br><span class="line">926</span><br><span class="line">927</span><br><span class="line">928</span><br><span class="line">929</span><br><span class="line">930</span><br><span class="line">931</span><br><span class="line">932</span><br><span class="line">933</span><br><span class="line">934</span><br><span class="line">935</span><br><span class="line">936</span><br><span class="line">937</span><br><span class="line">938</span><br><span class="line">939</span><br><span class="line">940</span><br><span class="line">941</span><br><span class="line">942</span><br><span class="line">943</span><br><span class="line">944</span><br><span class="line">945</span><br><span class="line">946</span><br><span class="line">947</span><br><span class="line">948</span><br><span class="line">949</span><br><span class="line">950</span><br><span class="line">951</span><br><span class="line">952</span><br><span class="line">953</span><br><span class="line">954</span><br><span class="line">955</span><br><span class="line">956</span><br><span class="line">957</span><br><span class="line">958</span><br><span class="line">959</span><br><span class="line">960</span><br><span class="line">961</span><br><span class="line">962</span><br><span class="line">963</span><br><span class="line">964</span><br><span class="line">965</span><br><span class="line">966</span><br><span class="line">967</span><br><span class="line">968</span><br><span class="line">969</span><br><span class="line">970</span><br><span class="line">971</span><br><span class="line">972</span><br><span class="line">973</span><br><span class="line">974</span><br><span class="line">975</span><br><span class="line">976</span><br><span class="line">977</span><br><span class="line">978</span><br><span class="line">979</span><br><span class="line">980</span><br><span class="line">981</span><br><span class="line">982</span><br><span class="line">983</span><br><span class="line">984</span><br><span class="line">985</span><br><span class="line">986</span><br><span class="line">987</span><br><span class="line">988</span><br><span class="line">989</span><br><span class="line">990</span><br><span class="line">991</span><br><span class="line">992</span><br><span class="line">993</span><br><span class="line">994</span><br><span class="line">995</span><br><span class="line">996</span><br><span class="line">997</span><br><span class="line">998</span><br><span class="line">999</span><br><span class="line">1000</span><br><span class="line">1001</span><br><span class="line">1002</span><br><span class="line">1003</span><br><span class="line">1004</span><br><span class="line">1005</span><br><span class="line">1006</span><br><span class="line">1007</span><br><span class="line">1008</span><br><span class="line">1009</span><br><span class="line">1010</span><br><span class="line">1011</span><br><span class="line">1012</span><br><span class="line">1013</span><br><span class="line">1014</span><br><span class="line">1015</span><br><span class="line">1016</span><br><span class="line">1017</span><br><span class="line">1018</span><br><span class="line">1019</span><br><span class="line">1020</span><br><span class="line">1021</span><br><span class="line">1022</span><br><span class="line">1023</span><br><span class="line">1024</span><br><span class="line">1025</span><br><span class="line">1026</span><br><span class="line">1027</span><br><span class="line">1028</span><br><span class="line">1029</span><br><span class="line">1030</span><br><span class="line">1031</span><br><span class="line">1032</span><br><span class="line">1033</span><br><span class="line">1034</span><br><span class="line">1035</span><br><span class="line">1036</span><br><span class="line">1037</span><br><span class="line">1038</span><br><span class="line">1039</span><br><span class="line">1040</span><br><span class="line">1041</span><br><span class="line">1042</span><br><span class="line">1043</span><br><span class="line">1044</span><br><span class="line">1045</span><br><span class="line">1046</span><br><span class="line">1047</span><br><span class="line">1048</span><br><span class="line">1049</span><br><span class="line">1050</span><br><span class="line">1051</span><br><span class="line">1052</span><br><span class="line">1053</span><br><span class="line">1054</span><br><span class="line">1055</span><br><span class="line">1056</span><br><span class="line">1057</span><br><span class="line">1058</span><br><span class="line">1059</span><br><span class="line">1060</span><br><span class="line">1061</span><br><span class="line">1062</span><br><span class="line">1063</span><br><span class="line">1064</span><br><span class="line">1065</span><br><span class="line">1066</span><br><span class="line">1067</span><br><span class="line">1068</span><br><span class="line">1069</span><br><span class="line">1070</span><br><span class="line">1071</span><br><span class="line">1072</span><br><span class="line">1073</span><br><span class="line">1074</span><br><span class="line">1075</span><br><span class="line">1076</span><br><span class="line">1077</span><br><span class="line">1078</span><br><span class="line">1079</span><br><span class="line">1080</span><br><span class="line">1081</span><br><span class="line">1082</span><br><span class="line">1083</span><br><span class="line">1084</span><br><span class="line">1085</span><br><span class="line">1086</span><br><span class="line">1087</span><br><span class="line">1088</span><br><span class="line">1089</span><br><span class="line">1090</span><br><span class="line">1091</span><br><span class="line">1092</span><br><span class="line">1093</span><br><span class="line">1094</span><br><span class="line">1095</span><br><span class="line">1096</span><br><span class="line">1097</span><br><span class="line">1098</span><br><span class="line">1099</span><br><span class="line">1100</span><br><span class="line">1101</span><br><span class="line">1102</span><br><span class="line">1103</span><br><span class="line">1104</span><br><span class="line">1105</span><br><span class="line">1106</span><br><span class="line">1107</span><br><span class="line">1108</span><br><span class="line">1109</span><br><span class="line">1110</span><br><span class="line">1111</span><br><span class="line">1112</span><br><span class="line">1113</span><br><span class="line">1114</span><br><span class="line">1115</span><br><span class="line">1116</span><br><span class="line">1117</span><br><span class="line">1118</span><br><span class="line">1119</span><br><span class="line">1120</span><br><span class="line">1121</span><br><span class="line">1122</span><br><span class="line">1123</span><br><span class="line">1124</span><br><span class="line">1125</span><br><span class="line">1126</span><br><span class="line">1127</span><br><span class="line">1128</span><br><span class="line">1129</span><br><span class="line">1130</span><br><span class="line">1131</span><br><span class="line">1132</span><br><span class="line">1133</span><br><span class="line">1134</span><br><span class="line">1135</span><br><span class="line">1136</span><br><span class="line">1137</span><br><span class="line">1138</span><br><span class="line">1139</span><br><span class="line">1140</span><br><span class="line">1141</span><br><span class="line">1142</span><br><span class="line">1143</span><br><span class="line">1144</span><br><span class="line">1145</span><br><span class="line">1146</span><br><span class="line">1147</span><br><span class="line">1148</span><br><span class="line">1149</span><br><span class="line">1150</span><br><span class="line">1151</span><br><span class="line">1152</span><br><span class="line">1153</span><br><span class="line">1154</span><br><span class="line">1155</span><br><span class="line">1156</span><br><span class="line">1157</span><br><span class="line">1158</span><br><span class="line">1159</span><br><span class="line">1160</span><br><span class="line">1161</span><br><span class="line">1162</span><br><span class="line">1163</span><br><span class="line">1164</span><br><span class="line">1165</span><br><span class="line">1166</span><br><span class="line">1167</span><br><span class="line">1168</span><br><span class="line">1169</span><br><span class="line">1170</span><br><span class="line">1171</span><br><span class="line">1172</span><br><span class="line">1173</span><br><span class="line">1174</span><br><span class="line">1175</span><br><span class="line">1176</span><br><span class="line">1177</span><br><span class="line">1178</span><br><span class="line">1179</span><br><span class="line">1180</span><br><span class="line">1181</span><br><span class="line">1182</span><br><span class="line">1183</span><br><span class="line">1184</span><br><span class="line">1185</span><br><span class="line">1186</span><br><span class="line">1187</span><br><span class="line">1188</span><br><span class="line">1189</span><br><span class="line">1190</span><br><span class="line">1191</span><br><span class="line">1192</span><br><span class="line">1193</span><br><span class="line">1194</span><br><span class="line">1195</span><br><span class="line">1196</span><br><span class="line">1197</span><br><span class="line">1198</span><br><span class="line">1199</span><br><span class="line">1200</span><br><span class="line">1201</span><br><span class="line">1202</span><br><span class="line">1203</span><br><span class="line">1204</span><br><span class="line">1205</span><br><span class="line">1206</span><br><span class="line">1207</span><br><span class="line">1208</span><br><span class="line">1209</span><br><span class="line">1210</span><br><span class="line">1211</span><br><span class="line">1212</span><br><span class="line">1213</span><br><span class="line">1214</span><br><span class="line">1215</span><br><span class="line">1216</span><br><span class="line">1217</span><br><span class="line">1218</span><br><span class="line">1219</span><br><span class="line">1220</span><br><span class="line">1221</span><br><span class="line">1222</span><br><span class="line">1223</span><br><span class="line">1224</span><br><span class="line">1225</span><br><span class="line">1226</span><br><span class="line">1227</span><br><span class="line">1228</span><br><span class="line">1229</span><br><span class="line">1230</span><br><span class="line">1231</span><br><span class="line">1232</span><br><span class="line">1233</span><br><span class="line">1234</span><br><span class="line">1235</span><br><span class="line">1236</span><br><span class="line">1237</span><br><span class="line">1238</span><br><span class="line">1239</span><br><span class="line">1240</span><br><span class="line">1241</span><br><span class="line">1242</span><br><span class="line">1243</span><br><span class="line">1244</span><br><span class="line">1245</span><br><span class="line">1246</span><br><span class="line">1247</span><br><span class="line">1248</span><br><span class="line">1249</span><br><span class="line">1250</span><br><span class="line">1251</span><br><span class="line">1252</span><br><span class="line">1253</span><br><span class="line">1254</span><br><span class="line">1255</span><br><span class="line">1256</span><br><span class="line">1257</span><br><span class="line">1258</span><br><span class="line">1259</span><br><span class="line">1260</span><br><span class="line">1261</span><br><span class="line">1262</span><br><span class="line">1263</span><br><span class="line">1264</span><br><span class="line">1265</span><br><span class="line">1266</span><br><span class="line">1267</span><br><span class="line">1268</span><br><span class="line">1269</span><br><span class="line">1270</span><br><span class="line">1271</span><br><span class="line">1272</span><br><span class="line">1273</span><br><span class="line">1274</span><br><span class="line">1275</span><br><span class="line">1276</span><br><span class="line">1277</span><br><span class="line">1278</span><br><span class="line">1279</span><br><span class="line">1280</span><br><span class="line">1281</span><br><span class="line">1282</span><br><span class="line">1283</span><br><span class="line">1284</span><br><span class="line">1285</span><br><span class="line">1286</span><br><span class="line">1287</span><br><span class="line">1288</span><br><span class="line">1289</span><br><span class="line">1290</span><br><span class="line">1291</span><br><span class="line">1292</span><br><span class="line">1293</span><br><span class="line">1294</span><br><span class="line">1295</span><br><span class="line">1296</span><br><span class="line">1297</span><br><span class="line">1298</span><br><span class="line">1299</span><br><span class="line">1300</span><br><span class="line">1301</span><br><span class="line">1302</span><br><span class="line">1303</span><br><span class="line">1304</span><br><span class="line">1305</span><br><span class="line">1306</span><br><span class="line">1307</span><br><span class="line">1308</span><br><span class="line">1309</span><br><span class="line">1310</span><br><span class="line">1311</span><br><span class="line">1312</span><br><span class="line">1313</span><br><span class="line">1314</span><br><span class="line">1315</span><br><span class="line">1316</span><br><span class="line">1317</span><br><span class="line">1318</span><br><span class="line">1319</span><br><span class="line">1320</span><br><span class="line">1321</span><br><span class="line">1322</span><br><span class="line">1323</span><br><span class="line">1324</span><br><span class="line">1325</span><br><span class="line">1326</span><br><span class="line">1327</span><br><span class="line">1328</span><br><span class="line">1329</span><br><span class="line">1330</span><br><span class="line">1331</span><br><span class="line">1332</span><br><span class="line">1333</span><br><span class="line">1334</span><br><span class="line">1335</span><br><span class="line">1336</span><br><span class="line">1337</span><br><span class="line">1338</span><br><span class="line">1339</span><br><span class="line">1340</span><br><span class="line">1341</span><br><span class="line">1342</span><br><span class="line">1343</span><br><span class="line">1344</span><br><span class="line">1345</span><br><span class="line">1346</span><br><span class="line">1347</span><br><span class="line">1348</span><br><span class="line">1349</span><br><span class="line">1350</span><br><span class="line">1351</span><br><span class="line">1352</span><br><span class="line">1353</span><br><span class="line">1354</span><br><span class="line">1355</span><br><span class="line">1356</span><br><span class="line">1357</span><br><span class="line">1358</span><br><span class="line">1359</span><br><span class="line">1360</span><br><span class="line">1361</span><br><span class="line">1362</span><br><span class="line">1363</span><br><span class="line">1364</span><br><span class="line">1365</span><br><span class="line">1366</span><br><span class="line">1367</span><br><span class="line">1368</span><br><span class="line">1369</span><br><span class="line">1370</span><br><span class="line">1371</span><br><span class="line">1372</span><br><span class="line">1373</span><br><span class="line">1374</span><br><span class="line">1375</span><br><span class="line">1376</span><br><span class="line">1377</span><br><span class="line">1378</span><br><span class="line">1379</span><br><span class="line">1380</span><br><span class="line">1381</span><br><span class="line">1382</span><br><span class="line">1383</span><br><span class="line">1384</span><br><span class="line">1385</span><br><span class="line">1386</span><br><span class="line">1387</span><br><span class="line">1388</span><br><span class="line">1389</span><br><span class="line">1390</span><br><span class="line">1391</span><br><span class="line">1392</span><br><span class="line">1393</span><br><span class="line">1394</span><br><span class="line">1395</span><br><span class="line">1396</span><br><span class="line">1397</span><br><span class="line">1398</span><br><span class="line">1399</span><br><span class="line">1400</span><br><span class="line">1401</span><br><span class="line">1402</span><br><span class="line">1403</span><br><span class="line">1404</span><br><span class="line">1405</span><br><span class="line">1406</span><br><span class="line">1407</span><br><span class="line">1408</span><br><span class="line">1409</span><br><span class="line">1410</span><br><span class="line">1411</span><br><span class="line">1412</span><br><span class="line">1413</span><br><span class="line">1414</span><br><span class="line">1415</span><br><span class="line">1416</span><br><span class="line">1417</span><br><span class="line">1418</span><br><span class="line">1419</span><br><span class="line">1420</span><br><span class="line">1421</span><br><span class="line">1422</span><br><span class="line">1423</span><br><span class="line">1424</span><br><span class="line">1425</span><br><span class="line">1426</span><br><span class="line">1427</span><br><span class="line">1428</span><br><span class="line">1429</span><br><span class="line">1430</span><br><span class="line">1431</span><br><span class="line">1432</span><br><span class="line">1433</span><br><span class="line">1434</span><br><span class="line">1435</span><br><span class="line">1436</span><br><span class="line">1437</span><br><span class="line">1438</span><br><span class="line">1439</span><br><span class="line">1440</span><br><span class="line">1441</span><br><span class="line">1442</span><br><span class="line">1443</span><br><span class="line">1444</span><br><span class="line">1445</span><br><span class="line">1446</span><br><span class="line">1447</span><br><span class="line">1448</span><br><span class="line">1449</span><br><span class="line">1450</span><br><span class="line">1451</span><br><span class="line">1452</span><br><span class="line">1453</span><br><span class="line">1454</span><br><span class="line">1455</span><br><span class="line">1456</span><br><span class="line">1457</span><br><span class="line">1458</span><br><span class="line">1459</span><br><span class="line">1460</span><br><span class="line">1461</span><br><span class="line">1462</span><br><span class="line">1463</span><br><span class="line">1464</span><br><span class="line">1465</span><br><span class="line">1466</span><br><span class="line">1467</span><br><span class="line">1468</span><br><span class="line">1469</span><br><span class="line">1470</span><br><span class="line">1471</span><br><span class="line">1472</span><br><span class="line">1473</span><br><span class="line">1474</span><br><span class="line">1475</span><br><span class="line">1476</span><br><span class="line">1477</span><br><span class="line">1478</span><br><span class="line">1479</span><br><span class="line">1480</span><br><span class="line">1481</span><br><span class="line">1482</span><br><span class="line">1483</span><br><span class="line">1484</span><br><span class="line">1485</span><br><span class="line">1486</span><br><span class="line">1487</span><br><span class="line">1488</span><br><span class="line">1489</span><br><span class="line">1490</span><br><span class="line">1491</span><br><span class="line">1492</span><br><span class="line">1493</span><br><span class="line">1494</span><br><span class="line">1495</span><br><span class="line">1496</span><br><span class="line">1497</span><br><span class="line">1498</span><br><span class="line">1499</span><br><span class="line">1500</span><br><span class="line">1501</span><br><span class="line">1502</span><br><span class="line">1503</span><br><span class="line">1504</span><br><span class="line">1505</span><br><span class="line">1506</span><br><span class="line">1507</span><br><span class="line">1508</span><br><span class="line">1509</span><br><span class="line">1510</span><br><span class="line">1511</span><br><span class="line">1512</span><br><span class="line">1513</span><br><span class="line">1514</span><br><span class="line">1515</span><br><span class="line">1516</span><br><span class="line">1517</span><br><span class="line">1518</span><br><span class="line">1519</span><br><span class="line">1520</span><br><span class="line">1521</span><br><span class="line">1522</span><br><span class="line">1523</span><br><span class="line">1524</span><br><span class="line">1525</span><br><span class="line">1526</span><br><span class="line">1527</span><br><span class="line">1528</span><br><span class="line">1529</span><br><span class="line">1530</span><br><span class="line">1531</span><br><span class="line">1532</span><br><span class="line">1533</span><br><span class="line">1534</span><br><span class="line">1535</span><br><span class="line">1536</span><br><span class="line">1537</span><br><span class="line">1538</span><br><span class="line">1539</span><br><span class="line">1540</span><br><span class="line">1541</span><br><span class="line">1542</span><br><span class="line">1543</span><br><span class="line">1544</span><br><span class="line">1545</span><br><span class="line">1546</span><br><span class="line">1547</span><br><span class="line">1548</span><br><span class="line">1549</span><br><span class="line">1550</span><br><span class="line">1551</span><br><span class="line">1552</span><br><span class="line">1553</span><br><span class="line">1554</span><br><span class="line">1555</span><br><span class="line">1556</span><br><span class="line">1557</span><br><span class="line">1558</span><br><span class="line">1559</span><br><span class="line">1560</span><br><span class="line">1561</span><br><span class="line">1562</span><br><span class="line">1563</span><br><span class="line">1564</span><br><span class="line">1565</span><br><span class="line">1566</span><br><span class="line">1567</span><br><span class="line">1568</span><br><span class="line">1569</span><br><span class="line">1570</span><br><span class="line">1571</span><br><span class="line">1572</span><br><span class="line">1573</span><br><span class="line">1574</span><br><span class="line">1575</span><br><span class="line">1576</span><br><span class="line">1577</span><br><span class="line">1578</span><br><span class="line">1579</span><br><span class="line">1580</span><br><span class="line">1581</span><br><span class="line">1582</span><br><span class="line">1583</span><br><span class="line">1584</span><br><span class="line">1585</span><br><span class="line">1586</span><br><span class="line">1587</span><br><span class="line">1588</span><br><span class="line">1589</span><br><span class="line">1590</span><br><span class="line">1591</span><br><span class="line">1592</span><br><span class="line">1593</span><br><span class="line">1594</span><br><span class="line">1595</span><br><span class="line">1596</span><br><span class="line">1597</span><br><span class="line">1598</span><br><span class="line">1599</span><br><span class="line">1600</span><br><span class="line">1601</span><br><span class="line">1602</span><br><span class="line">1603</span><br><span class="line">1604</span><br><span class="line">1605</span><br><span class="line">1606</span><br><span class="line">1607</span><br><span class="line">1608</span><br><span class="line">1609</span><br><span class="line">1610</span><br><span class="line">1611</span><br><span class="line">1612</span><br><span class="line">1613</span><br><span class="line">1614</span><br><span class="line">1615</span><br><span class="line">1616</span><br><span class="line">1617</span><br><span class="line">1618</span><br><span class="line">1619</span><br><span class="line">1620</span><br><span class="line">1621</span><br><span class="line">1622</span><br><span class="line">1623</span><br><span class="line">1624</span><br><span class="line">1625</span><br><span class="line">1626</span><br><span class="line">1627</span><br><span class="line">1628</span><br><span class="line">1629</span><br><span class="line">1630</span><br><span class="line">1631</span><br><span class="line">1632</span><br><span class="line">1633</span><br><span class="line">1634</span><br><span class="line">1635</span><br><span class="line">1636</span><br><span class="line">1637</span><br><span class="line">1638</span><br><span class="line">1639</span><br><span class="line">1640</span><br><span class="line">1641</span><br><span class="line">1642</span><br><span class="line">1643</span><br><span class="line">1644</span><br><span class="line">1645</span><br><span class="line">1646</span><br><span class="line">1647</span><br><span class="line">1648</span><br><span class="line">1649</span><br><span class="line">1650</span><br><span class="line">1651</span><br><span class="line">1652</span><br><span class="line">1653</span><br><span class="line">1654</span><br><span class="line">1655</span><br><span class="line">1656</span><br><span class="line">1657</span><br><span class="line">1658</span><br><span class="line">1659</span><br><span class="line">1660</span><br><span class="line">1661</span><br><span class="line">1662</span><br><span class="line">1663</span><br><span class="line">1664</span><br><span class="line">1665</span><br><span class="line">1666</span><br><span class="line">1667</span><br><span class="line">1668</span><br><span class="line">1669</span><br><span class="line">1670</span><br><span class="line">1671</span><br><span class="line">1672</span><br><span class="line">1673</span><br><span class="line">1674</span><br><span class="line">1675</span><br><span class="line">1676</span><br><span class="line">1677</span><br><span class="line">1678</span><br><span class="line">1679</span><br><span class="line">1680</span><br><span class="line">1681</span><br><span class="line">1682</span><br><span class="line">1683</span><br><span class="line">1684</span><br><span class="line">1685</span><br><span class="line">1686</span><br><span class="line">1687</span><br><span class="line">1688</span><br><span class="line">1689</span><br><span class="line">1690</span><br><span class="line">1691</span><br><span class="line">1692</span><br><span class="line">1693</span><br><span class="line">1694</span><br><span class="line">1695</span><br><span class="line">1696</span><br><span class="line">1697</span><br><span class="line">1698</span><br><span class="line">1699</span><br><span class="line">1700</span><br><span class="line">1701</span><br><span class="line">1702</span><br><span class="line">1703</span><br><span class="line">1704</span><br><span class="line">1705</span><br><span class="line">1706</span><br><span class="line">1707</span><br><span class="line">1708</span><br><span class="line">1709</span><br><span class="line">1710</span><br><span class="line">1711</span><br><span class="line">1712</span><br><span class="line">1713</span><br><span class="line">1714</span><br><span class="line">1715</span><br><span class="line">1716</span><br><span class="line">1717</span><br><span class="line">1718</span><br><span class="line">1719</span><br><span class="line">1720</span><br><span class="line">1721</span><br><span class="line">1722</span><br><span class="line">1723</span><br><span class="line">1724</span><br><span class="line">1725</span><br><span class="line">1726</span><br><span class="line">1727</span><br><span class="line">1728</span><br><span class="line">1729</span><br><span class="line">1730</span><br><span class="line">1731</span><br><span class="line">1732</span><br><span class="line">1733</span><br><span class="line">1734</span><br><span class="line">1735</span><br><span class="line">1736</span><br><span class="line">1737</span><br><span class="line">1738</span><br><span class="line">1739</span><br><span class="line">1740</span><br><span class="line">1741</span><br><span class="line">1742</span><br><span class="line">1743</span><br><span class="line">1744</span><br><span class="line">1745</span><br><span class="line">1746</span><br><span class="line">1747</span><br><span class="line">1748</span><br><span class="line">1749</span><br><span class="line">1750</span><br><span class="line">1751</span><br><span class="line">1752</span><br><span class="line">1753</span><br><span class="line">1754</span><br><span class="line">1755</span><br><span class="line">1756</span><br><span class="line">1757</span><br><span class="line">1758</span><br><span class="line">1759</span><br><span class="line">1760</span><br><span class="line">1761</span><br><span class="line">1762</span><br><span class="line">1763</span><br><span class="line">1764</span><br><span class="line">1765</span><br><span class="line">1766</span><br><span class="line">1767</span><br><span class="line">1768</span><br><span class="line">1769</span><br><span class="line">1770</span><br><span class="line">1771</span><br><span class="line">1772</span><br><span class="line">1773</span><br><span class="line">1774</span><br><span class="line">1775</span><br><span class="line">1776</span><br><span class="line">1777</span><br><span class="line">1778</span><br><span class="line">1779</span><br><span class="line">1780</span><br><span class="line">1781</span><br><span class="line">1782</span><br><span class="line">1783</span><br><span class="line">1784</span><br><span class="line">1785</span><br><span class="line">1786</span><br><span class="line">1787</span><br><span class="line">1788</span><br><span class="line">1789</span><br><span class="line">1790</span><br><span class="line">1791</span><br><span class="line">1792</span><br><span class="line">1793</span><br><span class="line">1794</span><br><span class="line">1795</span><br><span class="line">1796</span><br><span class="line">1797</span><br><span class="line">1798</span><br><span class="line">1799</span><br><span class="line">1800</span><br><span class="line">1801</span><br><span class="line">1802</span><br><span class="line">1803</span><br><span class="line">1804</span><br><span class="line">1805</span><br><span class="line">1806</span><br><span class="line">1807</span><br><span class="line">1808</span><br><span class="line">1809</span><br><span class="line">1810</span><br><span class="line">1811</span><br><span class="line">1812</span><br><span class="line">1813</span><br><span class="line">1814</span><br><span class="line">1815</span><br><span class="line">1816</span><br><span class="line">1817</span><br><span class="line">1818</span><br><span class="line">1819</span><br><span class="line">1820</span><br><span class="line">1821</span><br><span class="line">1822</span><br><span class="line">1823</span><br><span class="line">1824</span><br><span class="line">1825</span><br><span class="line">1826</span><br><span class="line">1827</span><br><span class="line">1828</span><br><span class="line">1829</span><br><span class="line">1830</span><br><span class="line">1831</span><br><span class="line">1832</span><br><span class="line">1833</span><br><span class="line">1834</span><br><span class="line">1835</span><br><span class="line">1836</span><br><span class="line">1837</span><br><span class="line">1838</span><br><span class="line">1839</span><br><span class="line">1840</span><br><span class="line">1841</span><br><span class="line">1842</span><br><span class="line">1843</span><br><span class="line">1844</span><br><span class="line">1845</span><br><span class="line">1846</span><br><span class="line">1847</span><br><span class="line">1848</span><br><span class="line">1849</span><br><span class="line">1850</span><br><span class="line">1851</span><br><span class="line">1852</span><br><span class="line">1853</span><br><span class="line">1854</span><br><span class="line">1855</span><br><span class="line">1856</span><br><span class="line">1857</span><br><span class="line">1858</span><br><span class="line">1859</span><br><span class="line">1860</span><br><span class="line">1861</span><br><span class="line">1862</span><br><span class="line">1863</span><br><span class="line">1864</span><br><span class="line">1865</span><br><span class="line">1866</span><br><span class="line">1867</span><br><span class="line">1868</span><br><span class="line">1869</span><br><span class="line">1870</span><br><span class="line">1871</span><br><span class="line">1872</span><br><span class="line">1873</span><br><span class="line">1874</span><br><span class="line">1875</span><br><span class="line">1876</span><br><span class="line">1877</span><br><span class="line">1878</span><br><span class="line">1879</span><br><span class="line">1880</span><br><span class="line">1881</span><br><span class="line">1882</span><br><span class="line">1883</span><br><span class="line">1884</span><br><span class="line">1885</span><br><span class="line">1886</span><br><span class="line">1887</span><br><span class="line">1888</span><br><span class="line">1889</span><br><span class="line">1890</span><br><span class="line">1891</span><br><span class="line">1892</span><br><span class="line">1893</span><br><span class="line">1894</span><br><span class="line">1895</span><br><span class="line">1896</span><br><span class="line">1897</span><br><span class="line">1898</span><br><span class="line">1899</span><br><span class="line">1900</span><br><span class="line">1901</span><br><span class="line">1902</span><br><span class="line">1903</span><br><span class="line">1904</span><br><span class="line">1905</span><br><span class="line">1906</span><br><span class="line">1907</span><br><span class="line">1908</span><br><span class="line">1909</span><br><span class="line">1910</span><br><span class="line">1911</span><br><span class="line">1912</span><br><span class="line">1913</span><br><span class="line">1914</span><br><span class="line">1915</span><br><span class="line">1916</span><br><span class="line">1917</span><br><span class="line">1918</span><br><span class="line">1919</span><br><span class="line">1920</span><br><span class="line">1921</span><br><span class="line">1922</span><br><span class="line">1923</span><br><span class="line">1924</span><br><span class="line">1925</span><br><span class="line">1926</span><br><span class="line">1927</span><br><span class="line">1928</span><br><span class="line">1929</span><br><span class="line">1930</span><br><span class="line">1931</span><br><span class="line">1932</span><br><span class="line">1933</span><br><span class="line">1934</span><br><span class="line">1935</span><br><span class="line">1936</span><br><span class="line">1937</span><br><span class="line">1938</span><br><span class="line">1939</span><br><span class="line">1940</span><br><span class="line">1941</span><br><span class="line">1942</span><br><span class="line">1943</span><br><span class="line">1944</span><br><span class="line">1945</span><br><span class="line">1946</span><br><span class="line">1947</span><br><span class="line">1948</span><br><span class="line">1949</span><br><span class="line">1950</span><br><span class="line">1951</span><br><span class="line">1952</span><br><span class="line">1953</span><br><span class="line">1954</span><br><span class="line">1955</span><br><span class="line">1956</span><br><span class="line">1957</span><br><span class="line">1958</span><br><span class="line">1959</span><br><span class="line">1960</span><br><span class="line">1961</span><br><span class="line">1962</span><br><span class="line">1963</span><br><span class="line">1964</span><br><span class="line">1965</span><br><span class="line">1966</span><br><span class="line">1967</span><br><span class="line">1968</span><br><span class="line">1969</span><br><span class="line">1970</span><br><span class="line">1971</span><br><span class="line">1972</span><br><span class="line">1973</span><br><span class="line">1974</span><br><span class="line">1975</span><br><span class="line">1976</span><br><span class="line">1977</span><br><span class="line">1978</span><br><span class="line">1979</span><br><span class="line">1980</span><br><span class="line">1981</span><br><span class="line">1982</span><br><span class="line">1983</span><br><span class="line">1984</span><br><span class="line">1985</span><br><span class="line">1986</span><br><span class="line">1987</span><br><span class="line">1988</span><br><span class="line">1989</span><br><span class="line">1990</span><br><span class="line">1991</span><br><span class="line">1992</span><br><span class="line">1993</span><br><span class="line">1994</span><br><span class="line">1995</span><br><span class="line">1996</span><br><span class="line">1997</span><br><span class="line">1998</span><br><span class="line">1999</span><br><span class="line">2000</span><br><span class="line">2001</span><br><span class="line">2002</span><br><span class="line">2003</span><br><span class="line">2004</span><br><span class="line">2005</span><br><span class="line">2006</span><br><span class="line">2007</span><br><span class="line">2008</span><br><span class="line">2009</span><br><span class="line">2010</span><br><span class="line">2011</span><br><span class="line">2012</span><br><span class="line">2013</span><br><span class="line">2014</span><br><span class="line">2015</span><br><span class="line">2016</span><br><span class="line">2017</span><br><span class="line">2018</span><br><span class="line">2019</span><br><span class="line">2020</span><br><span class="line">2021</span><br><span class="line">2022</span><br><span class="line">2023</span><br><span class="line">2024</span><br><span class="line">2025</span><br><span class="line">2026</span><br><span class="line">2027</span><br><span class="line">2028</span><br><span class="line">2029</span><br><span class="line">2030</span><br><span class="line">2031</span><br><span class="line">2032</span><br><span class="line">2033</span><br><span class="line">2034</span><br><span class="line">2035</span><br><span class="line">2036</span><br><span class="line">2037</span><br><span class="line">2038</span><br><span class="line">2039</span><br><span class="line">2040</span><br><span class="line">2041</span><br><span class="line">2042</span><br><span class="line">2043</span><br><span class="line">2044</span><br><span class="line">2045</span><br><span class="line">2046</span><br><span class="line">2047</span><br><span class="line">2048</span><br><span class="line">2049</span><br><span class="line">2050</span><br><span class="line">2051</span><br><span class="line">2052</span><br><span class="line">2053</span><br><span class="line">2054</span><br><span class="line">2055</span><br><span class="line">2056</span><br><span class="line">2057</span><br><span class="line">2058</span><br><span class="line">2059</span><br><span class="line">2060</span><br><span class="line">2061</span><br><span class="line">2062</span><br><span class="line">2063</span><br><span class="line">2064</span><br><span class="line">2065</span><br><span class="line">2066</span><br><span class="line">2067</span><br><span class="line">2068</span><br><span class="line">2069</span><br><span class="line">2070</span><br><span class="line">2071</span><br><span class="line">2072</span><br><span class="line">2073</span><br><span class="line">2074</span><br><span class="line">2075</span><br><span class="line">2076</span><br><span class="line">2077</span><br><span class="line">2078</span><br><span class="line">2079</span><br><span class="line">2080</span><br><span class="line">2081</span><br><span class="line">2082</span><br><span class="line">2083</span><br><span class="line">2084</span><br><span class="line">2085</span><br><span class="line">2086</span><br><span class="line">2087</span><br><span class="line">2088</span><br><span class="line">2089</span><br><span class="line">2090</span><br><span class="line">2091</span><br><span class="line">2092</span><br><span class="line">2093</span><br><span class="line">2094</span><br><span class="line">2095</span><br><span class="line">2096</span><br><span class="line">2097</span><br><span class="line">2098</span><br><span class="line">2099</span><br><span class="line">2100</span><br><span class="line">2101</span><br><span class="line">2102</span><br><span class="line">2103</span><br><span class="line">2104</span><br><span class="line">2105</span><br><span class="line">2106</span><br><span class="line">2107</span><br><span class="line">2108</span><br><span class="line">2109</span><br><span class="line">2110</span><br><span class="line">2111</span><br><span class="line">2112</span><br><span class="line">2113</span><br><span class="line">2114</span><br><span class="line">2115</span><br><span class="line">2116</span><br><span class="line">2117</span><br><span class="line">2118</span><br><span class="line">2119</span><br><span class="line">2120</span><br><span class="line">2121</span><br><span class="line">2122</span><br><span class="line">2123</span><br><span class="line">2124</span><br><span class="line">2125</span><br><span class="line">2126</span><br><span class="line">2127</span><br><span class="line">2128</span><br><span class="line">2129</span><br><span class="line">2130</span><br><span class="line">2131</span><br><span class="line">2132</span><br><span class="line">2133</span><br><span class="line">2134</span><br><span class="line">2135</span><br><span class="line">2136</span><br><span class="line">2137</span><br><span class="line">2138</span><br><span class="line">2139</span><br><span class="line">2140</span><br><span class="line">2141</span><br><span class="line">2142</span><br><span class="line">2143</span><br><span class="line">2144</span><br><span class="line">2145</span><br><span class="line">2146</span><br><span class="line">2147</span><br><span class="line">2148</span><br><span class="line">2149</span><br><span class="line">2150</span><br><span class="line">2151</span><br><span class="line">2152</span><br><span class="line">2153</span><br><span class="line">2154</span><br><span class="line">2155</span><br><span class="line">2156</span><br><span class="line">2157</span><br><span class="line">2158</span><br><span class="line">2159</span><br><span class="line">2160</span><br><span class="line">2161</span><br><span class="line">2162</span><br><span class="line">2163</span><br><span class="line">2164</span><br><span class="line">2165</span><br><span class="line">2166</span><br><span class="line">2167</span><br><span class="line">2168</span><br><span class="line">2169</span><br><span class="line">2170</span><br><span class="line">2171</span><br><span class="line">2172</span><br><span class="line">2173</span><br><span class="line">2174</span><br><span class="line">2175</span><br><span class="line">2176</span><br><span class="line">2177</span><br><span class="line">2178</span><br><span class="line">2179</span><br><span class="line">2180</span><br><span class="line">2181</span><br><span class="line">2182</span><br><span class="line">2183</span><br><span class="line">2184</span><br><span class="line">2185</span><br><span class="line">2186</span><br><span class="line">2187</span><br><span class="line">2188</span><br><span class="line">2189</span><br><span class="line">2190</span><br><span class="line">2191</span><br><span class="line">2192</span><br><span class="line">2193</span><br><span class="line">2194</span><br><span class="line">2195</span><br><span class="line">2196</span><br><span class="line">2197</span><br><span class="line">2198</span><br><span class="line">2199</span><br><span class="line">2200</span><br><span class="line">2201</span><br><span class="line">2202</span><br><span class="line">2203</span><br><span class="line">2204</span><br><span class="line">2205</span><br><span class="line">2206</span><br><span class="line">2207</span><br><span class="line">2208</span><br><span class="line">2209</span><br><span class="line">2210</span><br><span class="line">2211</span><br><span class="line">2212</span><br><span class="line">2213</span><br><span class="line">2214</span><br><span class="line">2215</span><br><span class="line">2216</span><br><span class="line">2217</span><br><span class="line">2218</span><br><span class="line">2219</span><br><span class="line">2220</span><br><span class="line">2221</span><br><span class="line">2222</span><br><span class="line">2223</span><br><span class="line">2224</span><br><span class="line">2225</span><br><span class="line">2226</span><br><span class="line">2227</span><br><span class="line">2228</span><br><span class="line">2229</span><br><span class="line">2230</span><br><span class="line">2231</span><br><span class="line">2232</span><br><span class="line">2233</span><br><span class="line">2234</span><br><span class="line">2235</span><br><span class="line">2236</span><br><span class="line">2237</span><br><span class="line">2238</span><br><span class="line">2239</span><br><span class="line">2240</span><br><span class="line">2241</span><br><span class="line">2242</span><br><span class="line">2243</span><br><span class="line">2244</span><br><span class="line">2245</span><br><span class="line">2246</span><br><span class="line">2247</span><br><span class="line">2248</span><br><span class="line">2249</span><br><span class="line">2250</span><br><span class="line">2251</span><br><span class="line">2252</span><br><span class="line">2253</span><br><span class="line">2254</span><br><span class="line">2255</span><br><span class="line">2256</span><br><span class="line">2257</span><br><span class="line">2258</span><br><span class="line">2259</span><br><span class="line">2260</span><br><span class="line">2261</span><br><span class="line">2262</span><br><span class="line">2263</span><br><span class="line">2264</span><br><span class="line">2265</span><br><span class="line">2266</span><br><span class="line">2267</span><br><span class="line">2268</span><br><span class="line">2269</span><br><span class="line">2270</span><br><span class="line">2271</span><br><span class="line">2272</span><br><span class="line">2273</span><br><span class="line">2274</span><br><span class="line">2275</span><br><span class="line">2276</span><br><span class="line">2277</span><br><span class="line">2278</span><br><span class="line">2279</span><br><span class="line">2280</span><br><span class="line">2281</span><br><span class="line">2282</span><br><span class="line">2283</span><br><span class="line">2284</span><br><span class="line">2285</span><br><span class="line">2286</span><br><span class="line">2287</span><br><span class="line">2288</span><br><span class="line">2289</span><br><span class="line">2290</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;tftlcd.h&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;stdlib.h&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;font.h&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;stdio.h&quot;</span></span><br><span class="hljs-comment">//</span><br><span class="hljs-comment">//本程序只供学习使用，未经作者许可，不得用于其它任何用途</span><br><span class="hljs-comment">//ALIENTEK STM32开发板</span><br><span class="hljs-comment">//2.8寸/3.5寸/4.3寸/7寸 TFT液晶驱动</span><br><span class="hljs-comment">//支持驱动IC型号包括:ILI9341/NT35310/NT35510/SSD1963等</span><br><span class="hljs-comment">//正点原子@ALIENTEK</span><br><span class="hljs-comment">//技术论坛:www.openedv.com</span><br><span class="hljs-comment">//创建日期:2017/4/8</span><br><span class="hljs-comment">//版本：V4.0</span><br><span class="hljs-comment">//版权所有，盗版必究。</span><br><span class="hljs-comment">//Copyright(C) 广州市星翼电子科技有限公司 2014-2024</span><br><span class="hljs-comment">//All rights reserved</span><br><span class="hljs-comment">//*******************************************************************************</span><br><span class="hljs-comment">//V4.0 20211111</span><br><span class="hljs-comment">//1，去掉大部分不常用驱动IC的支持</span><br><span class="hljs-comment">//2，新增对ST7789驱动IC的支持</span><br><span class="hljs-comment">//3，优化代码结构（精简源码）</span><br><span class="hljs-comment">//</span><br> <br><span class="hljs-comment">//LCD的画笔颜色和背景色</span><br><span class="hljs-type">uint32_t</span> POINT_COLOR=<span class="hljs-number">0xFF000000</span>;<span class="hljs-comment">//画笔颜色</span><br><span class="hljs-type">uint32_t</span> BACK_COLOR =<span class="hljs-number">0xFFFFFFFF</span>;  <span class="hljs-comment">//背景色</span><br> <br><span class="hljs-comment">//管理LCD重要参数</span><br><span class="hljs-comment">//默认为竖屏</span><br>_lcd_dev lcddev;<br> <br><span class="hljs-comment">//MCU频率为168MHz时的us延时</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">delay_us</span><span class="hljs-params">(<span class="hljs-type">uint32_t</span> nus)</span><br>&#123;<br>    <span class="hljs-type">uint32_t</span> Delay = nus * <span class="hljs-number">168</span>/<span class="hljs-number">4</span>;<br>    <span class="hljs-keyword">do</span><br>    &#123;<br>        __NOP();<br>    &#125;<br>    <span class="hljs-keyword">while</span> (Delay --);<br>&#125;<br> <br><span class="hljs-comment">//写寄存器函数</span><br><span class="hljs-comment">//regval:寄存器值</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">LCD_WR_REG</span><span class="hljs-params">(<span class="hljs-keyword">volatile</span> <span class="hljs-type">uint16_t</span> regval)</span><br>&#123;<br>    regval=regval;<span class="hljs-comment">//使用-O2优化的时候,必须插入的延时</span><br>    LCD-&gt;LCD_REG=regval;<span class="hljs-comment">//写入要写的寄存器序号</span><br>&#125;<br> <br><span class="hljs-comment">//写LCD数据</span><br><span class="hljs-comment">//data:要写入的值</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">LCD_WR_DATA</span><span class="hljs-params">(<span class="hljs-keyword">volatile</span> <span class="hljs-type">uint16_t</span> data)</span><br>&#123;<br>    data=data;<span class="hljs-comment">//使用-O2优化的时候,必须插入的延时</span><br>    LCD-&gt;LCD_RAM=data;<br>&#125;<br> <br><span class="hljs-comment">//读LCD数据</span><br><span class="hljs-comment">//返回值:读到的值</span><br><span class="hljs-type">uint16_t</span> <span class="hljs-title function_">LCD_RD_DATA</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span><br>&#123;<br>    <span class="hljs-keyword">volatile</span> <span class="hljs-type">uint16_t</span> ram;<span class="hljs-comment">//防止被优化</span><br>    ram=LCD-&gt;LCD_RAM;<br>    <span class="hljs-keyword">return</span> ram;<br>&#125;<br> <br><span class="hljs-comment">//写寄存器</span><br><span class="hljs-comment">//LCD_Reg:寄存器地址</span><br><span class="hljs-comment">//LCD_RegValue:要写入的数据</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">LCD_WriteReg</span><span class="hljs-params">(<span class="hljs-type">uint16_t</span> LCD_Reg,<span class="hljs-type">uint16_t</span> LCD_RegValue)</span><br>&#123;<br>    LCD-&gt;LCD_REG = LCD_Reg;<span class="hljs-comment">//写入要写的寄存器序号</span><br>    LCD-&gt;LCD_RAM = LCD_RegValue;<span class="hljs-comment">//写入数据</span><br>&#125;<br> <br><span class="hljs-comment">//读寄存器</span><br><span class="hljs-comment">//LCD_Reg:寄存器地址</span><br><span class="hljs-comment">//返回值:读到的数据</span><br><span class="hljs-type">uint16_t</span> <span class="hljs-title function_">LCD_ReadReg</span><span class="hljs-params">(<span class="hljs-type">uint16_t</span> LCD_Reg)</span><br>&#123;<br>    LCD_WR_REG(LCD_Reg);<span class="hljs-comment">//写入要读的寄存器序号</span><br>    delay_us(<span class="hljs-number">5</span>);<br>    <span class="hljs-keyword">return</span> LCD_RD_DATA();<span class="hljs-comment">//返回读到的值</span><br>&#125;<br> <br><span class="hljs-comment">//开始写GRAM</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">LCD_WriteRAM_Prepare</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span><br>&#123;<br>    LCD-&gt;LCD_REG=lcddev.wramcmd;<br>&#125;<br> <br><span class="hljs-comment">//LCD写GRAM</span><br><span class="hljs-comment">//RGB_Code:颜色值</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">LCD_WriteRAM</span><span class="hljs-params">(<span class="hljs-type">uint16_t</span> RGB_Code)</span><br>&#123;<br>    LCD-&gt;LCD_RAM = RGB_Code;<span class="hljs-comment">//写十六位GRAM</span><br>&#125;<br> <br><span class="hljs-comment">//从ILI93xx读出的数据为GBR格式，而我们写入的时候为RGB格式。</span><br><span class="hljs-comment">//通过该函数转换</span><br><span class="hljs-comment">//c:GBR格式的颜色值</span><br><span class="hljs-comment">//返回值：RGB格式的颜色值</span><br><span class="hljs-type">uint16_t</span> <span class="hljs-title function_">LCD_BGR2RGB</span><span class="hljs-params">(<span class="hljs-type">uint16_t</span> c)</span><br>&#123;<br>    <span class="hljs-type">uint16_t</span>  r,g,b,rgb;<br>    b=(c&gt;&gt;<span class="hljs-number">0</span>)&amp;<span class="hljs-number">0x1f</span>;<br>    g=(c&gt;&gt;<span class="hljs-number">5</span>)&amp;<span class="hljs-number">0x3f</span>;<br>    r=(c&gt;&gt;<span class="hljs-number">11</span>)&amp;<span class="hljs-number">0x1f</span>;<br>    rgb=(b&lt;&lt;<span class="hljs-number">11</span>)+(g&lt;&lt;<span class="hljs-number">5</span>)+(r&lt;&lt;<span class="hljs-number">0</span>);<br>    <span class="hljs-keyword">return</span>(rgb);<br>&#125;<br> <br><span class="hljs-comment">//当mdk -O1时间优化时需要设置</span><br><span class="hljs-comment">//延时i</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">opt_delay</span><span class="hljs-params">(<span class="hljs-type">uint8_t</span> i)</span><br>&#123;<br>    <span class="hljs-keyword">while</span>(i--);<br>&#125;<br> <br><span class="hljs-comment">//读取个某点的颜色值</span><br><span class="hljs-comment">//x,y:坐标</span><br><span class="hljs-comment">//返回值:此点的颜色</span><br><span class="hljs-type">uint32_t</span> <span class="hljs-title function_">LCD_ReadPoint</span><span class="hljs-params">(<span class="hljs-type">uint16_t</span> x,<span class="hljs-type">uint16_t</span> y)</span><br>&#123;<br>    <span class="hljs-type">uint16_t</span> r=<span class="hljs-number">0</span>,g=<span class="hljs-number">0</span>,b=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">if</span>(x&gt;=lcddev.width||y&gt;=lcddev.height)<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<span class="hljs-comment">//超过了范围,直接返回</span><br>    LCD_SetCursor(x,y);<br>    <span class="hljs-keyword">if</span> (lcddev.id == <span class="hljs-number">0X5510</span>)    <span class="hljs-comment">//5510 发送读GRAM指令</span><br>    &#123;<br>        LCD_WR_REG(<span class="hljs-number">0X2E00</span>);<br>    &#125;<br>    <span class="hljs-keyword">else</span>                        <span class="hljs-comment">//其他IC(9341/5310/1963/7789)发送读GRAM指令</span><br>    &#123;<br>        LCD_WR_REG(<span class="hljs-number">0X2E</span>);<br>    &#125;<br>    r=LCD_RD_DATA();<span class="hljs-comment">//dummy Read</span><br>    <span class="hljs-keyword">if</span> (lcddev.id == <span class="hljs-number">0X1963</span>)    <span class="hljs-comment">//对1963来说,是真读</span><br>    &#123;<br>        <span class="hljs-keyword">return</span> r;               <span class="hljs-comment">//1963直接读就可以</span><br>    &#125;<br>    opt_delay(<span class="hljs-number">2</span>);<br>    r = LCD_RD_DATA();          <span class="hljs-comment">//实际坐标颜色</span><br> <br>    <span class="hljs-comment">//9341/5310/5510/7789 要分2次读出</span><br>    opt_delay(<span class="hljs-number">2</span>);<br>    b = LCD_RD_DATA();<br>    g = r &amp; <span class="hljs-number">0XFF</span>;               <span class="hljs-comment">//对于9341/5310/5510/7789, 第一次读取的是RG的值,R在前,G在后,各占8位</span><br>    g &lt;&lt;= <span class="hljs-number">8</span>;<span class="hljs-comment">//9341/5310/5510/7789 需要公式转换一下</span><br>    <span class="hljs-keyword">return</span> (((r &gt;&gt; <span class="hljs-number">11</span>) &lt;&lt; <span class="hljs-number">11</span>) | ((g &gt;&gt; <span class="hljs-number">10</span>) &lt;&lt; <span class="hljs-number">5</span>) | (b &gt;&gt; <span class="hljs-number">11</span>));<br>&#125;<br> <br><span class="hljs-comment">//LCD开启显示</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">LCD_DisplayOn</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span><br>&#123;<br>    <span class="hljs-keyword">if</span> (lcddev.id == <span class="hljs-number">0X5510</span>)    <span class="hljs-comment">//5510开启显示指令</span><br>    &#123;<br>        LCD_WR_REG(<span class="hljs-number">0X2900</span>);     <span class="hljs-comment">//开启显示</span><br>    &#125;<br>    <span class="hljs-keyword">else</span>                        <span class="hljs-comment">//9341/5310/1963/7789 等发送开启显示指令</span><br>    &#123;<br>        LCD_WR_REG(<span class="hljs-number">0X29</span>);       <span class="hljs-comment">//开启显示</span><br>    &#125;<br>&#125;<br> <br><span class="hljs-comment">//LCD关闭显示</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">LCD_DisplayOff</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span><br>&#123;<br>    <span class="hljs-keyword">if</span> (lcddev.id == <span class="hljs-number">0X5510</span>)    <span class="hljs-comment">//5510关闭显示指令</span><br>    &#123;<br>        LCD_WR_REG(<span class="hljs-number">0X2800</span>);     <span class="hljs-comment">//关闭显示</span><br>    &#125;<br>    <span class="hljs-keyword">else</span>                        <span class="hljs-comment">//9341/5310/1963/7789 等发送关闭显示指令</span><br>    &#123;<br>        LCD_WR_REG(<span class="hljs-number">0X28</span>);       <span class="hljs-comment">//关闭显示</span><br>    &#125;<br>&#125;<br> <br><span class="hljs-comment">//设置光标位置</span><br><span class="hljs-comment">//Xpos:横坐标</span><br><span class="hljs-comment">//Ypos:纵坐标</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">LCD_SetCursor</span><span class="hljs-params">(<span class="hljs-type">uint16_t</span> Xpos, <span class="hljs-type">uint16_t</span> Ypos)</span><br>&#123;<br>    <span class="hljs-keyword">if</span> (lcddev.id == <span class="hljs-number">0X1963</span>)<br>    &#123;<br>        <span class="hljs-keyword">if</span> (lcddev.dir == <span class="hljs-number">0</span>)   <span class="hljs-comment">//x坐标需要变换</span><br>        &#123;<br>            Xpos = lcddev.width - <span class="hljs-number">1</span> - Xpos;<br>            LCD_WR_REG(lcddev.setxcmd);<br>            LCD_WR_DATA(<span class="hljs-number">0</span>);<br>            LCD_WR_DATA(<span class="hljs-number">0</span>);<br>            LCD_WR_DATA(Xpos &gt;&gt; <span class="hljs-number">8</span>);<br>            LCD_WR_DATA(Xpos &amp; <span class="hljs-number">0XFF</span>);<br>        &#125;<br>        <span class="hljs-keyword">else</span><br>        &#123;<br>            LCD_WR_REG(lcddev.setxcmd);<br>            LCD_WR_DATA(Xpos &gt;&gt; <span class="hljs-number">8</span>);<br>            LCD_WR_DATA(Xpos &amp; <span class="hljs-number">0XFF</span>);<br>            LCD_WR_DATA((lcddev.width - <span class="hljs-number">1</span>) &gt;&gt; <span class="hljs-number">8</span>);<br>            LCD_WR_DATA((lcddev.width - <span class="hljs-number">1</span>) &amp; <span class="hljs-number">0XFF</span>);<br>        &#125;<br> <br>        LCD_WR_REG(lcddev.setycmd);<br>        LCD_WR_DATA(Ypos &gt;&gt; <span class="hljs-number">8</span>);<br>        LCD_WR_DATA(Ypos &amp; <span class="hljs-number">0XFF</span>);<br>        LCD_WR_DATA((lcddev.height - <span class="hljs-number">1</span>) &gt;&gt; <span class="hljs-number">8</span>);<br>        LCD_WR_DATA((lcddev.height - <span class="hljs-number">1</span>) &amp; <span class="hljs-number">0XFF</span>);<br> <br>    &#125;<br>    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (lcddev.id == <span class="hljs-number">0X5510</span>)<br>    &#123;<br>        LCD_WR_REG(lcddev.setxcmd);<br>        LCD_WR_DATA(Xpos &gt;&gt; <span class="hljs-number">8</span>);<br>        LCD_WR_REG(lcddev.setxcmd + <span class="hljs-number">1</span>);<br>        LCD_WR_DATA(Xpos &amp; <span class="hljs-number">0XFF</span>);<br>        LCD_WR_REG(lcddev.setycmd);<br>        LCD_WR_DATA(Ypos &gt;&gt; <span class="hljs-number">8</span>);<br>        LCD_WR_REG(lcddev.setycmd + <span class="hljs-number">1</span>);<br>        LCD_WR_DATA(Ypos &amp; <span class="hljs-number">0XFF</span>);<br>    &#125;<br>    <span class="hljs-keyword">else</span>     <span class="hljs-comment">//9341/5310/7789等设置坐标</span><br>    &#123;<br>        LCD_WR_REG(lcddev.setxcmd);<br>        LCD_WR_DATA(Xpos &gt;&gt; <span class="hljs-number">8</span>);<br>        LCD_WR_DATA(Xpos &amp; <span class="hljs-number">0XFF</span>);<br>        LCD_WR_REG(lcddev.setycmd);<br>        LCD_WR_DATA(Ypos &gt;&gt; <span class="hljs-number">8</span>);<br>        LCD_WR_DATA(Ypos &amp; <span class="hljs-number">0XFF</span>);<br>    &#125;<br>&#125;<br> <br><span class="hljs-comment">//设置LCD的自动扫描方向</span><br><span class="hljs-comment">//dir:0~7,代表8个方向(具体定义见lcd.h)</span><br><span class="hljs-comment">//9341/5310/5510/1963/7789等IC已经实际测试</span><br><span class="hljs-comment">//注意:其他函数可能会受到此函数设置的影响(尤其是9341),</span><br><span class="hljs-comment">//所以,一般设置为L2R_U2D即可,如果设置为其他扫描方式,可能导致显示不正常.</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">LCD_Scan_Dir</span><span class="hljs-params">(<span class="hljs-type">uint8_t</span> dir)</span><br>&#123;<br>    <span class="hljs-type">uint16_t</span> regval=<span class="hljs-number">0</span>;<br>    <span class="hljs-type">uint16_t</span> dirreg=<span class="hljs-number">0</span>;<br>    <span class="hljs-type">uint16_t</span> temp;<br>    <span class="hljs-comment">//横屏时，对1963不改变扫描方向, 其他IC改变扫描方向！竖屏时1963改变方向, 其他IC不改变扫描方向</span><br>    <span class="hljs-keyword">if</span> ((lcddev.dir == <span class="hljs-number">1</span> &amp;&amp; lcddev.id != <span class="hljs-number">0X1963</span>) || (lcddev.dir == <span class="hljs-number">0</span> &amp;&amp; lcddev.id == <span class="hljs-number">0X1963</span>))<br>    &#123;<br>        <span class="hljs-keyword">switch</span> (dir)   <span class="hljs-comment">//方向转换</span><br>        &#123;<br>        <span class="hljs-keyword">case</span> <span class="hljs-number">0</span>:<br>            dir = <span class="hljs-number">6</span>;<br>            <span class="hljs-keyword">break</span>;<br> <br>        <span class="hljs-keyword">case</span> <span class="hljs-number">1</span>:<br>            dir = <span class="hljs-number">7</span>;<br>            <span class="hljs-keyword">break</span>;<br> <br>        <span class="hljs-keyword">case</span> <span class="hljs-number">2</span>:<br>            dir = <span class="hljs-number">4</span>;<br>            <span class="hljs-keyword">break</span>;<br> <br>        <span class="hljs-keyword">case</span> <span class="hljs-number">3</span>:<br>            dir = <span class="hljs-number">5</span>;<br>            <span class="hljs-keyword">break</span>;<br> <br>        <span class="hljs-keyword">case</span> <span class="hljs-number">4</span>:<br>            dir = <span class="hljs-number">1</span>;<br>            <span class="hljs-keyword">break</span>;<br> <br>        <span class="hljs-keyword">case</span> <span class="hljs-number">5</span>:<br>            dir = <span class="hljs-number">0</span>;<br>            <span class="hljs-keyword">break</span>;<br> <br>        <span class="hljs-keyword">case</span> <span class="hljs-number">6</span>:<br>            dir = <span class="hljs-number">3</span>;<br>            <span class="hljs-keyword">break</span>;<br> <br>        <span class="hljs-keyword">case</span> <span class="hljs-number">7</span>:<br>            dir = <span class="hljs-number">2</span>;<br>            <span class="hljs-keyword">break</span>;<br>        &#125;<br>    &#125;<br> <br>    <span class="hljs-keyword">switch</span> (dir)<br>    &#123;<br>    <span class="hljs-keyword">case</span> L2R_U2D:<span class="hljs-comment">//从左到右,从上到下</span><br>        regval |= (<span class="hljs-number">0</span> &lt;&lt; <span class="hljs-number">7</span>) | (<span class="hljs-number">0</span> &lt;&lt; <span class="hljs-number">6</span>) | (<span class="hljs-number">0</span> &lt;&lt; <span class="hljs-number">5</span>);<br>        <span class="hljs-keyword">break</span>;<br> <br>    <span class="hljs-keyword">case</span> L2R_D2U:<span class="hljs-comment">//从左到右,从下到上</span><br>        regval |= (<span class="hljs-number">1</span> &lt;&lt; <span class="hljs-number">7</span>) | (<span class="hljs-number">0</span> &lt;&lt; <span class="hljs-number">6</span>) | (<span class="hljs-number">0</span> &lt;&lt; <span class="hljs-number">5</span>);<br>        <span class="hljs-keyword">break</span>;<br> <br>    <span class="hljs-keyword">case</span> R2L_U2D:<span class="hljs-comment">//从右到左,从上到下</span><br>        regval |= (<span class="hljs-number">0</span> &lt;&lt; <span class="hljs-number">7</span>) | (<span class="hljs-number">1</span> &lt;&lt; <span class="hljs-number">6</span>) | (<span class="hljs-number">0</span> &lt;&lt; <span class="hljs-number">5</span>);<br>        <span class="hljs-keyword">break</span>;<br> <br>    <span class="hljs-keyword">case</span> R2L_D2U:<span class="hljs-comment">//从右到左,从下到上</span><br>        regval |= (<span class="hljs-number">1</span> &lt;&lt; <span class="hljs-number">7</span>) | (<span class="hljs-number">1</span> &lt;&lt; <span class="hljs-number">6</span>) | (<span class="hljs-number">0</span> &lt;&lt; <span class="hljs-number">5</span>);<br>        <span class="hljs-keyword">break</span>;<br> <br>    <span class="hljs-keyword">case</span> U2D_L2R:<span class="hljs-comment">//从上到下,从左到右</span><br>        regval |= (<span class="hljs-number">0</span> &lt;&lt; <span class="hljs-number">7</span>) | (<span class="hljs-number">0</span> &lt;&lt; <span class="hljs-number">6</span>) | (<span class="hljs-number">1</span> &lt;&lt; <span class="hljs-number">5</span>);<br>        <span class="hljs-keyword">break</span>;<br> <br>    <span class="hljs-keyword">case</span> U2D_R2L:<span class="hljs-comment">//从上到下,从右到左</span><br>        regval |= (<span class="hljs-number">0</span> &lt;&lt; <span class="hljs-number">7</span>) | (<span class="hljs-number">1</span> &lt;&lt; <span class="hljs-number">6</span>) | (<span class="hljs-number">1</span> &lt;&lt; <span class="hljs-number">5</span>);<br>        <span class="hljs-keyword">break</span>;<br> <br>    <span class="hljs-keyword">case</span> D2U_L2R:<span class="hljs-comment">//从下到上,从左到右</span><br>        regval |= (<span class="hljs-number">1</span> &lt;&lt; <span class="hljs-number">7</span>) | (<span class="hljs-number">0</span> &lt;&lt; <span class="hljs-number">6</span>) | (<span class="hljs-number">1</span> &lt;&lt; <span class="hljs-number">5</span>);<br>        <span class="hljs-keyword">break</span>;<br> <br>    <span class="hljs-keyword">case</span> D2U_R2L:<span class="hljs-comment">//从下到上,从右到左</span><br>        regval |= (<span class="hljs-number">1</span> &lt;&lt; <span class="hljs-number">7</span>) | (<span class="hljs-number">1</span> &lt;&lt; <span class="hljs-number">6</span>) | (<span class="hljs-number">1</span> &lt;&lt; <span class="hljs-number">5</span>);<br>        <span class="hljs-keyword">break</span>;<br>    &#125;<br> <br>    <span class="hljs-keyword">if</span> (lcddev.id == <span class="hljs-number">0X5510</span>)dirreg = <span class="hljs-number">0X3600</span>;<br>    <span class="hljs-keyword">else</span> dirreg = <span class="hljs-number">0X36</span>;<br> <br>    <span class="hljs-keyword">if</span> (lcddev.id == <span class="hljs-number">0X9341</span> || lcddev.id == <span class="hljs-number">0X7789</span>)   <span class="hljs-comment">//9341 &amp; 7789 要设置BGR位</span><br>    &#123;<br>        regval |= <span class="hljs-number">0X08</span>;<br>    &#125;<br> <br>    LCD_WriteReg(dirreg, regval);<br> <br>    <span class="hljs-keyword">if</span> (lcddev.id != <span class="hljs-number">0X1963</span>)   <span class="hljs-comment">//1963不做坐标处理</span><br>    &#123;<br>        <span class="hljs-keyword">if</span> (regval &amp; <span class="hljs-number">0X20</span>)<br>        &#123;<br>            <span class="hljs-keyword">if</span> (lcddev.width &lt; lcddev.height)   <span class="hljs-comment">//交换X,Y</span><br>            &#123;<br>                temp = lcddev.width;<br>                lcddev.width = lcddev.height;<br>                lcddev.height = temp;<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">else</span><br>        &#123;<br>            <span class="hljs-keyword">if</span> (lcddev.width &gt; lcddev.height)   <span class="hljs-comment">//交换X,Y</span><br>            &#123;<br>                temp = lcddev.width;<br>                lcddev.width = lcddev.height;<br>                lcddev.height = temp;<br>            &#125;<br>        &#125;<br>    &#125;<br> <br>    <span class="hljs-comment">//设置显示区域(开窗)大小</span><br>    <span class="hljs-keyword">if</span> (lcddev.id == <span class="hljs-number">0X5510</span>)<br>    &#123;<br>        LCD_WR_REG(lcddev.setxcmd);<br>        LCD_WR_DATA(<span class="hljs-number">0</span>);<br>        LCD_WR_REG(lcddev.setxcmd + <span class="hljs-number">1</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0</span>);<br>        LCD_WR_REG(lcddev.setxcmd + <span class="hljs-number">2</span>);<br>        LCD_WR_DATA((lcddev.width - <span class="hljs-number">1</span>) &gt;&gt; <span class="hljs-number">8</span>);<br>        LCD_WR_REG(lcddev.setxcmd + <span class="hljs-number">3</span>);<br>        LCD_WR_DATA((lcddev.width - <span class="hljs-number">1</span>) &amp; <span class="hljs-number">0XFF</span>);<br>        LCD_WR_REG(lcddev.setycmd);<br>        LCD_WR_DATA(<span class="hljs-number">0</span>);<br>        LCD_WR_REG(lcddev.setycmd + <span class="hljs-number">1</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0</span>);<br>        LCD_WR_REG(lcddev.setycmd + <span class="hljs-number">2</span>);<br>        LCD_WR_DATA((lcddev.height - <span class="hljs-number">1</span>) &gt;&gt; <span class="hljs-number">8</span>);<br>        LCD_WR_REG(lcddev.setycmd + <span class="hljs-number">3</span>);<br>        LCD_WR_DATA((lcddev.height - <span class="hljs-number">1</span>) &amp; <span class="hljs-number">0XFF</span>);<br>    &#125;<br>    <span class="hljs-keyword">else</span><br>    &#123;<br>        LCD_WR_REG(lcddev.setxcmd);<br>        LCD_WR_DATA(<span class="hljs-number">0</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0</span>);<br>        LCD_WR_DATA((lcddev.width - <span class="hljs-number">1</span>) &gt;&gt; <span class="hljs-number">8</span>);<br>        LCD_WR_DATA((lcddev.width - <span class="hljs-number">1</span>) &amp; <span class="hljs-number">0XFF</span>);<br>        LCD_WR_REG(lcddev.setycmd);<br>        LCD_WR_DATA(<span class="hljs-number">0</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0</span>);<br>        LCD_WR_DATA((lcddev.height - <span class="hljs-number">1</span>) &gt;&gt; <span class="hljs-number">8</span>);<br>        LCD_WR_DATA((lcddev.height - <span class="hljs-number">1</span>) &amp; <span class="hljs-number">0XFF</span>);<br>    &#125;<br>&#125;<br> <br><span class="hljs-comment">//画点</span><br><span class="hljs-comment">//x,y:坐标</span><br><span class="hljs-comment">//POINT_COLOR:此点的颜色</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">LCD_DrawPoint</span><span class="hljs-params">(<span class="hljs-type">uint16_t</span> x,<span class="hljs-type">uint16_t</span> y)</span><br>&#123;<br>    LCD_SetCursor(x,y);<span class="hljs-comment">//设置光标位置</span><br>    LCD_WriteRAM_Prepare();<span class="hljs-comment">//开始写入GRAM</span><br>    LCD-&gt;LCD_RAM=POINT_COLOR;<br>&#125;<br> <br><span class="hljs-comment">//快速画点</span><br><span class="hljs-comment">//x,y:坐标</span><br><span class="hljs-comment">//color:颜色</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">LCD_Fast_DrawPoint</span><span class="hljs-params">(<span class="hljs-type">uint16_t</span> x,<span class="hljs-type">uint16_t</span> y,<span class="hljs-type">uint32_t</span> color)</span><br>&#123;<br>    <span class="hljs-keyword">if</span> (lcddev.id == <span class="hljs-number">0X5510</span>)<br>    &#123;<br>        LCD_WR_REG(lcddev.setxcmd);<br>        LCD_WR_DATA(x &gt;&gt; <span class="hljs-number">8</span>);<br>        LCD_WR_REG(lcddev.setxcmd + <span class="hljs-number">1</span>);<br>        LCD_WR_DATA(x &amp; <span class="hljs-number">0XFF</span>);<br>        LCD_WR_REG(lcddev.setycmd);<br>        LCD_WR_DATA(y &gt;&gt; <span class="hljs-number">8</span>);<br>        LCD_WR_REG(lcddev.setycmd + <span class="hljs-number">1</span>);<br>        LCD_WR_DATA(y &amp; <span class="hljs-number">0XFF</span>);<br>    &#125;<br>    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (lcddev.id == <span class="hljs-number">0X1963</span>)<br>    &#123;<br>        <span class="hljs-keyword">if</span> (lcddev.dir == <span class="hljs-number">0</span>)x = lcddev.width - <span class="hljs-number">1</span> - x;<br> <br>        LCD_WR_REG(lcddev.setxcmd);<br>        LCD_WR_DATA(x &gt;&gt; <span class="hljs-number">8</span>);<br>        LCD_WR_DATA(x &amp; <span class="hljs-number">0XFF</span>);<br>        LCD_WR_DATA(x &gt;&gt; <span class="hljs-number">8</span>);<br>        LCD_WR_DATA(x &amp; <span class="hljs-number">0XFF</span>);<br>        LCD_WR_REG(lcddev.setycmd);<br>        LCD_WR_DATA(y &gt;&gt; <span class="hljs-number">8</span>);<br>        LCD_WR_DATA(y &amp; <span class="hljs-number">0XFF</span>);<br>        LCD_WR_DATA(y &gt;&gt; <span class="hljs-number">8</span>);<br>        LCD_WR_DATA(y &amp; <span class="hljs-number">0XFF</span>);<br>    &#125;<br>    <span class="hljs-keyword">else</span>     <span class="hljs-comment">//9341/5310/7789等设置坐标</span><br>    &#123;<br>        LCD_WR_REG(lcddev.setxcmd);<br>        LCD_WR_DATA(x &gt;&gt; <span class="hljs-number">8</span>);<br>        LCD_WR_DATA(x &amp; <span class="hljs-number">0XFF</span>);<br>        LCD_WR_REG(lcddev.setycmd);<br>        LCD_WR_DATA(y &gt;&gt; <span class="hljs-number">8</span>);<br>        LCD_WR_DATA(y &amp; <span class="hljs-number">0XFF</span>);<br>    &#125;<br> <br>    LCD-&gt;LCD_REG=lcddev.wramcmd;<br>    LCD-&gt;LCD_RAM=color;<br>&#125;<br> <br><span class="hljs-comment">//SSD1963 背光设置</span><br><span class="hljs-comment">//pwm:背光等级,0~100.越大越亮.</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">LCD_SSD_BackLightSet</span><span class="hljs-params">(<span class="hljs-type">uint8_t</span> pwm)</span><br>&#123;<br>    LCD_WR_REG(<span class="hljs-number">0xBE</span>);<span class="hljs-comment">//配置PWM输出</span><br>    LCD_WR_DATA(<span class="hljs-number">0x05</span>);<span class="hljs-comment">//1设置PWM频率</span><br>    LCD_WR_DATA(pwm*<span class="hljs-number">2.55</span>);<span class="hljs-comment">//2设置PWM占空比</span><br>    LCD_WR_DATA(<span class="hljs-number">0x01</span>);<span class="hljs-comment">//3设置C</span><br>    LCD_WR_DATA(<span class="hljs-number">0xFF</span>);<span class="hljs-comment">//4设置D</span><br>    LCD_WR_DATA(<span class="hljs-number">0x00</span>);<span class="hljs-comment">//5设置E</span><br>    LCD_WR_DATA(<span class="hljs-number">0x00</span>);<span class="hljs-comment">//6设置F</span><br>&#125;<br> <br><span class="hljs-comment">//设置LCD显示方向</span><br><span class="hljs-comment">//dir:0,竖屏；1,横屏</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">LCD_Display_Dir</span><span class="hljs-params">(<span class="hljs-type">uint8_t</span> dir)</span><br>&#123;<br>    lcddev.dir = dir;       <span class="hljs-comment">//竖屏/横屏</span><br> <br>    <span class="hljs-keyword">if</span> (dir == <span class="hljs-number">0</span>)           <span class="hljs-comment">//竖屏</span><br>    &#123;<br>        lcddev.width = <span class="hljs-number">240</span>;<br>        lcddev.height = <span class="hljs-number">320</span>;<br> <br>        <span class="hljs-keyword">if</span> (lcddev.id == <span class="hljs-number">0x5510</span>)<br>        &#123;<br>            lcddev.wramcmd = <span class="hljs-number">0X2C00</span>;<br>            lcddev.setxcmd = <span class="hljs-number">0X2A00</span>;<br>            lcddev.setycmd = <span class="hljs-number">0X2B00</span>;<br>            lcddev.width = <span class="hljs-number">480</span>;<br>            lcddev.height = <span class="hljs-number">800</span>;<br>        &#125;<br>        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (lcddev.id == <span class="hljs-number">0X1963</span>)<br>        &#123;<br>            lcddev.wramcmd = <span class="hljs-number">0X2C</span>;  <span class="hljs-comment">//设置写入GRAM的指令</span><br>            lcddev.setxcmd = <span class="hljs-number">0X2B</span>;  <span class="hljs-comment">//设置写X坐标指令</span><br>            lcddev.setycmd = <span class="hljs-number">0X2A</span>;  <span class="hljs-comment">//设置写Y坐标指令</span><br>            lcddev.width = <span class="hljs-number">480</span>;     <span class="hljs-comment">//设置宽度480</span><br>            lcddev.height = <span class="hljs-number">800</span>;    <span class="hljs-comment">//设置高度800</span><br>        &#125;<br>        <span class="hljs-keyword">else</span>                        <span class="hljs-comment">//其他IC, 包括: 9341 / 5310 / 7789等IC</span><br>        &#123;<br>            lcddev.wramcmd = <span class="hljs-number">0X2C</span>;<br>            lcddev.setxcmd = <span class="hljs-number">0X2A</span>;<br>            lcddev.setycmd = <span class="hljs-number">0X2B</span>;<br>        &#125;<br> <br>        <span class="hljs-keyword">if</span> (lcddev.id == <span class="hljs-number">0X5310</span>)    <span class="hljs-comment">//如果是5310 则表示是 320*480分辨率</span><br>        &#123;<br>            lcddev.width = <span class="hljs-number">320</span>;<br>            lcddev.height = <span class="hljs-number">480</span>;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">else</span>     <span class="hljs-comment">//横屏</span><br>    &#123;<br>        lcddev.width = <span class="hljs-number">320</span>;<br>        lcddev.height = <span class="hljs-number">240</span>;<br> <br>        <span class="hljs-keyword">if</span> (lcddev.id == <span class="hljs-number">0x5510</span>)<br>        &#123;<br>            lcddev.wramcmd = <span class="hljs-number">0X2C00</span>;<br>            lcddev.setxcmd = <span class="hljs-number">0X2A00</span>;<br>            lcddev.setycmd = <span class="hljs-number">0X2B00</span>;<br>            lcddev.width = <span class="hljs-number">800</span>;<br>            lcddev.height = <span class="hljs-number">480</span>;<br>        &#125;<br>        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (lcddev.id == <span class="hljs-number">0X1963</span>)<br>        &#123;<br>            lcddev.wramcmd = <span class="hljs-number">0X2C</span>;  <span class="hljs-comment">//设置写入GRAM的指令</span><br>            lcddev.setxcmd = <span class="hljs-number">0X2A</span>;  <span class="hljs-comment">//设置写X坐标指令</span><br>            lcddev.setycmd = <span class="hljs-number">0X2B</span>;  <span class="hljs-comment">//设置写Y坐标指令</span><br>            lcddev.width = <span class="hljs-number">800</span>;     <span class="hljs-comment">//设置宽度800</span><br>            lcddev.height = <span class="hljs-number">480</span>;    <span class="hljs-comment">//设置高度480</span><br>        &#125;<br>        <span class="hljs-keyword">else</span>                        <span class="hljs-comment">//其他IC, 包括: 9341 / 5310 / 7789等IC</span><br>        &#123;<br>            lcddev.wramcmd = <span class="hljs-number">0X2C</span>;<br>            lcddev.setxcmd = <span class="hljs-number">0X2A</span>;<br>            lcddev.setycmd = <span class="hljs-number">0X2B</span>;<br>        &#125;<br> <br>        <span class="hljs-keyword">if</span> (lcddev.id == <span class="hljs-number">0X5310</span>)    <span class="hljs-comment">//如果是5310 则表示是 320*480分辨率</span><br>        &#123;<br>            lcddev.width = <span class="hljs-number">480</span>;<br>            lcddev.height = <span class="hljs-number">320</span>;<br>        &#125;<br>    &#125;<br> <br>    LCD_Scan_Dir(DFT_SCAN_DIR);     <span class="hljs-comment">//默认扫描方向</span><br>&#125;<br> <br><span class="hljs-comment">//设置窗口,并自动设置画点坐标到窗口左上角(sx,sy).</span><br><span class="hljs-comment">//sx,sy:窗口起始坐标(左上角)</span><br><span class="hljs-comment">//width,height:窗口宽度和高度,必须大于0!!</span><br><span class="hljs-comment">//窗体大小:width*height.</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">LCD_Set_Window</span><span class="hljs-params">(<span class="hljs-type">uint16_t</span> sx, <span class="hljs-type">uint16_t</span> sy, <span class="hljs-type">uint16_t</span> width, <span class="hljs-type">uint16_t</span> height)</span><br>&#123;<br>    <span class="hljs-type">uint16_t</span> twidth, theight;<br>    twidth = sx + width - <span class="hljs-number">1</span>;<br>    theight = sy + height - <span class="hljs-number">1</span>;<br> <br>    <span class="hljs-keyword">if</span> (lcddev.id == <span class="hljs-number">0X1963</span> &amp;&amp; lcddev.dir != <span class="hljs-number">1</span>)     <span class="hljs-comment">//1963竖屏特殊处理</span><br>    &#123;<br>        sx = lcddev.width - width - sx;<br>        height = sy + height - <span class="hljs-number">1</span>;<br>        LCD_WR_REG(lcddev.setxcmd);<br>        LCD_WR_DATA(sx &gt;&gt; <span class="hljs-number">8</span>);<br>        LCD_WR_DATA(sx &amp; <span class="hljs-number">0XFF</span>);<br>        LCD_WR_DATA((sx + width - <span class="hljs-number">1</span>) &gt;&gt; <span class="hljs-number">8</span>);<br>        LCD_WR_DATA((sx + width - <span class="hljs-number">1</span>) &amp; <span class="hljs-number">0XFF</span>);<br>        LCD_WR_REG(lcddev.setycmd);<br>        LCD_WR_DATA(sy &gt;&gt; <span class="hljs-number">8</span>);<br>        LCD_WR_DATA(sy &amp; <span class="hljs-number">0XFF</span>);<br>        LCD_WR_DATA(height &gt;&gt; <span class="hljs-number">8</span>);<br>        LCD_WR_DATA(height &amp; <span class="hljs-number">0XFF</span>);<br>    &#125;<br>    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (lcddev.id == <span class="hljs-number">0X5510</span>)<br>    &#123;<br>        LCD_WR_REG(lcddev.setxcmd);<br>        LCD_WR_DATA(sx &gt;&gt; <span class="hljs-number">8</span>);<br>        LCD_WR_REG(lcddev.setxcmd + <span class="hljs-number">1</span>);<br>        LCD_WR_DATA(sx &amp; <span class="hljs-number">0XFF</span>);<br>        LCD_WR_REG(lcddev.setxcmd + <span class="hljs-number">2</span>);<br>        LCD_WR_DATA(twidth &gt;&gt; <span class="hljs-number">8</span>);<br>        LCD_WR_REG(lcddev.setxcmd + <span class="hljs-number">3</span>);<br>        LCD_WR_DATA(twidth &amp; <span class="hljs-number">0XFF</span>);<br>        LCD_WR_REG(lcddev.setycmd);<br>        LCD_WR_DATA(sy &gt;&gt; <span class="hljs-number">8</span>);<br>        LCD_WR_REG(lcddev.setycmd + <span class="hljs-number">1</span>);<br>        LCD_WR_DATA(sy &amp; <span class="hljs-number">0XFF</span>);<br>        LCD_WR_REG(lcddev.setycmd + <span class="hljs-number">2</span>);<br>        LCD_WR_DATA(theight &gt;&gt; <span class="hljs-number">8</span>);<br>        LCD_WR_REG(lcddev.setycmd + <span class="hljs-number">3</span>);<br>        LCD_WR_DATA(theight &amp; <span class="hljs-number">0XFF</span>);<br>    &#125;<br>    <span class="hljs-keyword">else</span>     <span class="hljs-comment">//9341/5310/7789/1963横屏 等 设置窗口</span><br>    &#123;<br>        LCD_WR_REG(lcddev.setxcmd);<br>        LCD_WR_DATA(sx &gt;&gt; <span class="hljs-number">8</span>);<br>        LCD_WR_DATA(sx &amp; <span class="hljs-number">0XFF</span>);<br>        LCD_WR_DATA(twidth &gt;&gt; <span class="hljs-number">8</span>);<br>        LCD_WR_DATA(twidth &amp; <span class="hljs-number">0XFF</span>);<br>        LCD_WR_REG(lcddev.setycmd);<br>        LCD_WR_DATA(sy &gt;&gt; <span class="hljs-number">8</span>);<br>        LCD_WR_DATA(sy &amp; <span class="hljs-number">0XFF</span>);<br>        LCD_WR_DATA(theight &gt;&gt; <span class="hljs-number">8</span>);<br>        LCD_WR_DATA(theight &amp; <span class="hljs-number">0XFF</span>);<br>    &#125;<br>&#125;<br> <br><span class="hljs-comment">//初始化lcd</span><br><span class="hljs-comment">//该初始化函数可以初始化各种ILI93XX液晶,但是其他函数是基于ILI9320的!!!</span><br><span class="hljs-comment">//在其他型号的驱动芯片上没有测试!</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">LCD_Init</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span><br>&#123;<br>    <span class="hljs-comment">//尝试9341 ID的读取</span><br>    LCD_WR_REG(<span class="hljs-number">0XD3</span>);<br>    lcddev.id=LCD_RD_DATA();<span class="hljs-comment">//dummy read</span><br>    lcddev.id=LCD_RD_DATA();<span class="hljs-comment">//读到0X00</span><br>    lcddev.id=LCD_RD_DATA();   <span class="hljs-comment">//读取93</span><br>    lcddev.id&lt;&lt;=<span class="hljs-number">8</span>;<br>    lcddev.id|=LCD_RD_DATA();  <span class="hljs-comment">//读取41</span><br>    <span class="hljs-keyword">if</span>(lcddev.id!=<span class="hljs-number">0X9341</span>)<span class="hljs-comment">//非9341,尝试是不是7789</span><br>    &#123;<br>        LCD_WR_REG(<span class="hljs-number">0X04</span>);<br>        lcddev.id = LCD_RD_DATA();      <span class="hljs-comment">//dummy read</span><br>        lcddev.id = LCD_RD_DATA();      <span class="hljs-comment">//读到0X85</span><br>        lcddev.id = LCD_RD_DATA();      <span class="hljs-comment">//读取0X85</span><br>        lcddev.id &lt;&lt;= <span class="hljs-number">8</span>;<br>        lcddev.id |= LCD_RD_DATA();     <span class="hljs-comment">//读取0X52</span><br> <br>        <span class="hljs-keyword">if</span> (lcddev.id == <span class="hljs-number">0X8552</span>)        <span class="hljs-comment">//将8552的ID转换成7789</span><br>        &#123;<br>            lcddev.id = <span class="hljs-number">0x7789</span>;<br>        &#125;<br> <br>        <span class="hljs-keyword">if</span> (lcddev.id != <span class="hljs-number">0x7789</span>)        <span class="hljs-comment">//也不是ST7789, 尝试是不是 7789</span><br>        &#123;<br>            LCD_WR_REG(<span class="hljs-number">0XD4</span>);<br>            lcddev.id=LCD_RD_DATA();<span class="hljs-comment">//dummy read</span><br>            lcddev.id=LCD_RD_DATA();<span class="hljs-comment">//读回0X01</span><br>            lcddev.id=LCD_RD_DATA();<span class="hljs-comment">//读回0X53</span><br>            lcddev.id&lt;&lt;=<span class="hljs-number">8</span>;<br>            lcddev.id|=LCD_RD_DATA();<span class="hljs-comment">//这里读回0X10</span><br>            <span class="hljs-keyword">if</span>(lcddev.id!=<span class="hljs-number">0X5310</span>)<span class="hljs-comment">//也不是NT35310,尝试看看是不是NT35510</span><br>            &#123;<br>                LCD_WR_REG(<span class="hljs-number">0XDA00</span>);<br>                lcddev.id=LCD_RD_DATA();<span class="hljs-comment">//读回0X00</span><br>                LCD_WR_REG(<span class="hljs-number">0XDB00</span>);<br>                lcddev.id=LCD_RD_DATA();<span class="hljs-comment">//读回0X80</span><br>                lcddev.id&lt;&lt;=<span class="hljs-number">8</span>;<br>                LCD_WR_REG(<span class="hljs-number">0XDC00</span>);<br>                lcddev.id|=LCD_RD_DATA();<span class="hljs-comment">//读回0X00</span><br>                <span class="hljs-keyword">if</span>(lcddev.id==<span class="hljs-number">0x8000</span>)lcddev.id=<span class="hljs-number">0x5510</span>;<span class="hljs-comment">//NT35510读回的ID是8000H,为方便区分,我们强制设置为5510</span><br>                <span class="hljs-keyword">if</span>(lcddev.id!=<span class="hljs-number">0X5510</span>)<span class="hljs-comment">//也不是NT5510,尝试看看是不是SSD1963</span><br>                &#123;<br>                    LCD_WR_REG(<span class="hljs-number">0XA1</span>);<br>                    lcddev.id=LCD_RD_DATA();<br>                    lcddev.id=LCD_RD_DATA();<span class="hljs-comment">//读回0X57</span><br>                    lcddev.id&lt;&lt;=<span class="hljs-number">8</span>;<br>                    lcddev.id|=LCD_RD_DATA();<span class="hljs-comment">//读回0X61</span><br>                    <span class="hljs-keyword">if</span>(lcddev.id==<span class="hljs-number">0X5761</span>)lcddev.id=<span class="hljs-number">0X1963</span>;<span class="hljs-comment">//SSD1963读回的ID是5761H,为方便区分,我们强制设置为1963</span><br>                &#125;<br>            &#125;<br>        &#125;<br>    &#125;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;LCD ID:%x\r\n&quot;</span>,lcddev.id); <span class="hljs-comment">//打印LCD ID</span><br>    <span class="hljs-keyword">if</span>(lcddev.id==<span class="hljs-number">0X9341</span>)<span class="hljs-comment">//9341初始化</span><br>    &#123;<br>        LCD_WR_REG(<span class="hljs-number">0xCF</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0xC1</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0X30</span>);<br>        LCD_WR_REG(<span class="hljs-number">0xED</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x64</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x03</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0X12</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0X81</span>);<br>        LCD_WR_REG(<span class="hljs-number">0xE8</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x85</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x10</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x7A</span>);<br>        LCD_WR_REG(<span class="hljs-number">0xCB</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x39</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x2C</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x34</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x02</span>);<br>        LCD_WR_REG(<span class="hljs-number">0xF7</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x20</span>);<br>        LCD_WR_REG(<span class="hljs-number">0xEA</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_REG(<span class="hljs-number">0xC0</span>);    <span class="hljs-comment">//Power control</span><br>        LCD_WR_DATA(<span class="hljs-number">0x1B</span>);   <span class="hljs-comment">//VRH[5:0]</span><br>        LCD_WR_REG(<span class="hljs-number">0xC1</span>);    <span class="hljs-comment">//Power control</span><br>        LCD_WR_DATA(<span class="hljs-number">0x01</span>);   <span class="hljs-comment">//SAP[2:0];BT[3:0]</span><br>        LCD_WR_REG(<span class="hljs-number">0xC5</span>);    <span class="hljs-comment">//VCM control</span><br>        LCD_WR_DATA(<span class="hljs-number">0x30</span>);  <span class="hljs-comment">//3F</span><br>        LCD_WR_DATA(<span class="hljs-number">0x30</span>);  <span class="hljs-comment">//3C</span><br>        LCD_WR_REG(<span class="hljs-number">0xC7</span>);    <span class="hljs-comment">//VCM control2</span><br>        LCD_WR_DATA(<span class="hljs-number">0XB7</span>);<br>        LCD_WR_REG(<span class="hljs-number">0x36</span>);    <span class="hljs-comment">// Memory Access Control</span><br>        LCD_WR_DATA(<span class="hljs-number">0x48</span>);<br>        LCD_WR_REG(<span class="hljs-number">0x3A</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x55</span>);<br>        LCD_WR_REG(<span class="hljs-number">0xB1</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x1A</span>);<br>        LCD_WR_REG(<span class="hljs-number">0xB6</span>);    <span class="hljs-comment">// Display Function Control</span><br>        LCD_WR_DATA(<span class="hljs-number">0x0A</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0xA2</span>);<br>        LCD_WR_REG(<span class="hljs-number">0xF2</span>);    <span class="hljs-comment">// 3Gamma Function Disable</span><br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_REG(<span class="hljs-number">0x26</span>);    <span class="hljs-comment">//Gamma curve selected</span><br>        LCD_WR_DATA(<span class="hljs-number">0x01</span>);<br>        LCD_WR_REG(<span class="hljs-number">0xE0</span>);    <span class="hljs-comment">//Set Gamma</span><br>        LCD_WR_DATA(<span class="hljs-number">0x0F</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x2A</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x28</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x08</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x0E</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x08</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x54</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0XA9</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x43</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x0A</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x0F</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_REG(<span class="hljs-number">0XE1</span>);    <span class="hljs-comment">//Set Gamma</span><br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x15</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x17</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x07</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x11</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x06</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x2B</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x56</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x3C</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x05</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x10</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x0F</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x3F</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x3F</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x0F</span>);<br>        LCD_WR_REG(<span class="hljs-number">0x2B</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x01</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x3f</span>);<br>        LCD_WR_REG(<span class="hljs-number">0x2A</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0xef</span>);<br>        LCD_WR_REG(<span class="hljs-number">0x11</span>); <span class="hljs-comment">//Exit Sleep</span><br>        HAL_Delay(<span class="hljs-number">120</span>);<br>        LCD_WR_REG(<span class="hljs-number">0x29</span>); <span class="hljs-comment">//display on</span><br>    &#125;<br>    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(lcddev.id==<span class="hljs-number">0x7789</span>)      <span class="hljs-comment">//7789初始化</span><br>    &#123;<br>        LCD_WR_REG(<span class="hljs-number">0x11</span>);<br> <br>        HAL_Delay(<span class="hljs-number">120</span>);<br> <br>        LCD_WR_REG(<span class="hljs-number">0x36</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br> <br> <br>        LCD_WR_REG(<span class="hljs-number">0x3A</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0X05</span>);<br> <br>        LCD_WR_REG(<span class="hljs-number">0xB2</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x0C</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x0C</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x33</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x33</span>);<br> <br>        LCD_WR_REG(<span class="hljs-number">0xB7</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x35</span>);<br> <br>        LCD_WR_REG(<span class="hljs-number">0xBB</span>);       <span class="hljs-comment">//vcom</span><br>        LCD_WR_DATA(<span class="hljs-number">0x32</span>);      <span class="hljs-comment">//30</span><br> <br>        LCD_WR_REG(<span class="hljs-number">0xC0</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x0C</span>);<br> <br>        LCD_WR_REG(<span class="hljs-number">0xC2</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x01</span>);<br> <br>        LCD_WR_REG(<span class="hljs-number">0xC3</span>);       <span class="hljs-comment">//vrh</span><br>        LCD_WR_DATA(<span class="hljs-number">0x10</span>);      <span class="hljs-comment">//17 0D</span><br> <br>        LCD_WR_REG(<span class="hljs-number">0xC4</span>);       <span class="hljs-comment">//vdv</span><br>        LCD_WR_DATA(<span class="hljs-number">0x20</span>);      <span class="hljs-comment">//20</span><br> <br>        LCD_WR_REG(<span class="hljs-number">0xC6</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x0f</span>);<br> <br>        LCD_WR_REG(<span class="hljs-number">0xD0</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0xA4</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0xA1</span>);<br> <br>        LCD_WR_REG(<span class="hljs-number">0xE0</span>);       <span class="hljs-comment">//Set Gamma</span><br>        LCD_WR_DATA(<span class="hljs-number">0xd0</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x02</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x07</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x0a</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x28</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x32</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0X44</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x42</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x06</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x0e</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x12</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x14</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x17</span>);<br> <br>        LCD_WR_REG(<span class="hljs-number">0XE1</span>);       <span class="hljs-comment">//Set Gamma</span><br>        LCD_WR_DATA(<span class="hljs-number">0xd0</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x02</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x07</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x0a</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x28</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x31</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x54</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x47</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x0e</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x1c</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x17</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x1b</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x1e</span>);<br> <br>        LCD_WR_REG(<span class="hljs-number">0x2A</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0xef</span>);<br> <br>        LCD_WR_REG(<span class="hljs-number">0x2B</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x01</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x3f</span>);<br> <br>        LCD_WR_REG(<span class="hljs-number">0x29</span>);       <span class="hljs-comment">//display on</span><br>    &#125;<br>    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(lcddev.id==<span class="hljs-number">0x5310</span>)<br>    &#123;<br>        LCD_WR_REG(<span class="hljs-number">0xED</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x01</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0xFE</span>);<br> <br>        LCD_WR_REG(<span class="hljs-number">0xEE</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0xDE</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x21</span>);<br> <br>        LCD_WR_REG(<span class="hljs-number">0xF1</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x01</span>);<br>        LCD_WR_REG(<span class="hljs-number">0xDF</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x10</span>);<br> <br>        <span class="hljs-comment">//VCOMvoltage//</span><br>        LCD_WR_REG(<span class="hljs-number">0xC4</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x8F</span>);  <span class="hljs-comment">//5f</span><br> <br>        LCD_WR_REG(<span class="hljs-number">0xC6</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0xE2</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0xE2</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0xE2</span>);<br>        LCD_WR_REG(<span class="hljs-number">0xBF</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0xAA</span>);<br> <br>        LCD_WR_REG(<span class="hljs-number">0xB0</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x0D</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x0D</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x11</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x19</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x21</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x2D</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x3D</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x5D</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x5D</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br> <br>        LCD_WR_REG(<span class="hljs-number">0xB1</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x80</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x8B</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x96</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br> <br>        LCD_WR_REG(<span class="hljs-number">0xB2</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x02</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x03</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br> <br>        LCD_WR_REG(<span class="hljs-number">0xB3</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br> <br>        LCD_WR_REG(<span class="hljs-number">0xB4</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x8B</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x96</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0xA1</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br> <br>        LCD_WR_REG(<span class="hljs-number">0xB5</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x02</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x03</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x04</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br> <br>        LCD_WR_REG(<span class="hljs-number">0xB6</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br> <br>        LCD_WR_REG(<span class="hljs-number">0xB7</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x3F</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x5E</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x64</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x8C</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0xAC</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0xDC</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x70</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x90</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0xEB</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0xDC</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br> <br>        LCD_WR_REG(<span class="hljs-number">0xB8</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br> <br>        LCD_WR_REG(<span class="hljs-number">0xBA</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x24</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br> <br>        LCD_WR_REG(<span class="hljs-number">0xC1</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x20</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x54</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0xFF</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br> <br>        LCD_WR_REG(<span class="hljs-number">0xC2</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x0A</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x04</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br> <br>        LCD_WR_REG(<span class="hljs-number">0xC3</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x3C</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x3A</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x39</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x37</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x3C</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x36</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x32</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x2F</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x2C</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x29</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x26</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x24</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x24</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x23</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x3C</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x36</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x32</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x2F</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x2C</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x29</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x26</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x24</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x24</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x23</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br> <br>        LCD_WR_REG(<span class="hljs-number">0xC4</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x62</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x05</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x84</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0xF0</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x18</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0xA4</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x18</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x50</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x0C</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x17</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x95</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0xF3</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0xE6</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br> <br>        LCD_WR_REG(<span class="hljs-number">0xC5</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x32</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x44</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x65</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x76</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x88</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br> <br>        LCD_WR_REG(<span class="hljs-number">0xC6</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x20</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x17</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x01</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br> <br>        LCD_WR_REG(<span class="hljs-number">0xC7</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br> <br>        LCD_WR_REG(<span class="hljs-number">0xC8</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br> <br>        LCD_WR_REG(<span class="hljs-number">0xC9</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br> <br>        LCD_WR_REG(<span class="hljs-number">0xE0</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x16</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x1C</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x21</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x36</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x46</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x52</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x64</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x7A</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x8B</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x99</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0xA8</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0xB9</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0xC4</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0xCA</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0xD2</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0xD9</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0xE0</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0xF3</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br> <br>        LCD_WR_REG(<span class="hljs-number">0xE1</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x16</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x1C</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x22</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x36</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x45</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x52</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x64</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x7A</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x8B</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x99</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0xA8</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0xB9</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0xC4</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0xCA</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0xD2</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0xD8</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0xE0</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0xF3</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br> <br>        LCD_WR_REG(<span class="hljs-number">0xE2</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x05</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x0B</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x1B</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x34</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x44</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x4F</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x61</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x79</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x88</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x97</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0xA6</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0xB7</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0xC2</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0xC7</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0xD1</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0xD6</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0xDD</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0xF3</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_REG(<span class="hljs-number">0xE3</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x05</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0xA</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x1C</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x33</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x44</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x50</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x62</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x78</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x88</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x97</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0xA6</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0xB7</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0xC2</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0xC7</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0xD1</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0xD5</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0xDD</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0xF3</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br> <br>        LCD_WR_REG(<span class="hljs-number">0xE4</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x01</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x01</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x02</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x2A</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x3C</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x4B</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x5D</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x74</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x84</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x93</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0xA2</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0xB3</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0xBE</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0xC4</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0xCD</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0xD3</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0xDD</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0xF3</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_REG(<span class="hljs-number">0xE5</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x02</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x29</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x3C</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x4B</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x5D</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x74</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x84</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x93</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0xA2</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0xB3</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0xBE</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0xC4</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0xCD</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0xD3</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0xDC</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0xF3</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br> <br>        LCD_WR_REG(<span class="hljs-number">0xE6</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x11</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x34</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x56</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x76</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x77</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x66</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x88</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x99</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0xBB</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x99</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x66</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x55</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x55</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x45</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x43</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x44</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br> <br>        LCD_WR_REG(<span class="hljs-number">0xE7</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x32</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x55</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x76</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x66</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x67</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x67</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x87</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x99</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0xBB</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x99</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x77</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x44</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x56</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x23</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x33</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x45</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br> <br>        LCD_WR_REG(<span class="hljs-number">0xE8</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x99</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x87</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x88</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x77</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x66</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x88</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0xAA</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0xBB</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x99</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x66</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x55</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x55</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x44</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x44</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x55</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br> <br>        LCD_WR_REG(<span class="hljs-number">0xE9</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0xAA</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br> <br>        LCD_WR_REG(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0xAA</span>);<br> <br>        LCD_WR_REG(<span class="hljs-number">0xCF</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br> <br>        LCD_WR_REG(<span class="hljs-number">0xF0</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x50</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br> <br>        LCD_WR_REG(<span class="hljs-number">0xF3</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br> <br>        LCD_WR_REG(<span class="hljs-number">0xF9</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x06</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x10</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x29</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br> <br>        LCD_WR_REG(<span class="hljs-number">0x3A</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x55</span>);<span class="hljs-comment">//66</span><br> <br>        LCD_WR_REG(<span class="hljs-number">0x11</span>);<br>        HAL_Delay(<span class="hljs-number">100</span>);<br>        LCD_WR_REG(<span class="hljs-number">0x29</span>);<br>        LCD_WR_REG(<span class="hljs-number">0x35</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br> <br>        LCD_WR_REG(<span class="hljs-number">0x51</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0xFF</span>);<br>        LCD_WR_REG(<span class="hljs-number">0x53</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x2C</span>);<br>        LCD_WR_REG(<span class="hljs-number">0x55</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x82</span>);<br>        LCD_WR_REG(<span class="hljs-number">0x2c</span>);<br>    &#125;<br>    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(lcddev.id==<span class="hljs-number">0x5510</span>)<br>    &#123;<br>        LCD_WriteReg(<span class="hljs-number">0xF000</span>,<span class="hljs-number">0x55</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xF001</span>,<span class="hljs-number">0xAA</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xF002</span>,<span class="hljs-number">0x52</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xF003</span>,<span class="hljs-number">0x08</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xF004</span>,<span class="hljs-number">0x01</span>);<br>        <span class="hljs-comment">//AVDD Set AVDD 5.2V</span><br>        LCD_WriteReg(<span class="hljs-number">0xB000</span>,<span class="hljs-number">0x0D</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xB001</span>,<span class="hljs-number">0x0D</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xB002</span>,<span class="hljs-number">0x0D</span>);<br>        <span class="hljs-comment">//AVDD ratio</span><br>        LCD_WriteReg(<span class="hljs-number">0xB600</span>,<span class="hljs-number">0x34</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xB601</span>,<span class="hljs-number">0x34</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xB602</span>,<span class="hljs-number">0x34</span>);<br>        <span class="hljs-comment">//AVEE -5.2V</span><br>        LCD_WriteReg(<span class="hljs-number">0xB100</span>,<span class="hljs-number">0x0D</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xB101</span>,<span class="hljs-number">0x0D</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xB102</span>,<span class="hljs-number">0x0D</span>);<br>        <span class="hljs-comment">//AVEE ratio</span><br>        LCD_WriteReg(<span class="hljs-number">0xB700</span>,<span class="hljs-number">0x34</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xB701</span>,<span class="hljs-number">0x34</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xB702</span>,<span class="hljs-number">0x34</span>);<br>        <span class="hljs-comment">//VCL -2.5V</span><br>        LCD_WriteReg(<span class="hljs-number">0xB200</span>,<span class="hljs-number">0x00</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xB201</span>,<span class="hljs-number">0x00</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xB202</span>,<span class="hljs-number">0x00</span>);<br>        <span class="hljs-comment">//VCL ratio</span><br>        LCD_WriteReg(<span class="hljs-number">0xB800</span>,<span class="hljs-number">0x24</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xB801</span>,<span class="hljs-number">0x24</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xB802</span>,<span class="hljs-number">0x24</span>);<br>        <span class="hljs-comment">//VGH 15V (Free pump)</span><br>        LCD_WriteReg(<span class="hljs-number">0xBF00</span>,<span class="hljs-number">0x01</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xB300</span>,<span class="hljs-number">0x0F</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xB301</span>,<span class="hljs-number">0x0F</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xB302</span>,<span class="hljs-number">0x0F</span>);<br>        <span class="hljs-comment">//VGH ratio</span><br>        LCD_WriteReg(<span class="hljs-number">0xB900</span>,<span class="hljs-number">0x34</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xB901</span>,<span class="hljs-number">0x34</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xB902</span>,<span class="hljs-number">0x34</span>);<br>        <span class="hljs-comment">//VGL_REG -10V</span><br>        LCD_WriteReg(<span class="hljs-number">0xB500</span>,<span class="hljs-number">0x08</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xB501</span>,<span class="hljs-number">0x08</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xB502</span>,<span class="hljs-number">0x08</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xC200</span>,<span class="hljs-number">0x03</span>);<br>        <span class="hljs-comment">//VGLX ratio</span><br>        LCD_WriteReg(<span class="hljs-number">0xBA00</span>,<span class="hljs-number">0x24</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xBA01</span>,<span class="hljs-number">0x24</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xBA02</span>,<span class="hljs-number">0x24</span>);<br>        <span class="hljs-comment">//VGMP/VGSP 4.5V/0V</span><br>        LCD_WriteReg(<span class="hljs-number">0xBC00</span>,<span class="hljs-number">0x00</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xBC01</span>,<span class="hljs-number">0x78</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xBC02</span>,<span class="hljs-number">0x00</span>);<br>        <span class="hljs-comment">//VGMN/VGSN -4.5V/0V</span><br>        LCD_WriteReg(<span class="hljs-number">0xBD00</span>,<span class="hljs-number">0x00</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xBD01</span>,<span class="hljs-number">0x78</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xBD02</span>,<span class="hljs-number">0x00</span>);<br>        <span class="hljs-comment">//VCOM</span><br>        LCD_WriteReg(<span class="hljs-number">0xBE00</span>,<span class="hljs-number">0x00</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xBE01</span>,<span class="hljs-number">0x64</span>);<br>        <span class="hljs-comment">//Gamma Setting</span><br>        LCD_WriteReg(<span class="hljs-number">0xD100</span>,<span class="hljs-number">0x00</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD101</span>,<span class="hljs-number">0x33</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD102</span>,<span class="hljs-number">0x00</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD103</span>,<span class="hljs-number">0x34</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD104</span>,<span class="hljs-number">0x00</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD105</span>,<span class="hljs-number">0x3A</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD106</span>,<span class="hljs-number">0x00</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD107</span>,<span class="hljs-number">0x4A</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD108</span>,<span class="hljs-number">0x00</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD109</span>,<span class="hljs-number">0x5C</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD10A</span>,<span class="hljs-number">0x00</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD10B</span>,<span class="hljs-number">0x81</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD10C</span>,<span class="hljs-number">0x00</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD10D</span>,<span class="hljs-number">0xA6</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD10E</span>,<span class="hljs-number">0x00</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD10F</span>,<span class="hljs-number">0xE5</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD110</span>,<span class="hljs-number">0x01</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD111</span>,<span class="hljs-number">0x13</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD112</span>,<span class="hljs-number">0x01</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD113</span>,<span class="hljs-number">0x54</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD114</span>,<span class="hljs-number">0x01</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD115</span>,<span class="hljs-number">0x82</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD116</span>,<span class="hljs-number">0x01</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD117</span>,<span class="hljs-number">0xCA</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD118</span>,<span class="hljs-number">0x02</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD119</span>,<span class="hljs-number">0x00</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD11A</span>,<span class="hljs-number">0x02</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD11B</span>,<span class="hljs-number">0x01</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD11C</span>,<span class="hljs-number">0x02</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD11D</span>,<span class="hljs-number">0x34</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD11E</span>,<span class="hljs-number">0x02</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD11F</span>,<span class="hljs-number">0x67</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD120</span>,<span class="hljs-number">0x02</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD121</span>,<span class="hljs-number">0x84</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD122</span>,<span class="hljs-number">0x02</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD123</span>,<span class="hljs-number">0xA4</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD124</span>,<span class="hljs-number">0x02</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD125</span>,<span class="hljs-number">0xB7</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD126</span>,<span class="hljs-number">0x02</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD127</span>,<span class="hljs-number">0xCF</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD128</span>,<span class="hljs-number">0x02</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD129</span>,<span class="hljs-number">0xDE</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD12A</span>,<span class="hljs-number">0x02</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD12B</span>,<span class="hljs-number">0xF2</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD12C</span>,<span class="hljs-number">0x02</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD12D</span>,<span class="hljs-number">0xFE</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD12E</span>,<span class="hljs-number">0x03</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD12F</span>,<span class="hljs-number">0x10</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD130</span>,<span class="hljs-number">0x03</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD131</span>,<span class="hljs-number">0x33</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD132</span>,<span class="hljs-number">0x03</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD133</span>,<span class="hljs-number">0x6D</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD200</span>,<span class="hljs-number">0x00</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD201</span>,<span class="hljs-number">0x33</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD202</span>,<span class="hljs-number">0x00</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD203</span>,<span class="hljs-number">0x34</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD204</span>,<span class="hljs-number">0x00</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD205</span>,<span class="hljs-number">0x3A</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD206</span>,<span class="hljs-number">0x00</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD207</span>,<span class="hljs-number">0x4A</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD208</span>,<span class="hljs-number">0x00</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD209</span>,<span class="hljs-number">0x5C</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD20A</span>,<span class="hljs-number">0x00</span>);<br> <br>        LCD_WriteReg(<span class="hljs-number">0xD20B</span>,<span class="hljs-number">0x81</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD20C</span>,<span class="hljs-number">0x00</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD20D</span>,<span class="hljs-number">0xA6</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD20E</span>,<span class="hljs-number">0x00</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD20F</span>,<span class="hljs-number">0xE5</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD210</span>,<span class="hljs-number">0x01</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD211</span>,<span class="hljs-number">0x13</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD212</span>,<span class="hljs-number">0x01</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD213</span>,<span class="hljs-number">0x54</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD214</span>,<span class="hljs-number">0x01</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD215</span>,<span class="hljs-number">0x82</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD216</span>,<span class="hljs-number">0x01</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD217</span>,<span class="hljs-number">0xCA</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD218</span>,<span class="hljs-number">0x02</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD219</span>,<span class="hljs-number">0x00</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD21A</span>,<span class="hljs-number">0x02</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD21B</span>,<span class="hljs-number">0x01</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD21C</span>,<span class="hljs-number">0x02</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD21D</span>,<span class="hljs-number">0x34</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD21E</span>,<span class="hljs-number">0x02</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD21F</span>,<span class="hljs-number">0x67</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD220</span>,<span class="hljs-number">0x02</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD221</span>,<span class="hljs-number">0x84</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD222</span>,<span class="hljs-number">0x02</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD223</span>,<span class="hljs-number">0xA4</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD224</span>,<span class="hljs-number">0x02</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD225</span>,<span class="hljs-number">0xB7</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD226</span>,<span class="hljs-number">0x02</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD227</span>,<span class="hljs-number">0xCF</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD228</span>,<span class="hljs-number">0x02</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD229</span>,<span class="hljs-number">0xDE</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD22A</span>,<span class="hljs-number">0x02</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD22B</span>,<span class="hljs-number">0xF2</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD22C</span>,<span class="hljs-number">0x02</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD22D</span>,<span class="hljs-number">0xFE</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD22E</span>,<span class="hljs-number">0x03</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD22F</span>,<span class="hljs-number">0x10</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD230</span>,<span class="hljs-number">0x03</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD231</span>,<span class="hljs-number">0x33</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD232</span>,<span class="hljs-number">0x03</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD233</span>,<span class="hljs-number">0x6D</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD300</span>,<span class="hljs-number">0x00</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD301</span>,<span class="hljs-number">0x33</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD302</span>,<span class="hljs-number">0x00</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD303</span>,<span class="hljs-number">0x34</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD304</span>,<span class="hljs-number">0x00</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD305</span>,<span class="hljs-number">0x3A</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD306</span>,<span class="hljs-number">0x00</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD307</span>,<span class="hljs-number">0x4A</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD308</span>,<span class="hljs-number">0x00</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD309</span>,<span class="hljs-number">0x5C</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD30A</span>,<span class="hljs-number">0x00</span>);<br> <br>        LCD_WriteReg(<span class="hljs-number">0xD30B</span>,<span class="hljs-number">0x81</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD30C</span>,<span class="hljs-number">0x00</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD30D</span>,<span class="hljs-number">0xA6</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD30E</span>,<span class="hljs-number">0x00</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD30F</span>,<span class="hljs-number">0xE5</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD310</span>,<span class="hljs-number">0x01</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD311</span>,<span class="hljs-number">0x13</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD312</span>,<span class="hljs-number">0x01</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD313</span>,<span class="hljs-number">0x54</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD314</span>,<span class="hljs-number">0x01</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD315</span>,<span class="hljs-number">0x82</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD316</span>,<span class="hljs-number">0x01</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD317</span>,<span class="hljs-number">0xCA</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD318</span>,<span class="hljs-number">0x02</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD319</span>,<span class="hljs-number">0x00</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD31A</span>,<span class="hljs-number">0x02</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD31B</span>,<span class="hljs-number">0x01</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD31C</span>,<span class="hljs-number">0x02</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD31D</span>,<span class="hljs-number">0x34</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD31E</span>,<span class="hljs-number">0x02</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD31F</span>,<span class="hljs-number">0x67</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD320</span>,<span class="hljs-number">0x02</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD321</span>,<span class="hljs-number">0x84</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD322</span>,<span class="hljs-number">0x02</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD323</span>,<span class="hljs-number">0xA4</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD324</span>,<span class="hljs-number">0x02</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD325</span>,<span class="hljs-number">0xB7</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD326</span>,<span class="hljs-number">0x02</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD327</span>,<span class="hljs-number">0xCF</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD328</span>,<span class="hljs-number">0x02</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD329</span>,<span class="hljs-number">0xDE</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD32A</span>,<span class="hljs-number">0x02</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD32B</span>,<span class="hljs-number">0xF2</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD32C</span>,<span class="hljs-number">0x02</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD32D</span>,<span class="hljs-number">0xFE</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD32E</span>,<span class="hljs-number">0x03</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD32F</span>,<span class="hljs-number">0x10</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD330</span>,<span class="hljs-number">0x03</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD331</span>,<span class="hljs-number">0x33</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD332</span>,<span class="hljs-number">0x03</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD333</span>,<span class="hljs-number">0x6D</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD400</span>,<span class="hljs-number">0x00</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD401</span>,<span class="hljs-number">0x33</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD402</span>,<span class="hljs-number">0x00</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD403</span>,<span class="hljs-number">0x34</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD404</span>,<span class="hljs-number">0x00</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD405</span>,<span class="hljs-number">0x3A</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD406</span>,<span class="hljs-number">0x00</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD407</span>,<span class="hljs-number">0x4A</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD408</span>,<span class="hljs-number">0x00</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD409</span>,<span class="hljs-number">0x5C</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD40A</span>,<span class="hljs-number">0x00</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD40B</span>,<span class="hljs-number">0x81</span>);<br> <br>        LCD_WriteReg(<span class="hljs-number">0xD40C</span>,<span class="hljs-number">0x00</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD40D</span>,<span class="hljs-number">0xA6</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD40E</span>,<span class="hljs-number">0x00</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD40F</span>,<span class="hljs-number">0xE5</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD410</span>,<span class="hljs-number">0x01</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD411</span>,<span class="hljs-number">0x13</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD412</span>,<span class="hljs-number">0x01</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD413</span>,<span class="hljs-number">0x54</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD414</span>,<span class="hljs-number">0x01</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD415</span>,<span class="hljs-number">0x82</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD416</span>,<span class="hljs-number">0x01</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD417</span>,<span class="hljs-number">0xCA</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD418</span>,<span class="hljs-number">0x02</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD419</span>,<span class="hljs-number">0x00</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD41A</span>,<span class="hljs-number">0x02</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD41B</span>,<span class="hljs-number">0x01</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD41C</span>,<span class="hljs-number">0x02</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD41D</span>,<span class="hljs-number">0x34</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD41E</span>,<span class="hljs-number">0x02</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD41F</span>,<span class="hljs-number">0x67</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD420</span>,<span class="hljs-number">0x02</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD421</span>,<span class="hljs-number">0x84</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD422</span>,<span class="hljs-number">0x02</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD423</span>,<span class="hljs-number">0xA4</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD424</span>,<span class="hljs-number">0x02</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD425</span>,<span class="hljs-number">0xB7</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD426</span>,<span class="hljs-number">0x02</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD427</span>,<span class="hljs-number">0xCF</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD428</span>,<span class="hljs-number">0x02</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD429</span>,<span class="hljs-number">0xDE</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD42A</span>,<span class="hljs-number">0x02</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD42B</span>,<span class="hljs-number">0xF2</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD42C</span>,<span class="hljs-number">0x02</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD42D</span>,<span class="hljs-number">0xFE</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD42E</span>,<span class="hljs-number">0x03</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD42F</span>,<span class="hljs-number">0x10</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD430</span>,<span class="hljs-number">0x03</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD431</span>,<span class="hljs-number">0x33</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD432</span>,<span class="hljs-number">0x03</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD433</span>,<span class="hljs-number">0x6D</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD500</span>,<span class="hljs-number">0x00</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD501</span>,<span class="hljs-number">0x33</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD502</span>,<span class="hljs-number">0x00</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD503</span>,<span class="hljs-number">0x34</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD504</span>,<span class="hljs-number">0x00</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD505</span>,<span class="hljs-number">0x3A</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD506</span>,<span class="hljs-number">0x00</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD507</span>,<span class="hljs-number">0x4A</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD508</span>,<span class="hljs-number">0x00</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD509</span>,<span class="hljs-number">0x5C</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD50A</span>,<span class="hljs-number">0x00</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD50B</span>,<span class="hljs-number">0x81</span>);<br> <br>        LCD_WriteReg(<span class="hljs-number">0xD50C</span>,<span class="hljs-number">0x00</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD50D</span>,<span class="hljs-number">0xA6</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD50E</span>,<span class="hljs-number">0x00</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD50F</span>,<span class="hljs-number">0xE5</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD510</span>,<span class="hljs-number">0x01</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD511</span>,<span class="hljs-number">0x13</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD512</span>,<span class="hljs-number">0x01</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD513</span>,<span class="hljs-number">0x54</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD514</span>,<span class="hljs-number">0x01</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD515</span>,<span class="hljs-number">0x82</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD516</span>,<span class="hljs-number">0x01</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD517</span>,<span class="hljs-number">0xCA</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD518</span>,<span class="hljs-number">0x02</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD519</span>,<span class="hljs-number">0x00</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD51A</span>,<span class="hljs-number">0x02</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD51B</span>,<span class="hljs-number">0x01</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD51C</span>,<span class="hljs-number">0x02</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD51D</span>,<span class="hljs-number">0x34</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD51E</span>,<span class="hljs-number">0x02</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD51F</span>,<span class="hljs-number">0x67</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD520</span>,<span class="hljs-number">0x02</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD521</span>,<span class="hljs-number">0x84</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD522</span>,<span class="hljs-number">0x02</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD523</span>,<span class="hljs-number">0xA4</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD524</span>,<span class="hljs-number">0x02</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD525</span>,<span class="hljs-number">0xB7</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD526</span>,<span class="hljs-number">0x02</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD527</span>,<span class="hljs-number">0xCF</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD528</span>,<span class="hljs-number">0x02</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD529</span>,<span class="hljs-number">0xDE</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD52A</span>,<span class="hljs-number">0x02</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD52B</span>,<span class="hljs-number">0xF2</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD52C</span>,<span class="hljs-number">0x02</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD52D</span>,<span class="hljs-number">0xFE</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD52E</span>,<span class="hljs-number">0x03</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD52F</span>,<span class="hljs-number">0x10</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD530</span>,<span class="hljs-number">0x03</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD531</span>,<span class="hljs-number">0x33</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD532</span>,<span class="hljs-number">0x03</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD533</span>,<span class="hljs-number">0x6D</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD600</span>,<span class="hljs-number">0x00</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD601</span>,<span class="hljs-number">0x33</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD602</span>,<span class="hljs-number">0x00</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD603</span>,<span class="hljs-number">0x34</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD604</span>,<span class="hljs-number">0x00</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD605</span>,<span class="hljs-number">0x3A</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD606</span>,<span class="hljs-number">0x00</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD607</span>,<span class="hljs-number">0x4A</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD608</span>,<span class="hljs-number">0x00</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD609</span>,<span class="hljs-number">0x5C</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD60A</span>,<span class="hljs-number">0x00</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD60B</span>,<span class="hljs-number">0x81</span>);<br> <br>        LCD_WriteReg(<span class="hljs-number">0xD60C</span>,<span class="hljs-number">0x00</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD60D</span>,<span class="hljs-number">0xA6</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD60E</span>,<span class="hljs-number">0x00</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD60F</span>,<span class="hljs-number">0xE5</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD610</span>,<span class="hljs-number">0x01</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD611</span>,<span class="hljs-number">0x13</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD612</span>,<span class="hljs-number">0x01</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD613</span>,<span class="hljs-number">0x54</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD614</span>,<span class="hljs-number">0x01</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD615</span>,<span class="hljs-number">0x82</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD616</span>,<span class="hljs-number">0x01</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD617</span>,<span class="hljs-number">0xCA</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD618</span>,<span class="hljs-number">0x02</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD619</span>,<span class="hljs-number">0x00</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD61A</span>,<span class="hljs-number">0x02</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD61B</span>,<span class="hljs-number">0x01</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD61C</span>,<span class="hljs-number">0x02</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD61D</span>,<span class="hljs-number">0x34</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD61E</span>,<span class="hljs-number">0x02</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD61F</span>,<span class="hljs-number">0x67</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD620</span>,<span class="hljs-number">0x02</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD621</span>,<span class="hljs-number">0x84</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD622</span>,<span class="hljs-number">0x02</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD623</span>,<span class="hljs-number">0xA4</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD624</span>,<span class="hljs-number">0x02</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD625</span>,<span class="hljs-number">0xB7</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD626</span>,<span class="hljs-number">0x02</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD627</span>,<span class="hljs-number">0xCF</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD628</span>,<span class="hljs-number">0x02</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD629</span>,<span class="hljs-number">0xDE</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD62A</span>,<span class="hljs-number">0x02</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD62B</span>,<span class="hljs-number">0xF2</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD62C</span>,<span class="hljs-number">0x02</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD62D</span>,<span class="hljs-number">0xFE</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD62E</span>,<span class="hljs-number">0x03</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD62F</span>,<span class="hljs-number">0x10</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD630</span>,<span class="hljs-number">0x03</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD631</span>,<span class="hljs-number">0x33</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD632</span>,<span class="hljs-number">0x03</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xD633</span>,<span class="hljs-number">0x6D</span>);<br>        <span class="hljs-comment">//LV2 Page 0 enable</span><br>        LCD_WriteReg(<span class="hljs-number">0xF000</span>,<span class="hljs-number">0x55</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xF001</span>,<span class="hljs-number">0xAA</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xF002</span>,<span class="hljs-number">0x52</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xF003</span>,<span class="hljs-number">0x08</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xF004</span>,<span class="hljs-number">0x00</span>);<br>        <span class="hljs-comment">//Display control</span><br>        LCD_WriteReg(<span class="hljs-number">0xB100</span>, <span class="hljs-number">0xCC</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xB101</span>, <span class="hljs-number">0x00</span>);<br>        <span class="hljs-comment">//Source hold time</span><br>        LCD_WriteReg(<span class="hljs-number">0xB600</span>,<span class="hljs-number">0x05</span>);<br>        <span class="hljs-comment">//Gate EQ control</span><br>        LCD_WriteReg(<span class="hljs-number">0xB700</span>,<span class="hljs-number">0x70</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xB701</span>,<span class="hljs-number">0x70</span>);<br>        <span class="hljs-comment">//Source EQ control (Mode 2)</span><br>        LCD_WriteReg(<span class="hljs-number">0xB800</span>,<span class="hljs-number">0x01</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xB801</span>,<span class="hljs-number">0x03</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xB802</span>,<span class="hljs-number">0x03</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xB803</span>,<span class="hljs-number">0x03</span>);<br>        <span class="hljs-comment">//Inversion mode (2-dot)</span><br>        LCD_WriteReg(<span class="hljs-number">0xBC00</span>,<span class="hljs-number">0x02</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xBC01</span>,<span class="hljs-number">0x00</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xBC02</span>,<span class="hljs-number">0x00</span>);<br>        <span class="hljs-comment">//Timing control 4H w/ 4-delay</span><br>        LCD_WriteReg(<span class="hljs-number">0xC900</span>,<span class="hljs-number">0xD0</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xC901</span>,<span class="hljs-number">0x02</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xC902</span>,<span class="hljs-number">0x50</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xC903</span>,<span class="hljs-number">0x50</span>);<br>        LCD_WriteReg(<span class="hljs-number">0xC904</span>,<span class="hljs-number">0x50</span>);<br>        LCD_WriteReg(<span class="hljs-number">0x3500</span>,<span class="hljs-number">0x00</span>);<br>        LCD_WriteReg(<span class="hljs-number">0x3A00</span>,<span class="hljs-number">0x55</span>);  <span class="hljs-comment">//16-bit/pixel</span><br>        LCD_WR_REG(<span class="hljs-number">0x1100</span>);<br>        delay_us(<span class="hljs-number">120</span>);<br>        LCD_WR_REG(<span class="hljs-number">0x2900</span>);<br>    &#125;<br>    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(lcddev.id==<span class="hljs-number">0X1963</span>)<br>    &#123;<br>        LCD_WR_REG(<span class="hljs-number">0xE2</span>);<span class="hljs-comment">//Set PLL with OSC = 10MHz (hardware),Multiplier N = 35, 250MHz &lt; VCO &lt; 800MHz = OSC*(N+1), VCO = 300MHz</span><br>        LCD_WR_DATA(<span class="hljs-number">0x1D</span>);<span class="hljs-comment">//参数1</span><br>        LCD_WR_DATA(<span class="hljs-number">0x02</span>);<span class="hljs-comment">//参数2 Divider M = 2, PLL = 300/(M+1) = 100MHz</span><br>        LCD_WR_DATA(<span class="hljs-number">0x04</span>);<span class="hljs-comment">//参数3 Validate M and N values</span><br>        delay_us(<span class="hljs-number">100</span>);<br>        LCD_WR_REG(<span class="hljs-number">0xE0</span>);<span class="hljs-comment">// Start PLL command</span><br>        LCD_WR_DATA(<span class="hljs-number">0x01</span>);<span class="hljs-comment">// enable PLL</span><br>        HAL_Delay(<span class="hljs-number">10</span>);<br>        LCD_WR_REG(<span class="hljs-number">0xE0</span>);<span class="hljs-comment">// Start PLL command again</span><br>        LCD_WR_DATA(<span class="hljs-number">0x03</span>);<span class="hljs-comment">// now, use PLL output as system clock</span><br>        HAL_Delay(<span class="hljs-number">12</span>);<br>        LCD_WR_REG(<span class="hljs-number">0x01</span>);<span class="hljs-comment">//软复位</span><br>        HAL_Delay(<span class="hljs-number">10</span>);<br> <br>        LCD_WR_REG(<span class="hljs-number">0xE6</span>);<span class="hljs-comment">//设置像素频率,33Mhz</span><br>        LCD_WR_DATA(<span class="hljs-number">0x2F</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0xFF</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0xFF</span>);<br> <br>        LCD_WR_REG(<span class="hljs-number">0xB0</span>);<span class="hljs-comment">//设置LCD模式</span><br>        LCD_WR_DATA(<span class="hljs-number">0x20</span>);<span class="hljs-comment">//24位模式</span><br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<span class="hljs-comment">//TFT 模式</span><br> <br>        LCD_WR_DATA((SSD_HOR_RESOLUTION<span class="hljs-number">-1</span>)&gt;&gt;<span class="hljs-number">8</span>);<span class="hljs-comment">//设置LCD水平像素</span><br>        LCD_WR_DATA(SSD_HOR_RESOLUTION<span class="hljs-number">-1</span>);<br>        LCD_WR_DATA((SSD_VER_RESOLUTION<span class="hljs-number">-1</span>)&gt;&gt;<span class="hljs-number">8</span>);<span class="hljs-comment">//设置LCD垂直像素</span><br>        LCD_WR_DATA(SSD_VER_RESOLUTION<span class="hljs-number">-1</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<span class="hljs-comment">//RGB序列</span><br> <br>        LCD_WR_REG(<span class="hljs-number">0xB4</span>);<span class="hljs-comment">//Set horizontal period</span><br>        LCD_WR_DATA((SSD_HT<span class="hljs-number">-1</span>)&gt;&gt;<span class="hljs-number">8</span>);<br>        LCD_WR_DATA(SSD_HT<span class="hljs-number">-1</span>);<br>        LCD_WR_DATA(SSD_HPS&gt;&gt;<span class="hljs-number">8</span>);<br>        LCD_WR_DATA(SSD_HPS);<br>        LCD_WR_DATA(SSD_HOR_PULSE_WIDTH<span class="hljs-number">-1</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_REG(<span class="hljs-number">0xB6</span>);<span class="hljs-comment">//Set vertical period</span><br>        LCD_WR_DATA((SSD_VT<span class="hljs-number">-1</span>)&gt;&gt;<span class="hljs-number">8</span>);<br>        LCD_WR_DATA(SSD_VT<span class="hljs-number">-1</span>);<br>        LCD_WR_DATA(SSD_VPS&gt;&gt;<span class="hljs-number">8</span>);<br>        LCD_WR_DATA(SSD_VPS);<br>        LCD_WR_DATA(SSD_VER_FRONT_PORCH<span class="hljs-number">-1</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<br> <br>        LCD_WR_REG(<span class="hljs-number">0xF0</span>);<span class="hljs-comment">//设置SSD1963与CPU接口为16bit</span><br>        LCD_WR_DATA(<span class="hljs-number">0x03</span>);<span class="hljs-comment">//16-bit(565 format) data for 16bpp</span><br> <br>        LCD_WR_REG(<span class="hljs-number">0x29</span>);<span class="hljs-comment">//开启显示</span><br>        <span class="hljs-comment">//设置PWM输出  背光通过占空比可调</span><br>        LCD_WR_REG(<span class="hljs-number">0xD0</span>);<span class="hljs-comment">//设置自动白平衡DBC</span><br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<span class="hljs-comment">//disable</span><br> <br>        LCD_WR_REG(<span class="hljs-number">0xBE</span>);<span class="hljs-comment">//配置PWM输出</span><br>        LCD_WR_DATA(<span class="hljs-number">0x05</span>);<span class="hljs-comment">//1设置PWM频率</span><br>        LCD_WR_DATA(<span class="hljs-number">0xFE</span>);<span class="hljs-comment">//2设置PWM占空比</span><br>        LCD_WR_DATA(<span class="hljs-number">0x01</span>);<span class="hljs-comment">//3设置C</span><br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<span class="hljs-comment">//4设置D</span><br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<span class="hljs-comment">//5设置E</span><br>        LCD_WR_DATA(<span class="hljs-number">0x00</span>);<span class="hljs-comment">//6设置F</span><br> <br>        LCD_WR_REG(<span class="hljs-number">0xB8</span>);<span class="hljs-comment">//设置GPIO配置</span><br>        LCD_WR_DATA(<span class="hljs-number">0x03</span>);<span class="hljs-comment">//2个IO口设置成输出</span><br>        LCD_WR_DATA(<span class="hljs-number">0x01</span>);<span class="hljs-comment">//GPIO使用正常的IO功能</span><br>        LCD_WR_REG(<span class="hljs-number">0xBA</span>);<br>        LCD_WR_DATA(<span class="hljs-number">0X01</span>);<span class="hljs-comment">//GPIO[1:0]=01,控制LCD方向</span><br> <br>        LCD_SSD_BackLightSet(<span class="hljs-number">100</span>);<span class="hljs-comment">//背光设置为最亮</span><br>    &#125;<br>    <span class="hljs-comment">//初始化完成以后,提速</span><br>    <span class="hljs-keyword">if</span>(lcddev.id==<span class="hljs-number">0X9341</span>||lcddev.id==<span class="hljs-number">0X5310</span>||lcddev.id==<span class="hljs-number">0X5510</span>||lcddev.id==<span class="hljs-number">0X1963</span>)<span class="hljs-comment">//如果是这几个IC,则设置WR时序为最快</span><br>    &#123;<br>        <span class="hljs-comment">//重新配置写时序控制寄存器的时序</span><br>        FSMC_Bank1E-&gt;BWTR[<span class="hljs-number">6</span>]&amp;=~(<span class="hljs-number">0XF</span>&lt;&lt;<span class="hljs-number">0</span>);<span class="hljs-comment">//地址建立时间(ADDSET)清零</span><br>        FSMC_Bank1E-&gt;BWTR[<span class="hljs-number">6</span>]&amp;=~(<span class="hljs-number">0XF</span>&lt;&lt;<span class="hljs-number">8</span>);<span class="hljs-comment">//数据保存时间清零</span><br>        FSMC_Bank1E-&gt;BWTR[<span class="hljs-number">6</span>]|=<span class="hljs-number">3</span>&lt;&lt;<span class="hljs-number">0</span>;<span class="hljs-comment">//地址建立时间(ADDSET)为3个HCLK =18ns</span><br>        FSMC_Bank1E-&gt;BWTR[<span class="hljs-number">6</span>]|=<span class="hljs-number">2</span>&lt;&lt;<span class="hljs-number">8</span>; <span class="hljs-comment">//数据保存时间(DATAST)为6ns*3个HCLK=18ns</span><br>    &#125;<br>    LCD_Display_Dir(<span class="hljs-number">0</span>);<span class="hljs-comment">//默认为竖屏</span><br>    HAL_GPIO_WritePin(LCD_BLK_GPIO_Port, LCD_BLK_Pin, GPIO_PIN_SET);<span class="hljs-comment">//点亮背光</span><br>    LCD_Clear(WHITE);<br>&#125;<br><span class="hljs-comment">//清屏函数</span><br><span class="hljs-comment">//color:要清屏的填充色</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">LCD_Clear</span><span class="hljs-params">(<span class="hljs-type">uint32_t</span> color)</span><br>&#123;<br>    <span class="hljs-type">uint32_t</span> index=<span class="hljs-number">0</span>;<br>    <span class="hljs-type">uint32_t</span> totalpoint=lcddev.width;<br>    totalpoint*=lcddev.height; <span class="hljs-comment">//得到总点数</span><br>    LCD_SetCursor(<span class="hljs-number">0x00</span>,<span class="hljs-number">0x0000</span>);<span class="hljs-comment">//设置光标位置</span><br>    LCD_WriteRAM_Prepare();     <span class="hljs-comment">//开始写入GRAM</span><br>    <span class="hljs-keyword">for</span>(index=<span class="hljs-number">0</span>; index&lt;totalpoint; index++)<br>    &#123;<br>        LCD-&gt;LCD_RAM=color;<br>    &#125;<br>&#125;<br> <br><span class="hljs-comment">//在指定区域内填充单个颜色</span><br><span class="hljs-comment">//(sx,sy),(ex,ey):填充矩形对角坐标,区域大小为:(ex-sx+1)*(ey-sy+1)</span><br><span class="hljs-comment">//color:要填充的颜色</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">LCD_Fill</span><span class="hljs-params">(<span class="hljs-type">uint16_t</span> sx,<span class="hljs-type">uint16_t</span> sy,<span class="hljs-type">uint16_t</span> ex,<span class="hljs-type">uint16_t</span> ey,<span class="hljs-type">uint32_t</span> color)</span><br>&#123;<br>    <span class="hljs-type">uint16_t</span> i,j;<br>    <span class="hljs-type">uint16_t</span> xlen=<span class="hljs-number">0</span>;<br>    xlen=ex-sx+<span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">for</span>(i=sy; i&lt;=ey; i++)<br>    &#123;<br>        LCD_SetCursor(sx,i);      <span class="hljs-comment">//设置光标位置</span><br>        LCD_WriteRAM_Prepare();     <span class="hljs-comment">//开始写入GRAM</span><br>        <span class="hljs-keyword">for</span> (j = <span class="hljs-number">0</span>; j &lt; xlen; j++)<br>        &#123;<br>            LCD-&gt;LCD_RAM=color;     <span class="hljs-comment">//设置光标位置</span><br>        &#125;<br>    &#125;<br>&#125;<br> <br><span class="hljs-comment">//在指定区域内填充指定颜色块</span><br><span class="hljs-comment">//(sx,sy),(ex,ey):填充矩形对角坐标,区域大小为:(ex-sx+1)*(ey-sy+1)</span><br><span class="hljs-comment">//color:要填充的颜色</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">LCD_Color_Fill</span><span class="hljs-params">(<span class="hljs-type">uint16_t</span> sx,<span class="hljs-type">uint16_t</span> sy,<span class="hljs-type">uint16_t</span> ex,<span class="hljs-type">uint16_t</span> ey,<span class="hljs-type">uint16_t</span> *color)</span><br>&#123;<br>    <span class="hljs-type">uint16_t</span> height,width;<br>    <span class="hljs-type">uint16_t</span> i,j;<br>    width=ex-sx+<span class="hljs-number">1</span>; <span class="hljs-comment">//得到填充的宽度</span><br>    height=ey-sy+<span class="hljs-number">1</span>;<span class="hljs-comment">//高度</span><br>    <span class="hljs-keyword">for</span>(i=<span class="hljs-number">0</span>; i&lt;height; i++)<br>    &#123;<br>        LCD_SetCursor(sx,sy+i);   <span class="hljs-comment">//设置光标位置</span><br>        LCD_WriteRAM_Prepare();     <span class="hljs-comment">//开始写入GRAM</span><br>        <span class="hljs-keyword">for</span> (j = <span class="hljs-number">0</span>; j &lt; width; j++)<br>        &#123;<br>            LCD-&gt;LCD_RAM=color[i * width + j];  <span class="hljs-comment">//写入数据</span><br>        &#125;<br>    &#125;<br>&#125;<br> <br><span class="hljs-comment">//画线</span><br><span class="hljs-comment">//x1,y1:起点坐标</span><br><span class="hljs-comment">//x2,y2:终点坐标</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">LCD_DrawLine</span><span class="hljs-params">(<span class="hljs-type">uint16_t</span> x1, <span class="hljs-type">uint16_t</span> y1, <span class="hljs-type">uint16_t</span> x2, <span class="hljs-type">uint16_t</span> y2)</span><br>&#123;<br>    <span class="hljs-type">uint16_t</span> t;<br>    <span class="hljs-type">int</span> xerr = <span class="hljs-number">0</span>, yerr = <span class="hljs-number">0</span>, delta_x, delta_y, distance;<br>    <span class="hljs-type">int</span> incx, incy, uRow, uCol;<br>    delta_x = x2 - x1;              <span class="hljs-comment">//计算坐标增量</span><br>    delta_y = y2 - y1;<br>    uRow = x1;<br>    uCol = y1;<br> <br>    <span class="hljs-keyword">if</span> (delta_x &gt; <span class="hljs-number">0</span>)incx = <span class="hljs-number">1</span>;       <span class="hljs-comment">//设置单步方向</span><br>    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (delta_x == <span class="hljs-number">0</span>)incx = <span class="hljs-number">0</span>; <span class="hljs-comment">//垂直线</span><br>    <span class="hljs-keyword">else</span><br>    &#123;<br>        incx = <span class="hljs-number">-1</span>;<br>        delta_x = -delta_x;<br>    &#125;<br> <br>    <span class="hljs-keyword">if</span> (delta_y &gt; <span class="hljs-number">0</span>)incy = <span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (delta_y == <span class="hljs-number">0</span>)incy = <span class="hljs-number">0</span>; <span class="hljs-comment">//水平线</span><br>    <span class="hljs-keyword">else</span><br>    &#123;<br>        incy = <span class="hljs-number">-1</span>;<br>        delta_y = -delta_y;<br>    &#125;<br> <br>    <span class="hljs-keyword">if</span> ( delta_x &gt; delta_y)distance = delta_x; <span class="hljs-comment">//选取基本增量坐标轴</span><br>    <span class="hljs-keyword">else</span> distance = delta_y;<br> <br>    <span class="hljs-keyword">for</span> (t = <span class="hljs-number">0</span>; t &lt;= distance + <span class="hljs-number">1</span>; t++ )    <span class="hljs-comment">//画线输出</span><br>    &#123;<br>        LCD_DrawPoint(uRow, uCol); <span class="hljs-comment">//画点</span><br>        xerr += delta_x ;<br>        yerr += delta_y ;<br> <br>        <span class="hljs-keyword">if</span> (xerr &gt; distance)<br>        &#123;<br>            xerr -= distance;<br>            uRow += incx;<br>        &#125;<br> <br>        <span class="hljs-keyword">if</span> (yerr &gt; distance)<br>        &#123;<br>            yerr -= distance;<br>            uCol += incy;<br>        &#125;<br>    &#125;<br>&#125;<br> <br><span class="hljs-comment">//画矩形</span><br><span class="hljs-comment">//(x1,y1),(x2,y2):矩形的对角坐标</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">LCD_DrawRectangle</span><span class="hljs-params">(<span class="hljs-type">uint16_t</span> x1, <span class="hljs-type">uint16_t</span> y1, <span class="hljs-type">uint16_t</span> x2, <span class="hljs-type">uint16_t</span> y2)</span><br>&#123;<br>    LCD_DrawLine(x1,y1,x2,y1);<br>    LCD_DrawLine(x1,y1,x1,y2);<br>    LCD_DrawLine(x1,y2,x2,y2);<br>    LCD_DrawLine(x2,y1,x2,y2);<br>&#125;<br> <br><span class="hljs-comment">//在指定位置画一个指定大小的圆</span><br><span class="hljs-comment">//(x,y):中心点</span><br><span class="hljs-comment">//r    :半径</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">LCD_Draw_Circle</span><span class="hljs-params">(<span class="hljs-type">uint16_t</span> x0,<span class="hljs-type">uint16_t</span> y0,<span class="hljs-type">uint8_t</span> r)</span><br>&#123;<br>    <span class="hljs-type">int</span> a, b;<br>    <span class="hljs-type">int</span> di;<br>    a = <span class="hljs-number">0</span>;<br>    b = r;<br>    di = <span class="hljs-number">3</span> - (r &lt;&lt; <span class="hljs-number">1</span>);       <span class="hljs-comment">//判断下个点位置的标志</span><br> <br>    <span class="hljs-keyword">while</span> (a &lt;= b)<br>    &#123;<br>        LCD_DrawPoint(x0 + a, y0 - b);        <span class="hljs-comment">//5</span><br>        LCD_DrawPoint(x0 + b, y0 - a);        <span class="hljs-comment">//0</span><br>        LCD_DrawPoint(x0 + b, y0 + a);        <span class="hljs-comment">//4</span><br>        LCD_DrawPoint(x0 + a, y0 + b);        <span class="hljs-comment">//6</span><br>        LCD_DrawPoint(x0 - a, y0 + b);        <span class="hljs-comment">//1</span><br>        LCD_DrawPoint(x0 - b, y0 + a);<br>        LCD_DrawPoint(x0 - a, y0 - b);        <span class="hljs-comment">//2</span><br>        LCD_DrawPoint(x0 - b, y0 - a);        <span class="hljs-comment">//7</span><br>        a++;<br> <br>        <span class="hljs-comment">//使用Bresenham算法画圆</span><br>        <span class="hljs-keyword">if</span> (di &lt; <span class="hljs-number">0</span>)di += <span class="hljs-number">4</span> * a + <span class="hljs-number">6</span>;<br>        <span class="hljs-keyword">else</span><br>        &#123;<br>            di += <span class="hljs-number">10</span> + <span class="hljs-number">4</span> * (a - b);<br>            b--;<br>        &#125;<br>    &#125;<br>&#125;<br> <br><span class="hljs-comment">//在指定位置显示一个字符</span><br><span class="hljs-comment">//x,y:起始坐标</span><br><span class="hljs-comment">//num:要显示的字符:&quot; &quot;---&gt;&quot;~&quot;</span><br><span class="hljs-comment">//size:字体大小 12/16/24/32</span><br><span class="hljs-comment">//mode:叠加方式(1)还是非叠加方式(0)</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">LCD_ShowChar</span><span class="hljs-params">(<span class="hljs-type">uint16_t</span> x,<span class="hljs-type">uint16_t</span> y,<span class="hljs-type">uint8_t</span> num,<span class="hljs-type">uint8_t</span> size,<span class="hljs-type">uint8_t</span> mode)</span><br>&#123;<br>    <span class="hljs-type">uint8_t</span> temp,t1,t;<br>    <span class="hljs-type">uint16_t</span> y0=y;<br>    <span class="hljs-type">uint8_t</span> csize=(size/<span class="hljs-number">8</span>+((size%<span class="hljs-number">8</span>)?<span class="hljs-number">1</span>:<span class="hljs-number">0</span>))*(size/<span class="hljs-number">2</span>);<span class="hljs-comment">//得到字体一个字符对应点阵集所占的字节数</span><br>    num=num-<span class="hljs-string">&#x27; &#x27;</span>;<span class="hljs-comment">//得到偏移后的值（ASCII字库是从空格开始取模，所以-&#x27; &#x27;就是对应字符的字库）</span><br>    <span class="hljs-keyword">for</span>(t=<span class="hljs-number">0</span>; t&lt;csize; t++)<br>    &#123;<br>        <span class="hljs-keyword">if</span>(size==<span class="hljs-number">12</span>)temp=asc2_1206[num][t];  <span class="hljs-comment">//调用1206字体</span><br>        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(size==<span class="hljs-number">16</span>)temp=asc2_1608[num][t];<span class="hljs-comment">//调用1608字体</span><br>        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(size==<span class="hljs-number">24</span>)temp=asc2_2412[num][t];<span class="hljs-comment">//调用2412字体</span><br>        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(size==<span class="hljs-number">32</span>)temp=asc2_3216[num][t];<span class="hljs-comment">//调用3216字体</span><br>        <span class="hljs-keyword">else</span> <span class="hljs-keyword">return</span>;<span class="hljs-comment">//没有的字库</span><br>        <span class="hljs-keyword">for</span>(t1=<span class="hljs-number">0</span>; t1&lt;<span class="hljs-number">8</span>; t1++)<br>        &#123;<br>            <span class="hljs-keyword">if</span>(temp&amp;<span class="hljs-number">0x80</span>)LCD_Fast_DrawPoint(x,y,POINT_COLOR);<br>            <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(mode==<span class="hljs-number">0</span>)LCD_Fast_DrawPoint(x,y,BACK_COLOR);<br>            temp&lt;&lt;=<span class="hljs-number">1</span>;<br>            y++;<br>            <span class="hljs-keyword">if</span>(y&gt;=lcddev.height)<span class="hljs-keyword">return</span>;<span class="hljs-comment">//超区域了</span><br>            <span class="hljs-keyword">if</span>((y-y0)==size)<br>            &#123;<br>                y=y0;<br>                x++;<br>                <span class="hljs-keyword">if</span>(x&gt;=lcddev.width)<span class="hljs-keyword">return</span>;<span class="hljs-comment">//超区域了</span><br>                <span class="hljs-keyword">break</span>;<br>            &#125;<br>        &#125;<br>    &#125;<br>&#125;<br> <br><span class="hljs-comment">//m^n函数，LCD显示数字内部使用</span><br><span class="hljs-comment">//返回值:m^n次方.</span><br><span class="hljs-type">uint32_t</span> _LCD_Pow(<span class="hljs-type">uint8_t</span> m,<span class="hljs-type">uint8_t</span> n)<br>&#123;<br>    <span class="hljs-type">uint32_t</span> result=<span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">while</span>(n--)result*=m;<br>    <span class="hljs-keyword">return</span> result;<br>&#125;<br> <br><span class="hljs-comment">//显示数字,高位为0,则不显示</span><br><span class="hljs-comment">//x,y :起点坐标</span><br><span class="hljs-comment">//len :数字的位数</span><br><span class="hljs-comment">//size:字体大小</span><br><span class="hljs-comment">//color:颜色</span><br><span class="hljs-comment">//num:数值(0~4294967295);</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">LCD_ShowNum</span><span class="hljs-params">(<span class="hljs-type">uint16_t</span> x, <span class="hljs-type">uint16_t</span> y, <span class="hljs-type">uint32_t</span> num, <span class="hljs-type">uint8_t</span> len, <span class="hljs-type">uint8_t</span> size)</span><br>&#123;<br>    <span class="hljs-type">uint8_t</span> t, temp;<br>    <span class="hljs-type">uint8_t</span> enshow = <span class="hljs-number">0</span>;<br> <br>    <span class="hljs-keyword">for</span> (t = <span class="hljs-number">0</span>; t &lt; len; t++)<br>    &#123;<br>        temp = (num / _LCD_Pow(<span class="hljs-number">10</span>, len - t - <span class="hljs-number">1</span>)) % <span class="hljs-number">10</span>;<br> <br>        <span class="hljs-keyword">if</span> (enshow == <span class="hljs-number">0</span> &amp;&amp; t &lt; (len - <span class="hljs-number">1</span>))<br>        &#123;<br>            <span class="hljs-keyword">if</span> (temp == <span class="hljs-number">0</span>)<br>            &#123;<br>                LCD_ShowChar(x + (size / <span class="hljs-number">2</span>)*t, y, <span class="hljs-string">&#x27; &#x27;</span>, size, <span class="hljs-number">0</span>);<br>                <span class="hljs-keyword">continue</span>;<br>            &#125;<br>            <span class="hljs-keyword">else</span> enshow = <span class="hljs-number">1</span>;<br> <br>        &#125;<br> <br>        LCD_ShowChar(x + (size / <span class="hljs-number">2</span>)*t, y, temp + <span class="hljs-string">&#x27;0&#x27;</span>, size, <span class="hljs-number">0</span>);<br>    &#125;<br>&#125;<br> <br><span class="hljs-comment">//显示数字,高位为0,还是显示</span><br><span class="hljs-comment">//x,y:起点坐标</span><br><span class="hljs-comment">//num:数值(0~999999999);</span><br><span class="hljs-comment">//len:长度(即要显示的位数)</span><br><span class="hljs-comment">//size:字体大小</span><br><span class="hljs-comment">//mode:</span><br><span class="hljs-comment">//[7]:0,不填充;1,填充0.</span><br><span class="hljs-comment">//[6:1]:保留</span><br><span class="hljs-comment">//[0]:0,非叠加显示;1,叠加显示.</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">LCD_ShowxNum</span><span class="hljs-params">(<span class="hljs-type">uint16_t</span> x,<span class="hljs-type">uint16_t</span> y,<span class="hljs-type">uint32_t</span> num,<span class="hljs-type">uint8_t</span> len,<span class="hljs-type">uint8_t</span> size,<span class="hljs-type">uint8_t</span> mode)</span><br>&#123;<br>    <span class="hljs-type">uint8_t</span> t,temp;<br>    <span class="hljs-type">uint8_t</span> enshow=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span>(t=<span class="hljs-number">0</span>; t&lt;len; t++)<br>    &#123;<br>        temp=(num/_LCD_Pow(<span class="hljs-number">10</span>,len-t<span class="hljs-number">-1</span>))%<span class="hljs-number">10</span>;<br>        <span class="hljs-keyword">if</span>(enshow==<span class="hljs-number">0</span>&amp;&amp;t&lt;(len<span class="hljs-number">-1</span>))<br>        &#123;<br>            <span class="hljs-keyword">if</span>(temp==<span class="hljs-number">0</span>)<br>            &#123;<br>                <span class="hljs-keyword">if</span>(mode&amp;<span class="hljs-number">0X80</span>)LCD_ShowChar(x+(size/<span class="hljs-number">2</span>)*t,y,<span class="hljs-string">&#x27;0&#x27;</span>,size,mode&amp;<span class="hljs-number">0X01</span>);<br>                <span class="hljs-keyword">else</span> LCD_ShowChar(x+(size/<span class="hljs-number">2</span>)*t,y,<span class="hljs-string">&#x27; &#x27;</span>,size,mode&amp;<span class="hljs-number">0X01</span>);<br>                <span class="hljs-keyword">continue</span>;<br>            &#125; <span class="hljs-keyword">else</span> enshow=<span class="hljs-number">1</span>;<br> <br>        &#125;<br>        LCD_ShowChar(x+(size/<span class="hljs-number">2</span>)*t,y,temp+<span class="hljs-string">&#x27;0&#x27;</span>,size,mode&amp;<span class="hljs-number">0X01</span>);<br>    &#125;<br>&#125;<br> <br><span class="hljs-comment">//显示字符串</span><br><span class="hljs-comment">//x,y:起点坐标</span><br><span class="hljs-comment">//width,height:区域大小</span><br><span class="hljs-comment">//size:字体大小</span><br><span class="hljs-comment">//*p:字符串起始地址</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">LCD_ShowString</span><span class="hljs-params">(<span class="hljs-type">uint16_t</span> x, <span class="hljs-type">uint16_t</span> y, <span class="hljs-type">uint16_t</span> width, <span class="hljs-type">uint16_t</span> height, <span class="hljs-type">uint8_t</span> size, <span class="hljs-type">uint8_t</span> *p)</span><br>&#123;<br>    <span class="hljs-type">uint8_t</span> x0 = x;<br>    width += x;<br>    height += y;<br> <br>    <span class="hljs-keyword">while</span> ((*p &lt;= <span class="hljs-string">&#x27;~&#x27;</span>) &amp;&amp; (*p &gt;= <span class="hljs-string">&#x27; &#x27;</span>))   <span class="hljs-comment">//判断是不是非法字符!</span><br>    &#123;<br>        <span class="hljs-keyword">if</span> (x &gt;= width)<br>        &#123;<br>            x = x0;<br>            y += size;<br>        &#125;<br> <br>        <span class="hljs-keyword">if</span> (y &gt;= height)<span class="hljs-keyword">break</span>; <span class="hljs-comment">//退出</span><br> <br>        LCD_ShowChar(x, y, *p, size, <span class="hljs-number">0</span>);<br>        x += size / <span class="hljs-number">2</span>;<br>        p++;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></details><p><strong>tftlcd.h文件</strong></p><details><summary>点击查看代码</summary><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">ifndef</span> __TFTLCD_H</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> __TFTLCD_H</span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;main.h&quot;</span> </span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;stdlib.h&quot;</span> </span><br><span class="hljs-comment">// </span><br><span class="hljs-comment">//本程序只供学习使用，未经作者许可，不得用于其它任何用途</span><br><span class="hljs-comment">//ALIENTEK STM32开发板</span><br><span class="hljs-comment">//2.8寸/3.5寸/4.3寸/7寸 TFT液晶驱动  </span><br><span class="hljs-comment">//支持驱动IC型号包括:ILI9341/NT35310/NT35510/SSD1963等    </span><br><span class="hljs-comment">//正点原子@ALIENTEK</span><br><span class="hljs-comment">//技术论坛:www.openedv.com</span><br><span class="hljs-comment">//创建日期:2017/4/8</span><br><span class="hljs-comment">//版本：V4.0</span><br><span class="hljs-comment">//版权所有，盗版必究。</span><br><span class="hljs-comment">//Copyright(C) 广州市星翼电子科技有限公司 2014-2024</span><br><span class="hljs-comment">//All rights reserved</span><br><span class="hljs-comment">//******************************************************************************* </span><br><span class="hljs-comment">//修改说明</span><br><span class="hljs-comment">//V4.0 20211111</span><br><span class="hljs-comment">//1，去掉大部分不常用驱动IC的支持</span><br><span class="hljs-comment">//2，新增对ST7789驱动IC的支持</span><br><span class="hljs-comment">//3，优化代码结构（精简源码）</span><br><span class="hljs-comment">// </span><br> <br><span class="hljs-comment">//LCD重要参数集</span><br><span class="hljs-keyword">typedef</span> <span class="hljs-class"><span class="hljs-keyword">struct</span>  </span><br><span class="hljs-class">&#123;</span>  <br><span class="hljs-type">uint16_t</span> width;<span class="hljs-comment">//LCD 宽度</span><br><span class="hljs-type">uint16_t</span> height; <span class="hljs-comment">//LCD 高度</span><br><span class="hljs-type">uint16_t</span> id;<span class="hljs-comment">//LCD ID</span><br><span class="hljs-type">uint8_t</span>  dir;<span class="hljs-comment">//横屏还是竖屏控制：0，竖屏；1，横屏。</span><br><span class="hljs-type">uint16_t</span> wramcmd;<span class="hljs-comment">//开始写gram指令</span><br><span class="hljs-type">uint16_t</span> setxcmd;<span class="hljs-comment">//设置x坐标指令</span><br><span class="hljs-type">uint16_t</span> setycmd;<span class="hljs-comment">//设置y坐标指令 </span><br>&#125;_lcd_dev;   <br> <br><span class="hljs-comment">//LCD参数</span><br><span class="hljs-keyword">extern</span> _lcd_dev lcddev;<span class="hljs-comment">//管理LCD重要参数</span><br><span class="hljs-comment">//LCD的画笔颜色和背景色   </span><br><span class="hljs-keyword">extern</span> <span class="hljs-type">uint32_t</span> POINT_COLOR;<span class="hljs-comment">//默认红色    </span><br><span class="hljs-keyword">extern</span> <span class="hljs-type">uint32_t</span> BACK_COLOR; <span class="hljs-comment">//背景颜色.默认为白色</span><br> <br><span class="hljs-comment">// </span><br><span class="hljs-comment">//-----------------MCU屏 LCD端口定义----------------  </span><br><span class="hljs-comment">//LCD地址结构体</span><br><span class="hljs-keyword">typedef</span> <span class="hljs-class"><span class="hljs-keyword">struct</span></span><br><span class="hljs-class">&#123;</span><br><span class="hljs-keyword">volatile</span> <span class="hljs-type">uint16_t</span> LCD_REG;<br><span class="hljs-keyword">volatile</span> <span class="hljs-type">uint16_t</span> LCD_RAM;<br>&#125; LCD_TypeDef;<br>    <br><span class="hljs-meta">#<span class="hljs-keyword">define</span> LCD_BASE ((uint32_t)(0x6C000000 | 0x0000007E))</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> LCD ((LCD_TypeDef *) LCD_BASE)</span><br><span class="hljs-comment">//</span><br><span class="hljs-comment">//LCD分辨率设置</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> SSD_HOR_RESOLUTION800<span class="hljs-comment">//LCD水平分辨率</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> SSD_VER_RESOLUTION480<span class="hljs-comment">//LCD垂直分辨率 </span></span><br> <br><span class="hljs-comment">//扫描方向定义</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> L2R_U2D  0 <span class="hljs-comment">//从左到右,从上到下</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> L2R_D2U  1 <span class="hljs-comment">//从左到右,从下到上</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> R2L_U2D  2 <span class="hljs-comment">//从右到左,从上到下</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> R2L_D2U  3 <span class="hljs-comment">//从右到左,从下到上</span></span><br> <br><span class="hljs-meta">#<span class="hljs-keyword">define</span> U2D_L2R  4 <span class="hljs-comment">//从上到下,从左到右</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> U2D_R2L  5 <span class="hljs-comment">//从上到下,从右到左</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> D2U_L2R  6 <span class="hljs-comment">//从下到上,从左到右</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> D2U_R2L  7<span class="hljs-comment">//从下到上,从右到左 </span></span><br> <br><span class="hljs-meta">#<span class="hljs-keyword">define</span> DFT_SCAN_DIR  L2R_U2D  <span class="hljs-comment">//默认的扫描方向</span></span><br> <br><span class="hljs-comment">//画笔颜色</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> WHITE0xFFFF</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> BLACK0x0000  </span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> BLUE0x001F  </span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> BRED0XF81F</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> GRED0XFFE0</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> GBLUE0X07FF</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> RED0xF800</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> MAGENTA    0xF81F</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> GREEN0x07E0</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> CYAN0x7FFF</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> YELLOW    0xFFE0</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> BROWN0XBC40 <span class="hljs-comment">//棕色</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> BRRED0XFC07 <span class="hljs-comment">//棕红色</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> GRAY0X8430 <span class="hljs-comment">//灰色</span></span><br> <br><span class="hljs-comment">//GUI颜色</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> DARKBLUE    0X01CF<span class="hljs-comment">//深蓝色</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> LIGHTBLUE    0X7D7C<span class="hljs-comment">//浅蓝色  </span></span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> GRAYBLUE    0X5458 <span class="hljs-comment">//灰蓝色</span></span><br><span class="hljs-comment">//以上三色为PANEL的颜色 </span><br> <br><span class="hljs-meta">#<span class="hljs-keyword">define</span> LIGHTGREEN        0X841F <span class="hljs-comment">//浅绿色</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> LGRAY0XC618 <span class="hljs-comment">//浅灰色(PANNEL),窗体背景色</span></span><br> <br><span class="hljs-meta">#<span class="hljs-keyword">define</span> LGRAYBLUE    0XA651 <span class="hljs-comment">//浅灰蓝色(中间层颜色)</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> LBBLUE    0X2B12 <span class="hljs-comment">//浅棕蓝色(选择条目的反色)</span></span><br> <br><span class="hljs-comment">/*应用函数*/</span><br><span class="hljs-comment">//初始化     </span><br><span class="hljs-type">void</span> <span class="hljs-title function_">LCD_Init</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span>;<br><span class="hljs-comment">//开显示   </span><br><span class="hljs-type">void</span> <span class="hljs-title function_">LCD_DisplayOn</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span>;<br><span class="hljs-comment">//关显示</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">LCD_DisplayOff</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span>;<br><span class="hljs-comment">//清屏</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">LCD_Clear</span><span class="hljs-params">(<span class="hljs-type">uint32_t</span> Color)</span>; <br><span class="hljs-comment">//设置光标</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">LCD_SetCursor</span><span class="hljs-params">(<span class="hljs-type">uint16_t</span> Xpos, <span class="hljs-type">uint16_t</span> Ypos)</span>;<br><span class="hljs-comment">//画点</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">LCD_DrawPoint</span><span class="hljs-params">(<span class="hljs-type">uint16_t</span> x,<span class="hljs-type">uint16_t</span> y)</span>;<br><span class="hljs-comment">//快速画点</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">LCD_Fast_DrawPoint</span><span class="hljs-params">(<span class="hljs-type">uint16_t</span> x,<span class="hljs-type">uint16_t</span> y,<span class="hljs-type">uint32_t</span> color)</span>;<br><span class="hljs-comment">//读点 </span><br><span class="hljs-type">uint32_t</span> <span class="hljs-title function_">LCD_ReadPoint</span><span class="hljs-params">(<span class="hljs-type">uint16_t</span> x,<span class="hljs-type">uint16_t</span> y)</span>; <br><span class="hljs-comment">//画圆</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">LCD_Draw_Circle</span><span class="hljs-params">(<span class="hljs-type">uint16_t</span> x0,<span class="hljs-type">uint16_t</span> y0,<span class="hljs-type">uint8_t</span> r)</span>;<br><span class="hljs-comment">//画线 </span><br><span class="hljs-type">void</span> <span class="hljs-title function_">LCD_DrawLine</span><span class="hljs-params">(<span class="hljs-type">uint16_t</span> x1, <span class="hljs-type">uint16_t</span> y1, <span class="hljs-type">uint16_t</span> x2, <span class="hljs-type">uint16_t</span> y2)</span>;<br><span class="hljs-comment">//画矩形</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">LCD_DrawRectangle</span><span class="hljs-params">(<span class="hljs-type">uint16_t</span> x1, <span class="hljs-type">uint16_t</span> y1, <span class="hljs-type">uint16_t</span> x2, <span class="hljs-type">uint16_t</span> y2)</span>;<br><span class="hljs-comment">//填充单色   </span><br><span class="hljs-type">void</span> <span class="hljs-title function_">LCD_Fill</span><span class="hljs-params">(<span class="hljs-type">uint16_t</span> sx,<span class="hljs-type">uint16_t</span> sy,<span class="hljs-type">uint16_t</span> ex,<span class="hljs-type">uint16_t</span> ey,<span class="hljs-type">uint32_t</span> color)</span>;<br><span class="hljs-comment">//填充指定颜色   </span><br><span class="hljs-type">void</span> <span class="hljs-title function_">LCD_Color_Fill</span><span class="hljs-params">(<span class="hljs-type">uint16_t</span> sx,<span class="hljs-type">uint16_t</span> sy,<span class="hljs-type">uint16_t</span> ex,<span class="hljs-type">uint16_t</span> ey,<span class="hljs-type">uint16_t</span> *color)</span>;<br><span class="hljs-comment">//显示一个字符</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">LCD_ShowChar</span><span class="hljs-params">(<span class="hljs-type">uint16_t</span> x,<span class="hljs-type">uint16_t</span> y,<span class="hljs-type">uint8_t</span> num,<span class="hljs-type">uint8_t</span> size,<span class="hljs-type">uint8_t</span> mode)</span>;<br><span class="hljs-comment">//显示一个数字</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">LCD_ShowNum</span><span class="hljs-params">(<span class="hljs-type">uint16_t</span> x,<span class="hljs-type">uint16_t</span> y,<span class="hljs-type">uint32_t</span> num,<span class="hljs-type">uint8_t</span> len,<span class="hljs-type">uint8_t</span> size)</span>;  <br><span class="hljs-comment">//显示 数字</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">LCD_ShowxNum</span><span class="hljs-params">(<span class="hljs-type">uint16_t</span> x,<span class="hljs-type">uint16_t</span> y,<span class="hljs-type">uint32_t</span> num,<span class="hljs-type">uint8_t</span> len,<span class="hljs-type">uint8_t</span> size,<span class="hljs-type">uint8_t</span> mode)</span>;<br><span class="hljs-comment">//显示一个字符串,12/16字体</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">LCD_ShowString</span><span class="hljs-params">(<span class="hljs-type">uint16_t</span> x,<span class="hljs-type">uint16_t</span> y,<span class="hljs-type">uint16_t</span> width,<span class="hljs-type">uint16_t</span> height,<span class="hljs-type">uint8_t</span> size,<span class="hljs-type">uint8_t</span> *p)</span>;<br> <br><span class="hljs-comment">/*底层函数*/</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">LCD_WriteReg</span><span class="hljs-params">(<span class="hljs-type">uint16_t</span> LCD_Reg, <span class="hljs-type">uint16_t</span> LCD_RegValue)</span>;<br><span class="hljs-type">uint16_t</span> <span class="hljs-title function_">LCD_ReadReg</span><span class="hljs-params">(<span class="hljs-type">uint16_t</span> LCD_Reg)</span>;<br><span class="hljs-type">void</span> <span class="hljs-title function_">LCD_WriteRAM_Prepare</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span>;<br><span class="hljs-type">void</span> <span class="hljs-title function_">LCD_WriteRAM</span><span class="hljs-params">(<span class="hljs-type">uint16_t</span> RGB_Code)</span>;<br><span class="hljs-comment">//SSD1963 背光控制</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">LCD_SSD_BackLightSet</span><span class="hljs-params">(<span class="hljs-type">uint8_t</span> pwm)</span>;<br><span class="hljs-comment">//设置屏扫描方向</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">LCD_Scan_Dir</span><span class="hljs-params">(<span class="hljs-type">uint8_t</span> dir)</span>;<br><span class="hljs-comment">//设置屏幕显示方向</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">LCD_Display_Dir</span><span class="hljs-params">(<span class="hljs-type">uint8_t</span> dir)</span>;<br><span class="hljs-comment">//设置窗口</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">LCD_Set_Window</span><span class="hljs-params">(<span class="hljs-type">uint16_t</span> sx,<span class="hljs-type">uint16_t</span> sy,<span class="hljs-type">uint16_t</span> width,<span class="hljs-type">uint16_t</span> height)</span>;<br>       <br><span class="hljs-comment">//LCD驱动参数设置</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> SSD_HOR_PULSE_WIDTH1<span class="hljs-comment">//水平脉宽</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> SSD_HOR_BACK_PORCH46<span class="hljs-comment">//水平前廊</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> SSD_HOR_FRONT_PORCH210<span class="hljs-comment">//水平后廊</span></span><br> <br><span class="hljs-meta">#<span class="hljs-keyword">define</span> SSD_VER_PULSE_WIDTH1<span class="hljs-comment">//垂直脉宽</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> SSD_VER_BACK_PORCH23<span class="hljs-comment">//垂直前廊</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> SSD_VER_FRONT_PORCH22<span class="hljs-comment">//垂直前廊</span></span><br> <br><span class="hljs-comment">//如下几个参数，自动计算</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> SSD_HT(SSD_HOR_RESOLUTION+SSD_HOR_BACK_PORCH+SSD_HOR_FRONT_PORCH)</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> SSD_HPS(SSD_HOR_BACK_PORCH)</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> SSD_VT (SSD_VER_RESOLUTION+SSD_VER_BACK_PORCH+SSD_VER_FRONT_PORCH)</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> SSD_VPS (SSD_VER_BACK_PORCH)</span><br> <br><span class="hljs-meta">#<span class="hljs-keyword">endif</span>  </span><br></code></pre></td></tr></table></figure></details><p><strong>font.h文件</strong></p><details><summary>点击查看代码</summary><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">ifndef</span> __FONT_H</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> __FONT_H    </span><br><span class="hljs-comment">//常用ASCII表</span><br><span class="hljs-comment">//偏移量32 </span><br><span class="hljs-comment">//ASCII字符集: !&quot;#$%&amp;&#x27;()*+,-./0123456789:;&lt;=&gt;?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz&#123;|&#125;~</span><br><span class="hljs-comment">//PC2LCD2002取模方式设置：阴码+逐列式+顺向+C51格式</span><br><span class="hljs-comment">//总共：3个字符集（12*12、16*16、24*24和32*32），用户可以自行新增其他分辨率的字符集。</span><br><span class="hljs-comment">//每个字符所占用的字节数为:(size/8+((size%8)?1:0))*(size/2),其中size:是字库生成时的点阵大小(12/16/24/32...)</span><br> <br><span class="hljs-comment">//12*12 ASCII字符集点阵</span><br><span class="hljs-type">const</span> <span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> asc2_1206[<span class="hljs-number">95</span>][<span class="hljs-number">12</span>]=&#123;<br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot; &quot;,0*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;!&quot;,1*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x30</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x30</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;&quot;&quot;,2*/</span><br>&#123;<span class="hljs-number">0x09</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x0B</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x3D</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x0B</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x3D</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x09</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;#&quot;,3*/</span><br>&#123;<span class="hljs-number">0x18</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x24</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x7F</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x22</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x31</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;$&quot;,4*/</span><br>&#123;<span class="hljs-number">0x18</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x24</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x1B</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x0D</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x32</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x80</span>&#125;,<span class="hljs-comment">/*&quot;%&quot;,5*/</span><br>&#123;<span class="hljs-number">0x03</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x1C</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x27</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x1C</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x40</span>&#125;,<span class="hljs-comment">/*&quot;&amp;&quot;,6*/</span><br>&#123;<span class="hljs-number">0x10</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x60</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;&#x27;&quot;,7*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x1F</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x20</span>&#125;,<span class="hljs-comment">/*&quot;(&quot;,8*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x1F</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;)&quot;,9*/</span><br>&#123;<span class="hljs-number">0x09</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x1F</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x09</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;*&quot;,10*/</span><br>&#123;<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;+&quot;,11*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x60</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;,&quot;,12*/</span><br>&#123;<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;-&quot;,13*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;.&quot;,14*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x38</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;/&quot;,15*/</span><br>&#123;<span class="hljs-number">0x1F</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x1F</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;0&quot;,16*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;1&quot;,17*/</span><br>&#123;<span class="hljs-number">0x18</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x21</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x22</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x24</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;2&quot;,18*/</span><br>&#123;<span class="hljs-number">0x10</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x24</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x24</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x1B</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;3&quot;,19*/</span><br>&#123;<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x0D</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x11</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;4&quot;,20*/</span><br>&#123;<span class="hljs-number">0x3C</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x24</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x24</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x24</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x23</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;5&quot;,21*/</span><br>&#123;<span class="hljs-number">0x1F</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x24</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x24</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x34</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;6&quot;,22*/</span><br>&#123;<span class="hljs-number">0x30</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x27</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x38</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;7&quot;,23*/</span><br>&#123;<span class="hljs-number">0x1B</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x24</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x24</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x24</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x1B</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;8&quot;,24*/</span><br>&#123;<span class="hljs-number">0x1C</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x22</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x22</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x22</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x1F</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;9&quot;,25*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;:&quot;,26*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x60</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;;&quot;,27*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x0A</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x11</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x40</span>&#125;,<span class="hljs-comment">/*&quot;&lt;&quot;,28*/</span><br>&#123;<span class="hljs-number">0x09</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x09</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x09</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x09</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x09</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;=&quot;,29*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x11</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x0A</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;&gt;&quot;,30*/</span><br>&#123;<span class="hljs-number">0x18</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x23</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x24</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;?&quot;,31*/</span><br>&#123;<span class="hljs-number">0x1F</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x27</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x29</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x1F</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;@&quot;,32*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x39</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x0F</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x40</span>&#125;,<span class="hljs-comment">/*&quot;A&quot;,33*/</span><br>&#123;<span class="hljs-number">0x20</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x24</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x24</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x1B</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;B&quot;,34*/</span><br>&#123;<span class="hljs-number">0x1F</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x30</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;C&quot;,35*/</span><br>&#123;<span class="hljs-number">0x20</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x1F</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;D&quot;,36*/</span><br>&#123;<span class="hljs-number">0x20</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x24</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x2E</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x30</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;E&quot;,37*/</span><br>&#123;<span class="hljs-number">0x20</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x24</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x2E</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x30</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;F&quot;,38*/</span><br>&#123;<span class="hljs-number">0x0F</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x22</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x33</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;G&quot;,39*/</span><br>&#123;<span class="hljs-number">0x20</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x40</span>&#125;,<span class="hljs-comment">/*&quot;H&quot;,40*/</span><br>&#123;<span class="hljs-number">0x20</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;I&quot;,41*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x60</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;J&quot;,42*/</span><br>&#123;<span class="hljs-number">0x20</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x24</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x0B</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x30</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x40</span>&#125;,<span class="hljs-comment">/*&quot;K&quot;,43*/</span><br>&#123;<span class="hljs-number">0x20</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xC0</span>&#125;,<span class="hljs-comment">/*&quot;L&quot;,44*/</span><br>&#123;<span class="hljs-number">0x3F</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x3C</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x3C</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;M&quot;,45*/</span><br>&#123;<span class="hljs-number">0x20</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x0C</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x23</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;N&quot;,46*/</span><br>&#123;<span class="hljs-number">0x1F</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x1F</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;O&quot;,47*/</span><br>&#123;<span class="hljs-number">0x20</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x24</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x24</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;P&quot;,48*/</span><br>&#123;<span class="hljs-number">0x1F</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x21</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x21</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x1F</span>,<span class="hljs-number">0xA0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;Q&quot;,49*/</span><br>&#123;<span class="hljs-number">0x20</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x24</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x26</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x19</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x40</span>&#125;,<span class="hljs-comment">/*&quot;R&quot;,50*/</span><br>&#123;<span class="hljs-number">0x18</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x24</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x24</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x22</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x31</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;S&quot;,51*/</span><br>&#123;<span class="hljs-number">0x30</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x30</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;T&quot;,52*/</span><br>&#123;<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;U&quot;,53*/</span><br>&#123;<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x3E</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x38</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;V&quot;,54*/</span><br>&#123;<span class="hljs-number">0x38</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x3C</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x38</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;W&quot;,55*/</span><br>&#123;<span class="hljs-number">0x20</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x39</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x39</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;X&quot;,56*/</span><br>&#123;<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x38</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x38</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;Y&quot;,57*/</span><br>&#123;<span class="hljs-number">0x30</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x21</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x26</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x38</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;Z&quot;,58*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x7F</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;[&quot;,59*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x70</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x0C</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;\&quot;,60*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x7F</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;]&quot;,61*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;^&quot;,62*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x10</span>&#125;,<span class="hljs-comment">/*&quot;_&quot;,63*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;`&quot;,64*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x05</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x05</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x40</span>&#125;,<span class="hljs-comment">/*&quot;a&quot;,65*/</span><br>&#123;<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;b&quot;,66*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;c&quot;,67*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x24</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x40</span>&#125;,<span class="hljs-comment">/*&quot;d&quot;,68*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x05</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x05</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;e&quot;,69*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x1F</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x24</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x24</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;f&quot;,70*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x05</span>,<span class="hljs-number">0x50</span>,<span class="hljs-number">0x05</span>,<span class="hljs-number">0x50</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x50</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x20</span>&#125;,<span class="hljs-comment">/*&quot;g&quot;,71*/</span><br>&#123;<span class="hljs-number">0x20</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x40</span>&#125;,<span class="hljs-comment">/*&quot;h&quot;,72*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x27</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;i&quot;,73*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x27</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;j&quot;,74*/</span><br>&#123;<span class="hljs-number">0x20</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x40</span>&#125;,<span class="hljs-comment">/*&quot;k&quot;,75*/</span><br>&#123;<span class="hljs-number">0x20</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;l&quot;,76*/</span><br>&#123;<span class="hljs-number">0x07</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;m&quot;,77*/</span><br>&#123;<span class="hljs-number">0x04</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x40</span>&#125;,<span class="hljs-comment">/*&quot;n&quot;,78*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;o&quot;,79*/</span><br>&#123;<span class="hljs-number">0x04</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xF0</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x50</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;p&quot;,80*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x50</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xF0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x10</span>&#125;,<span class="hljs-comment">/*&quot;q&quot;,81*/</span><br>&#123;<span class="hljs-number">0x04</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;r&quot;,82*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x05</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x05</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;s&quot;,83*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x1F</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;t&quot;,84*/</span><br>&#123;<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x40</span>&#125;,<span class="hljs-comment">/*&quot;u&quot;,85*/</span><br>&#123;<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;v&quot;,86*/</span><br>&#123;<span class="hljs-number">0x06</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;w&quot;,87*/</span><br>&#123;<span class="hljs-number">0x04</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;x&quot;,88*/</span><br>&#123;<span class="hljs-number">0x04</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;y&quot;,89*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x05</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;z&quot;,90*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x7B</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;&#123;&quot;,91*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xF0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;|&quot;,92*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x7B</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;&#125;&quot;,93*/</span><br>&#123;<span class="hljs-number">0x40</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;~&quot;,94*/</span><br>&#125;;  <br> <br><span class="hljs-comment">//16*16 ASCII字符集点阵</span><br><span class="hljs-type">const</span> <span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> asc2_1608[<span class="hljs-number">95</span>][<span class="hljs-number">16</span>]=&#123;<br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot; &quot;,0*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x1F</span>,<span class="hljs-number">0xCC</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x0C</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;!&quot;,1*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x30</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x60</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x30</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x60</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;&quot;&quot;,2*/</span><br>&#123;<span class="hljs-number">0x02</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xFC</span>,<span class="hljs-number">0x1E</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xFC</span>,<span class="hljs-number">0x1E</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;#&quot;,3*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x0E</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x11</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x84</span>,<span class="hljs-number">0x0C</span>,<span class="hljs-number">0x78</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;$&quot;,4*/</span><br>&#123;<span class="hljs-number">0x0F</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x84</span>,<span class="hljs-number">0x0F</span>,<span class="hljs-number">0x38</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0x78</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x84</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x78</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;%&quot;,5*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x78</span>,<span class="hljs-number">0x0F</span>,<span class="hljs-number">0x84</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0xC4</span>,<span class="hljs-number">0x11</span>,<span class="hljs-number">0x24</span>,<span class="hljs-number">0x0E</span>,<span class="hljs-number">0x98</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xE4</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x84</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>&#125;,<span class="hljs-comment">/*&quot;&amp;&quot;,6*/</span><br>&#123;<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x68</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x70</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;&#x27;&quot;,7*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;(&quot;,8*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;)&quot;,9*/</span><br>&#123;<span class="hljs-number">0x02</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x0F</span>,<span class="hljs-number">0xF0</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;*&quot;,10*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x0F</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;+&quot;,11*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x0D</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x0E</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;,&quot;,12*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x80</span>&#125;,<span class="hljs-comment">/*&quot;-&quot;,13*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x0C</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x0C</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;.&quot;,14*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x60</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;/&quot;,15*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xF0</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xF0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;0&quot;,16*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x1F</span>,<span class="hljs-number">0xFC</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;1&quot;,17*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x0E</span>,<span class="hljs-number">0x0C</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x14</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x24</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x44</span>,<span class="hljs-number">0x11</span>,<span class="hljs-number">0x84</span>,<span class="hljs-number">0x0E</span>,<span class="hljs-number">0x0C</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;2&quot;,18*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x0C</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x11</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x11</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x12</span>,<span class="hljs-number">0x88</span>,<span class="hljs-number">0x0C</span>,<span class="hljs-number">0x70</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;3&quot;,19*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x24</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x24</span>,<span class="hljs-number">0x1F</span>,<span class="hljs-number">0xFC</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x24</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;4&quot;,20*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x1F</span>,<span class="hljs-number">0x98</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x84</span>,<span class="hljs-number">0x11</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x11</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x88</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x70</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;5&quot;,21*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xF0</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x88</span>,<span class="hljs-number">0x11</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x11</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x88</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x70</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;6&quot;,22*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x1C</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0xFC</span>,<span class="hljs-number">0x13</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x1C</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;7&quot;,23*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x0E</span>,<span class="hljs-number">0x38</span>,<span class="hljs-number">0x11</span>,<span class="hljs-number">0x44</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x84</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x84</span>,<span class="hljs-number">0x11</span>,<span class="hljs-number">0x44</span>,<span class="hljs-number">0x0E</span>,<span class="hljs-number">0x38</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;8&quot;,24*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x8C</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x44</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x44</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x88</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xF0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;9&quot;,25*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x0C</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x0C</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;:&quot;,26*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;;&quot;,27*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;&lt;&quot;,28*/</span><br>&#123;<span class="hljs-number">0x02</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;=&quot;,29*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;&gt;&quot;,30*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x0E</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x12</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x0C</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x6C</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x0F</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;?&quot;,31*/</span><br>&#123;<span class="hljs-number">0x03</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x0C</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x13</span>,<span class="hljs-number">0xE4</span>,<span class="hljs-number">0x14</span>,<span class="hljs-number">0x24</span>,<span class="hljs-number">0x17</span>,<span class="hljs-number">0xC4</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x28</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xD0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;@&quot;,32*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x3C</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xC4</span>,<span class="hljs-number">0x1C</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xE4</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x1C</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>&#125;,<span class="hljs-comment">/*&quot;A&quot;,33*/</span><br>&#123;<span class="hljs-number">0x10</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x1F</span>,<span class="hljs-number">0xFC</span>,<span class="hljs-number">0x11</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x11</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x11</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x0E</span>,<span class="hljs-number">0x88</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x70</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;B&quot;,34*/</span><br>&#123;<span class="hljs-number">0x03</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x0C</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x1C</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;C&quot;,35*/</span><br>&#123;<span class="hljs-number">0x10</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x1F</span>,<span class="hljs-number">0xFC</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xF0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;D&quot;,36*/</span><br>&#123;<span class="hljs-number">0x10</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x1F</span>,<span class="hljs-number">0xFC</span>,<span class="hljs-number">0x11</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x11</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x17</span>,<span class="hljs-number">0xC4</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;E&quot;,37*/</span><br>&#123;<span class="hljs-number">0x10</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x1F</span>,<span class="hljs-number">0xFC</span>,<span class="hljs-number">0x11</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x11</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x17</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;F&quot;,38*/</span><br>&#123;<span class="hljs-number">0x03</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x0C</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x44</span>,<span class="hljs-number">0x1C</span>,<span class="hljs-number">0x78</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;G&quot;,39*/</span><br>&#123;<span class="hljs-number">0x10</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x1F</span>,<span class="hljs-number">0xFC</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x84</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x84</span>,<span class="hljs-number">0x1F</span>,<span class="hljs-number">0xFC</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x04</span>&#125;,<span class="hljs-comment">/*&quot;H&quot;,40*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x1F</span>,<span class="hljs-number">0xFC</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;I&quot;,41*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x1F</span>,<span class="hljs-number">0xFE</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;J&quot;,42*/</span><br>&#123;<span class="hljs-number">0x10</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x1F</span>,<span class="hljs-number">0xFC</span>,<span class="hljs-number">0x11</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x14</span>,<span class="hljs-number">0x64</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x1C</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;K&quot;,43*/</span><br>&#123;<span class="hljs-number">0x10</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x1F</span>,<span class="hljs-number">0xFC</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x0C</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;L&quot;,44*/</span><br>&#123;<span class="hljs-number">0x10</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x1F</span>,<span class="hljs-number">0xFC</span>,<span class="hljs-number">0x1F</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xFC</span>,<span class="hljs-number">0x1F</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x1F</span>,<span class="hljs-number">0xFC</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;M&quot;,45*/</span><br>&#123;<span class="hljs-number">0x10</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x1F</span>,<span class="hljs-number">0xFC</span>,<span class="hljs-number">0x0C</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x1F</span>,<span class="hljs-number">0xFC</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;N&quot;,46*/</span><br>&#123;<span class="hljs-number">0x07</span>,<span class="hljs-number">0xF0</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xF0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;O&quot;,47*/</span><br>&#123;<span class="hljs-number">0x10</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x1F</span>,<span class="hljs-number">0xFC</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x84</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x0F</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;P&quot;,48*/</span><br>&#123;<span class="hljs-number">0x07</span>,<span class="hljs-number">0xF0</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x24</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x24</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x1C</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x0A</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xF2</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;Q&quot;,49*/</span><br>&#123;<span class="hljs-number">0x10</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x1F</span>,<span class="hljs-number">0xFC</span>,<span class="hljs-number">0x11</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x11</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x11</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x11</span>,<span class="hljs-number">0x30</span>,<span class="hljs-number">0x0E</span>,<span class="hljs-number">0x0C</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>&#125;,<span class="hljs-comment">/*&quot;R&quot;,50*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x0E</span>,<span class="hljs-number">0x1C</span>,<span class="hljs-number">0x11</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x84</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x84</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x44</span>,<span class="hljs-number">0x1C</span>,<span class="hljs-number">0x38</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;S&quot;,51*/</span><br>&#123;<span class="hljs-number">0x18</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x1F</span>,<span class="hljs-number">0xFC</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;T&quot;,52*/</span><br>&#123;<span class="hljs-number">0x10</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x1F</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x1F</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;U&quot;,53*/</span><br>&#123;<span class="hljs-number">0x10</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x1E</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x11</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x1C</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x70</span>,<span class="hljs-number">0x13</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x1C</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;V&quot;,54*/</span><br>&#123;<span class="hljs-number">0x1F</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x3C</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x1F</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x3C</span>,<span class="hljs-number">0x1F</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;W&quot;,55*/</span><br>&#123;<span class="hljs-number">0x10</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x0C</span>,<span class="hljs-number">0x16</span>,<span class="hljs-number">0x34</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x16</span>,<span class="hljs-number">0x34</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x0C</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x04</span>&#125;,<span class="hljs-comment">/*&quot;X&quot;,56*/</span><br>&#123;<span class="hljs-number">0x10</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x1C</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x13</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xFC</span>,<span class="hljs-number">0x13</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x1C</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;Y&quot;,57*/</span><br>&#123;<span class="hljs-number">0x08</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x1C</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x64</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x84</span>,<span class="hljs-number">0x13</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x1C</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;Z&quot;,58*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x7F</span>,<span class="hljs-number">0xFE</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;[&quot;,59*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x30</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x0C</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x60</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x1C</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;\&quot;,60*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x7F</span>,<span class="hljs-number">0xFE</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;]&quot;,61*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;^&quot;,62*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>&#125;,<span class="hljs-comment">/*&quot;_&quot;,63*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;`&quot;,64*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x98</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x24</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x44</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x44</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x44</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xFC</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>&#125;,<span class="hljs-comment">/*&quot;a&quot;,65*/</span><br>&#123;<span class="hljs-number">0x10</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x1F</span>,<span class="hljs-number">0xFC</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x88</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x88</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x70</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;b&quot;,66*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x70</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x88</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x88</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;c&quot;,67*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x70</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x88</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x11</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x1F</span>,<span class="hljs-number">0xFC</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>&#125;,<span class="hljs-comment">/*&quot;d&quot;,68*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x44</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x44</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x44</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x44</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xC8</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;e&quot;,69*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x0F</span>,<span class="hljs-number">0xFC</span>,<span class="hljs-number">0x11</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x11</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x11</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;f&quot;,70*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xD6</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x29</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x29</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x29</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0xC9</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;g&quot;,71*/</span><br>&#123;<span class="hljs-number">0x10</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x1F</span>,<span class="hljs-number">0xFC</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x84</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xFC</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>&#125;,<span class="hljs-comment">/*&quot;h&quot;,72*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x19</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x19</span>,<span class="hljs-number">0xFC</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;i&quot;,73*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x19</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x19</span>,<span class="hljs-number">0xFE</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;j&quot;,74*/</span><br>&#123;<span class="hljs-number">0x10</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x1F</span>,<span class="hljs-number">0xFC</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x24</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0xB4</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x0C</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;k&quot;,75*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x1F</span>,<span class="hljs-number">0xFC</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;l&quot;,76*/</span><br>&#123;<span class="hljs-number">0x01</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0xFC</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0xFC</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xFC</span>&#125;,<span class="hljs-comment">/*&quot;m&quot;,77*/</span><br>&#123;<span class="hljs-number">0x01</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0xFC</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x84</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xFC</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>&#125;,<span class="hljs-comment">/*&quot;n&quot;,78*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;o&quot;,79*/</span><br>&#123;<span class="hljs-number">0x01</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x85</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x88</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x70</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;p&quot;,80*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x70</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x88</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x05</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>&#125;,<span class="hljs-comment">/*&quot;q&quot;,81*/</span><br>&#123;<span class="hljs-number">0x01</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0xFC</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x84</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;r&quot;,82*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xCC</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x24</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x24</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x24</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x24</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x98</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;s&quot;,83*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;t&quot;,84*/</span><br>&#123;<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0xFC</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>&#125;,<span class="hljs-comment">/*&quot;u&quot;,85*/</span><br>&#123;<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x70</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x0C</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x60</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;v&quot;,86*/</span><br>&#123;<span class="hljs-number">0x01</span>,<span class="hljs-number">0xF0</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x0C</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x30</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x30</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x0C</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0xF0</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;w&quot;,87*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x8C</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x74</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x70</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x8C</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;x&quot;,88*/</span><br>&#123;<span class="hljs-number">0x01</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x81</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x71</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x0E</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x60</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;y&quot;,89*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x84</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x0C</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x34</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x44</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x84</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x0C</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;z&quot;,90*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x3E</span>,<span class="hljs-number">0xFC</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x02</span>&#125;,<span class="hljs-comment">/*&quot;&#123;&quot;,91*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;|&quot;,92*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x3E</span>,<span class="hljs-number">0xFC</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;&#125;&quot;,93*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x60</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;~&quot;,94*/</span><br>&#125;;  <br> <br><span class="hljs-comment">//24*24 ASICII字符集点阵</span><br><span class="hljs-type">const</span> <span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> asc2_2412[<span class="hljs-number">95</span>][<span class="hljs-number">36</span>]=&#123;  <br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot; &quot;,0*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x0F</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x38</span>,<span class="hljs-number">0x0F</span>,<span class="hljs-number">0xFE</span>,<span class="hljs-number">0x38</span>,<span class="hljs-number">0x0F</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x38</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;!&quot;,1*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x0C</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x38</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x31</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x0C</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x38</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x30</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;&quot;&quot;,2*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x61</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x67</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xF9</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x61</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x61</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x61</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x61</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x67</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xF9</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x61</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;#&quot;,3*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0xF0</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x30</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x1F</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xFE</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x0E</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0x87</span>,<span class="hljs-number">0xF0</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x81</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;$&quot;,4*/</span><br>&#123;<span class="hljs-number">0x01</span>,<span class="hljs-number">0xF0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x0C</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x0C</span>,<span class="hljs-number">0x70</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0xF9</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x0E</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x3B</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xEC</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x0C</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;%&quot;,5*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xF0</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x1C</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x17</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xE1</span>,<span class="hljs-number">0xD0</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x23</span>,<span class="hljs-number">0xB0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x3C</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;&amp;&quot;,6*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x31</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x32</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x1C</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;&#x27;&quot;,7*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x7F</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0xF0</span>,<span class="hljs-number">0x0C</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;(&quot;,8*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x0C</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0xF0</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x7F</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;)&quot;,9*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x42</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x66</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x66</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x3C</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x3C</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x66</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x66</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x42</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;*&quot;,10*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;+&quot;,11*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x31</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x32</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x1C</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;,&quot;,12*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;-&quot;,13*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x38</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x38</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x38</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;.&quot;,14*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x1C</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x70</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x0E</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x38</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x1C</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x30</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;/&quot;,15*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x7F</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x70</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x70</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x7F</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;0&quot;,16*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;1&quot;,17*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x38</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x58</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x98</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x1C</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;2&quot;,18*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0xF0</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xF4</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0xE7</span>,<span class="hljs-number">0xF0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;3&quot;,19*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x0D</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x11</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x61</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x81</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x0F</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;4&quot;,20*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xFC</span>,<span class="hljs-number">0xD0</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x38</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x0F</span>,<span class="hljs-number">0xF0</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;5&quot;,21*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x84</span>,<span class="hljs-number">0x30</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x0F</span>,<span class="hljs-number">0xF0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;6&quot;,22*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;7&quot;,23*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0xE1</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xF7</span>,<span class="hljs-number">0xF0</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x34</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x0C</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x0C</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x16</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xF3</span>,<span class="hljs-number">0xF0</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0xC1</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;8&quot;,24*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xFC</span>,<span class="hljs-number">0x30</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x38</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0xF0</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x7F</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;9&quot;,25*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x70</span>,<span class="hljs-number">0x38</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x70</span>,<span class="hljs-number">0x38</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x70</span>,<span class="hljs-number">0x38</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;:&quot;,26*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x30</span>,<span class="hljs-number">0x1A</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x30</span>,<span class="hljs-number">0x1C</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;;&quot;,27*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x14</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x22</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x41</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;&lt;&quot;,28*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x21</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x21</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x21</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x21</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x21</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x21</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x21</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x21</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x21</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x21</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;=&quot;,29*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x41</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x22</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x14</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;&gt;&quot;,30*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x38</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x0F</span>,<span class="hljs-number">0x38</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x38</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x0C</span>,<span class="hljs-number">0x30</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;?&quot;,31*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x70</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x0F</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x70</span>,<span class="hljs-number">0x88</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x88</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x83</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x7F</span>,<span class="hljs-number">0x88</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x90</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xFE</span>,<span class="hljs-number">0x40</span>&#125;,<span class="hljs-comment">/*&quot;@&quot;,32*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x3E</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0xC2</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xE2</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xFE</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x1F</span>,<span class="hljs-number">0xC8</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x38</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>&#125;,<span class="hljs-comment">/*&quot;A&quot;,33*/</span><br>&#123;<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xF4</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0xE7</span>,<span class="hljs-number">0xF0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;B&quot;,34*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x70</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;C&quot;,35*/</span><br>&#123;<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x70</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x7F</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;D&quot;,36*/</span><br>&#123;<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x3E</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x60</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;E&quot;,37*/</span><br>&#123;<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x3E</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;F&quot;,38*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x70</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xF0</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0x83</span>,<span class="hljs-number">0xF0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;G&quot;,39*/</span><br>&#123;<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>&#125;,<span class="hljs-comment">/*&quot;H&quot;,40*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;I&quot;,41*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xFE</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xFC</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;J&quot;,42*/</span><br>&#123;<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x0C</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x3E</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0xC7</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x05</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xC8</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x38</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>&#125;,<span class="hljs-comment">/*&quot;K&quot;,43*/</span><br>&#123;<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x60</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;L&quot;,44*/</span><br>&#123;<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xFC</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x7F</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x78</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>&#125;,<span class="hljs-comment">/*&quot;M&quot;,45*/</span><br>&#123;<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x38</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x1E</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xF0</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;N&quot;,46*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x7F</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x70</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x30</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x7F</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;O&quot;,47*/</span><br>&#123;<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x0C</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0xF0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;P&quot;,48*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x7F</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x70</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x88</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x88</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xC8</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x3C</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x3E</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xE6</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x7F</span>,<span class="hljs-number">0x84</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;Q&quot;,49*/</span><br>&#123;<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x0C</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x0F</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x0B</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0xF0</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xF0</span>,<span class="hljs-number">0x38</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>&#125;,<span class="hljs-comment">/*&quot;R&quot;,50*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xF0</span>,<span class="hljs-number">0x30</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x30</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x0C</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x0C</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xF0</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0x81</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;S&quot;,51*/</span><br>&#123;<span class="hljs-number">0x01</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;T&quot;,52*/</span><br>&#123;<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xF0</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;U&quot;,53*/</span><br>&#123;<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xFE</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x1F</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x38</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x3E</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;V&quot;,54*/</span><br>&#123;<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x1F</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;W&quot;,55*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x78</span>,<span class="hljs-number">0x05</span>,<span class="hljs-number">0xF1</span>,<span class="hljs-number">0xC8</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x3E</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x1F</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x63</span>,<span class="hljs-number">0xE8</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;X&quot;,56*/</span><br>&#123;<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x7C</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x1F</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;Y&quot;,57*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x38</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xE8</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x0F</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x7C</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x05</span>,<span class="hljs-number">0xF0</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x60</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;Z&quot;,58*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xFE</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;[&quot;,59*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x38</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x30</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x0E</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;\&quot;,60*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xFE</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;]&quot;,61*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x30</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x30</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;^&quot;,62*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>&#125;,<span class="hljs-comment">/*&quot;_&quot;,63*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;`&quot;,64*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xF0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x19</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x1B</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x22</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x26</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x24</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x24</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x1F</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x18</span>&#125;,<span class="hljs-comment">/*&quot;a&quot;,65*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x0F</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xF0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x30</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x1F</span>,<span class="hljs-number">0xF0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x0F</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;b&quot;,66*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x1F</span>,<span class="hljs-number">0xF0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x30</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x3C</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x1C</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x60</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;c&quot;,67*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x1F</span>,<span class="hljs-number">0xF0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x38</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x0F</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xF0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;d&quot;,68*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x1F</span>,<span class="hljs-number">0xF0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x12</span>,<span class="hljs-number">0x30</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x22</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x22</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x22</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x32</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x1E</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x0E</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;e&quot;,69*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;f&quot;,70*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x0E</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x0E</span>,<span class="hljs-number">0x6E</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x1F</span>,<span class="hljs-number">0xF3</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x31</span>,<span class="hljs-number">0xB1</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0xB1</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0xB1</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x31</span>,<span class="hljs-number">0x91</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x1F</span>,<span class="hljs-number">0x13</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x2E</span>,<span class="hljs-number">0x1E</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x0E</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x30</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;g&quot;,71*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x0F</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x1F</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;h&quot;,72*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;i&quot;,73*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0xFE</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0xFC</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;j&quot;,74*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x0F</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x88</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x2F</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x38</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x38</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;k&quot;,75*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x0F</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;l&quot;,76*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>&#125;,<span class="hljs-comment">/*&quot;m&quot;,77*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x1F</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;n&quot;,78*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x0F</span>,<span class="hljs-number">0xF0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x30</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x30</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x30</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x30</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x0F</span>,<span class="hljs-number">0xF0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;o&quot;,79*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x11</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x09</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x30</span>,<span class="hljs-number">0x38</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x1F</span>,<span class="hljs-number">0xF0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x0F</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;p&quot;,80*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x1F</span>,<span class="hljs-number">0xF0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x38</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x09</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x11</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x1F</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;q&quot;,81*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x30</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x30</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;r&quot;,82*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x0C</span>,<span class="hljs-number">0x78</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x1E</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x33</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x23</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x21</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x21</span>,<span class="hljs-number">0x88</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x21</span>,<span class="hljs-number">0x98</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x30</span>,<span class="hljs-number">0xF0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x38</span>,<span class="hljs-number">0x60</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;s&quot;,83*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xF0</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x30</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;t&quot;,84*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0xF0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x7F</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x7F</span>,<span class="hljs-number">0xF0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;u&quot;,85*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x30</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x3C</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x23</span>,<span class="hljs-number">0xF0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x78</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x70</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x23</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x3C</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x30</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;v&quot;,86*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x3C</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x23</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x27</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x3E</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x21</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x3E</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;w&quot;,87*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x38</span>,<span class="hljs-number">0x38</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x3E</span>,<span class="hljs-number">0x68</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x27</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xC8</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x2C</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x38</span>,<span class="hljs-number">0x38</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;x&quot;,88*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x30</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x3C</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0x83</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x23</span>,<span class="hljs-number">0xEC</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x70</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x23</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x3C</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;y&quot;,89*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x38</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x38</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x23</span>,<span class="hljs-number">0xE8</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x2F</span>,<span class="hljs-number">0x88</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x3E</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x38</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x70</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;z&quot;,90*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x14</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x1F</span>,<span class="hljs-number">0xF7</span>,<span class="hljs-number">0xFC</span>,<span class="hljs-number">0x30</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;&#123;&quot;,91*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;|&quot;,92*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x30</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x1F</span>,<span class="hljs-number">0xF7</span>,<span class="hljs-number">0xFC</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x14</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;&#125;&quot;,93*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x60</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x0C</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;~&quot;,94*/</span><br>&#125;;     <br> <br><span class="hljs-comment">//32*32 ASCII字符集点阵</span><br><span class="hljs-type">const</span> <span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> asc2_3216[<span class="hljs-number">95</span>][<span class="hljs-number">128</span>]=&#123;<br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot; &quot;,0*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xF0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xE1</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xF0</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;!&quot;,1*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x1F</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x1E</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x1C</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x1F</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x1E</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x1C</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;&quot;&quot;,2*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x0C</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x0C</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x0F</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x1F</span>,<span class="hljs-number">0xFC</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x0C</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x0C</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x0C</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x0C</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x0C</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x0F</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x1F</span>,<span class="hljs-number">0xFC</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x0C</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x0C</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x0C</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;#&quot;,3*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x78</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xFC</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x0E</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x0F</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xFC</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x60</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x30</span>,<span class="hljs-number">0x70</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0xF0</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xF0</span>,<span class="hljs-number">0x1F</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;$&quot;,4*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0xFE</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x60</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x81</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xFE</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xBF</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x0C</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x71</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x60</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0xC1</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x60</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;%&quot;,5*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x1F</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x7F</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xFC</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x60</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x78</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x1E</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xFC</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0xF0</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x1C</span>,<span class="hljs-number">0x60</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;&amp;&quot;,6*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x1C</span>,<span class="hljs-number">0x60</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x1C</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x1F</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x0F</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;&#x27;&quot;,7*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x78</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x30</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;(&quot;,8*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x30</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x78</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;)&quot;,9*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x0C</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x0E</span>,<span class="hljs-number">0x38</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x0E</span>,<span class="hljs-number">0x38</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x30</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x60</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x61</span>,<span class="hljs-number">0x43</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x61</span>,<span class="hljs-number">0x43</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x60</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x30</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x0E</span>,<span class="hljs-number">0x38</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x0E</span>,<span class="hljs-number">0x38</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x0C</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;*&quot;,10*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x7F</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;+&quot;,11*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xE3</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xE2</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xFC</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x78</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;,&quot;,12*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;-&quot;,13*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;.&quot;,14*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x0C</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x38</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x0E</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x38</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x0E</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x38</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x0E</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;/&quot;,15*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x0F</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x7F</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xF0</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x60</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x60</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x7F</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x0F</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;0&quot;,16*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x60</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x60</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;1&quot;,17*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x78</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x98</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x60</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x60</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x60</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x60</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x60</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x60</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x60</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x60</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x83</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x60</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0xFE</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x7C</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;2&quot;,18*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xF0</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0xF0</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x86</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0xFC</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x78</span>,<span class="hljs-number">0x7F</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x1E</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;3&quot;,19*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x38</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x48</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x88</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x0C</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x30</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xF0</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xF0</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xF0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;4&quot;,20*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x1F</span>,<span class="hljs-number">0x86</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xE1</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x7E</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;5&quot;,21*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xFC</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x70</span>,<span class="hljs-number">0xC3</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x81</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x60</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0xC1</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x7E</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;6&quot;,22*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xF0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x60</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;7&quot;,23*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x1F</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x78</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xFC</span>,<span class="hljs-number">0x60</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x8E</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x86</span>,<span class="hljs-number">0x70</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xFC</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x78</span>,<span class="hljs-number">0x1F</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;8&quot;,24*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0x81</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0xC1</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x60</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x60</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xC1</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xC1</span>,<span class="hljs-number">0x8F</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x7F</span>,<span class="hljs-number">0xFE</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x1F</span>,<span class="hljs-number">0xF0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;9&quot;,25*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0x81</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0x81</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;:&quot;,26*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x66</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x78</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;;&quot;,27*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x60</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x30</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x0C</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x0C</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x30</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x60</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;&lt;&quot;,28*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;=&quot;,29*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x60</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x30</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x0C</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x0C</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x30</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x60</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;&gt;&quot;,30*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x78</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x38</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x79</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x81</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0xFC</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;?&quot;,31*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x0F</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0xFE</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x70</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xFC</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x1E</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x30</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x30</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0xFC</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x0C</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x31</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x1F</span>,<span class="hljs-number">0xC2</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;@&quot;,32*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x60</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x3E</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x3E</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xFC</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xFE</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;A&quot;,33*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x86</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x60</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0xFC</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x7F</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x1F</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;B&quot;,34*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x70</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x30</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;C&quot;,35*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x60</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xF0</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x7F</span>,<span class="hljs-number">0xFE</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x0F</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;D&quot;,36*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x0F</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x60</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x60</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;E&quot;,37*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x0F</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x60</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;F&quot;,38*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0xFE</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x70</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x30</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;G&quot;,39*/</span><br>&#123;<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;H&quot;,40*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;I&quot;,41*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x0E</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x0F</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x0F</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xFC</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;J&quot;,42*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x0F</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x30</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x60</span>,<span class="hljs-number">0x3E</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x0F</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>&#125;,<span class="hljs-comment">/*&quot;K&quot;,43*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x60</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;L&quot;,44*/</span><br>&#123;<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x1F</span>,<span class="hljs-number">0xF0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x0F</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x1E</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x3E</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>&#125;,<span class="hljs-comment">/*&quot;M&quot;,45*/</span><br>&#123;<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xF0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xFC</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x1F</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0xF0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x7C</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x1F</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;N&quot;,46*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x0F</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0xFE</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xF0</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xF0</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0xFE</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x0F</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;O&quot;,47*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x83</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xFE</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x7C</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;P&quot;,48*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x0F</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x7F</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xF0</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x5C</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x8C</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0x0C</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x0F</span>,<span class="hljs-number">0xFC</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;Q&quot;,49*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0xFC</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x86</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0xFC</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;R&quot;,50*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x78</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xFE</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x86</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x60</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x70</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x1F</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;S&quot;,51*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x60</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;T&quot;,52*/</span><br>&#123;<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x60</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;U&quot;,53*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xFC</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x7F</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x78</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x3C</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;V&quot;,54*/</span><br>&#123;<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0xFE</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x7F</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x0F</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xF0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xEF</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x0F</span>,<span class="hljs-number">0xFE</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x1F</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;W&quot;,55*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xF0</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0xFC</span>,<span class="hljs-number">0x0C</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x1F</span>,<span class="hljs-number">0x30</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xF0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x7C</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x60</span>,<span class="hljs-number">0x1F</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;X&quot;,56*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x3E</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x0F</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x7F</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x1C</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x70</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;Y&quot;,57*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x60</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x0F</span>,<span class="hljs-number">0xA0</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x3E</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x0F</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x3E</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x78</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x60</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;Z&quot;,58*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x1F</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xFC</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;[&quot;,59*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x78</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x1E</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xF0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x1E</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xF0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x3C</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;\&quot;,60*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x1F</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xFC</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;]&quot;,61*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;^&quot;,62*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>&#125;,<span class="hljs-comment">/*&quot;_&quot;,63*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;`&quot;,64*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x8F</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x8C</span>,<span class="hljs-number">0x60</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;a&quot;,65*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x60</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xFE</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;b&quot;,66*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x7E</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x81</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;c&quot;,67*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x7E</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x60</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;d&quot;,68*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x7E</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x11</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x60</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0xF0</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x71</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;e&quot;,69*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x7F</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;f&quot;,70*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x1C</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xE3</span>,<span class="hljs-number">0x3E</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xC2</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x0C</span>,<span class="hljs-number">0xC3</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0xC1</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0xC1</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0xC1</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0xC1</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x0C</span>,<span class="hljs-number">0xC1</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0xC3</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x05</span>,<span class="hljs-number">0xF0</span>,<span class="hljs-number">0x62</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x7E</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x3C</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;g&quot;,71*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>&#125;,<span class="hljs-comment">/*&quot;h&quot;,72*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x87</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x8F</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;i&quot;,73*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x87</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xFC</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x8F</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;j&quot;,74*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x30</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xFC</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x05</span>,<span class="hljs-number">0x8E</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xA0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;k&quot;,75*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;l&quot;,76*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x0F</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;m&quot;,77*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x0F</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>&#125;,<span class="hljs-comment">/*&quot;n&quot;,78*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x7E</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x81</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x81</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x7E</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;o&quot;,79*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x0F</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xC1</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x41</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x7E</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;p&quot;,80*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x7E</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x60</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x41</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xC1</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>&#125;,<span class="hljs-comment">/*&quot;q&quot;,81*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x0F</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x0F</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;r&quot;,82*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x30</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x30</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x0C</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x0C</span>,<span class="hljs-number">0x60</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0x83</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;s&quot;,83*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x0C</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x1F</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x60</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;t&quot;,84*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x0F</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x60</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x0F</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x40</span>&#125;,<span class="hljs-comment">/*&quot;u&quot;,85*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xF0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0xFE</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x1F</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x1C</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x60</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;v&quot;,86*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xFC</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x0F</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0xF0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xF0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x0F</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x3C</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;w&quot;,87*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x60</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0x83</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xE6</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x3C</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x5E</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x05</span>,<span class="hljs-number">0x87</span>,<span class="hljs-number">0xA0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x60</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;x&quot;,88*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x1F</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xFC</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x38</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;y&quot;,89*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x60</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xA0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x0E</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x3C</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x70</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x05</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x60</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;z&quot;,90*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xFE</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;&#123;&quot;,91*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;|&quot;,92*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0xFE</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;&#125;&quot;,93*/</span><br>&#123;<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x30</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x30</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x0C</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>&#125;,<span class="hljs-comment">/*&quot;~&quot;,94*/</span><br>&#125;;<br><span class="hljs-meta">#<span class="hljs-keyword">endif</span></span><br></code></pre></td></tr></table></figure></details><p>向工程中添加.c&#x2F;.h文件的步骤请阅读“<a href="https://www.cnblogs.com/lc-guo/p/17965519">STM32CubeMX教程19 I2C - MPU6050驱动</a>”实验3.2.3小节</p><p><font color="#fe2c24"><strong>值得提醒的是在LCD初始化函数中使用串口打印了LCD的控制芯片ID，因此如果未初始化串口请注释掉该输出代码</strong></font>，如果你不希望注释，请阅读“<a href="https://www.cnblogs.com/lc-guo/p/17950348">STM32CubeMX教程9 USART&#x2F;UART 异步通信</a>”配置并重定向串口</p><p>然后在主函数中添加一些用于测试LCD是否正常工作的函数，具体源代码如下所示</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">/*LCD测试函数*/</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">LCD_TEST</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span><br>&#123;<br>    <span class="hljs-comment">/*画线测试*/</span><br>    testlines();<br>    HAL_Delay(<span class="hljs-number">1000</span>);<br>    <span class="hljs-comment">/*画正方形测试*/</span><br>    testdrawrects();<br>    HAL_Delay(<span class="hljs-number">1000</span>);<br>    <span class="hljs-comment">/*画圆测试*/</span><br>    testfillcircles(<span class="hljs-number">15</span>);<br>    HAL_Delay(<span class="hljs-number">1000</span>);<br>    <span class="hljs-comment">/*字体测试*/</span><br>    tftPrintTest();<br>&#125;<br> <br><span class="hljs-comment">/*画线测试*/</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">testlines</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span> <br>&#123;<br>    LCD_Clear(WHITE);<br>    POINT_COLOR=BLACK;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int16_t</span> x=<span class="hljs-number">0</span>; x &lt; SSD_VER_RESOLUTION; x+=<span class="hljs-number">6</span>) <br>    &#123;<br>        LCD_DrawLine(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, x, SSD_HOR_RESOLUTION<span class="hljs-number">-1</span>);<br>        HAL_Delay(<span class="hljs-number">3</span>);<br>    &#125;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int16_t</span> y=<span class="hljs-number">0</span>; y &lt; SSD_HOR_RESOLUTION; y+=<span class="hljs-number">6</span>) <br>    &#123;<br>        LCD_DrawLine(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, SSD_VER_RESOLUTION<span class="hljs-number">-1</span>, y);<br>        HAL_Delay(<span class="hljs-number">3</span>);<br>    &#125;<br> <br>    LCD_Clear(WHITE);<br>    POINT_COLOR=BLUE;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int16_t</span> x=<span class="hljs-number">0</span>; x &lt; SSD_VER_RESOLUTION; x+=<span class="hljs-number">6</span>)<br>    &#123;<br>        LCD_DrawLine(SSD_VER_RESOLUTION<span class="hljs-number">-1</span>, <span class="hljs-number">0</span>, x, SSD_HOR_RESOLUTION<span class="hljs-number">-1</span>);<br>        HAL_Delay(<span class="hljs-number">3</span>);<br>    &#125;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int16_t</span> y=<span class="hljs-number">0</span>; y &lt; SSD_HOR_RESOLUTION; y+=<span class="hljs-number">6</span>)<br>    &#123;<br>        LCD_DrawLine(SSD_VER_RESOLUTION<span class="hljs-number">-1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, y);<br>        HAL_Delay(<span class="hljs-number">3</span>);<br>    &#125;<br> <br>    LCD_Clear(WHITE);<br>    POINT_COLOR=RED;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int16_t</span> y=<span class="hljs-number">0</span>; y &lt; SSD_HOR_RESOLUTION; y+=<span class="hljs-number">6</span>) <br>    &#123;<br>        LCD_DrawLine(<span class="hljs-number">0</span>, SSD_HOR_RESOLUTION<span class="hljs-number">-1</span>, SSD_VER_RESOLUTION<span class="hljs-number">-1</span>, y);<br>        HAL_Delay(<span class="hljs-number">3</span>);<br>    &#125;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int16_t</span> x=<span class="hljs-number">0</span>; x &lt; SSD_VER_RESOLUTION; x+=<span class="hljs-number">6</span>) <br>    &#123;<br>        LCD_DrawLine(<span class="hljs-number">0</span>, SSD_HOR_RESOLUTION<span class="hljs-number">-1</span>, x, <span class="hljs-number">0</span>);<br>        HAL_Delay(<span class="hljs-number">3</span>);<br>    &#125;<br> <br>    LCD_Clear(WHITE);<br>    POINT_COLOR=MAGENTA;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int16_t</span> x=<span class="hljs-number">0</span>; x &lt; SSD_VER_RESOLUTION; x+=<span class="hljs-number">6</span>) <br>    &#123;<br>        LCD_DrawLine(SSD_VER_RESOLUTION<span class="hljs-number">-1</span>, SSD_HOR_RESOLUTION<span class="hljs-number">-1</span>, x, <span class="hljs-number">0</span>);<br>        HAL_Delay(<span class="hljs-number">3</span>);<br>    &#125;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int16_t</span> y=<span class="hljs-number">0</span>; y &lt; SSD_HOR_RESOLUTION; y+=<span class="hljs-number">6</span>)<br>    &#123;<br>        LCD_DrawLine(SSD_VER_RESOLUTION<span class="hljs-number">-1</span>, SSD_HOR_RESOLUTION<span class="hljs-number">-1</span>, <span class="hljs-number">0</span>, y);<br>        HAL_Delay(<span class="hljs-number">3</span>);<br>    &#125;<br>&#125;<br> <br><span class="hljs-comment">/*画正方形测试*/</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">testdrawrects</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span> <br>&#123;<br>    LCD_Clear(WHITE);<br>    POINT_COLOR=BLACK;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int16_t</span> x=<span class="hljs-number">0</span>; x &lt; SSD_VER_RESOLUTION; x+=<span class="hljs-number">6</span>)<br>    &#123;<br>        LCD_DrawRectangle(SSD_VER_RESOLUTION/<span class="hljs-number">2</span> -x/<span class="hljs-number">2</span>, SSD_HOR_RESOLUTION/<span class="hljs-number">2</span> -x/<span class="hljs-number">2</span> , x, x);<br>    &#125;<br>&#125;<br> <br><span class="hljs-comment">/*画圆测试*/</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">testfillcircles</span><span class="hljs-params">(<span class="hljs-type">uint8_t</span> radius)</span> <br>&#123;<br>    LCD_Clear(WHITE);<br>    POINT_COLOR=BLUE;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int16_t</span> x=radius; x &lt; SSD_VER_RESOLUTION; x+=radius*<span class="hljs-number">2</span>)<br>    &#123;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int16_t</span> y=radius; y &lt; SSD_HOR_RESOLUTION; y+=radius*<span class="hljs-number">2</span>)<br>        &#123;<br>            LCD_Draw_Circle(x, y, radius);<br>        &#125;<br>    &#125;<br>    HAL_Delay(<span class="hljs-number">1500</span>);<br>    LCD_Clear(WHITE);<br>    POINT_COLOR=MAGENTA;<br>    radius = radius / <span class="hljs-number">2</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int16_t</span> x=radius; x &lt; SSD_VER_RESOLUTION; x+=radius*<span class="hljs-number">2</span>)<br>    &#123;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int16_t</span> y=radius; y &lt; SSD_HOR_RESOLUTION; y+=radius*<span class="hljs-number">2</span>)<br>        &#123;<br>            LCD_Draw_Circle(x, y, radius);<br>        &#125;<br>    &#125;<br>&#125;<br> <br><span class="hljs-comment">/*字体测试*/</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">tftPrintTest</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span> <br>&#123;<br>    LCD_Clear(WHITE);<br>    LCD_SetCursor(<span class="hljs-number">0</span>, <span class="hljs-number">30</span>);<br>    POINT_COLOR=RED;<br>    LCD_ShowString(<span class="hljs-number">0</span>,<span class="hljs-number">30</span>,<span class="hljs-number">200</span>,<span class="hljs-number">16</span>,<span class="hljs-number">16</span>,(<span class="hljs-type">uint8_t</span> *)<span class="hljs-string">&quot;Hello World!&quot;</span>);<br>    POINT_COLOR=YELLOW;<br>    LCD_ShowString(<span class="hljs-number">0</span>,<span class="hljs-number">60</span>,<span class="hljs-number">200</span>,<span class="hljs-number">16</span>,<span class="hljs-number">24</span>,(<span class="hljs-type">uint8_t</span> *)<span class="hljs-string">&quot;Hello World!&quot;</span>);<br>    POINT_COLOR=GREEN;<br>    LCD_ShowString(<span class="hljs-number">0</span>,<span class="hljs-number">90</span>,<span class="hljs-number">200</span>,<span class="hljs-number">16</span>,<span class="hljs-number">32</span>,(<span class="hljs-type">uint8_t</span> *)<span class="hljs-string">&quot;Hello World!&quot;</span>);<br>    POINT_COLOR=BLUE;<br>    LCD_ShowxNum(<span class="hljs-number">0</span>,<span class="hljs-number">120</span>,<span class="hljs-number">1234</span>,<span class="hljs-number">4</span>,<span class="hljs-number">24</span>,<span class="hljs-number">1</span>);<br>    HAL_Delay(<span class="hljs-number">1500</span>);<br>    POINT_COLOR=YELLOW;<br>    LCD_ShowString(<span class="hljs-number">0</span>,<span class="hljs-number">180</span>,<span class="hljs-number">200</span>,<span class="hljs-number">16</span>,<span class="hljs-number">24</span>,(<span class="hljs-type">uint8_t</span> *)<span class="hljs-string">&quot;Hello World!&quot;</span>);<br>    POINT_COLOR=GREEN;<br>    LCD_ShowString(<span class="hljs-number">0</span>,<span class="hljs-number">210</span>,<span class="hljs-number">200</span>,<span class="hljs-number">16</span>,<span class="hljs-number">32</span>,(<span class="hljs-type">uint8_t</span> *)<span class="hljs-string">&quot; Want pi?&quot;</span>);<br>    LCD_ShowString(<span class="hljs-number">0</span>,<span class="hljs-number">240</span>,<span class="hljs-number">200</span>,<span class="hljs-number">16</span>,<span class="hljs-number">32</span>,(<span class="hljs-type">uint8_t</span> *)<span class="hljs-string">&quot; Print HEX!&quot;</span>);<br>    POINT_COLOR=BLUE;<br>    LCD_ShowString(<span class="hljs-number">0</span>,<span class="hljs-number">270</span>,<span class="hljs-number">200</span>,<span class="hljs-number">16</span>,<span class="hljs-number">16</span>,(<span class="hljs-type">uint8_t</span> *)<span class="hljs-string">&quot;Sketch has been&quot;</span>);<br>    LCD_ShowString(<span class="hljs-number">0</span>,<span class="hljs-number">300</span>,<span class="hljs-number">200</span>,<span class="hljs-number">16</span>,<span class="hljs-number">24</span>,(<span class="hljs-type">uint8_t</span> *)<span class="hljs-string">&quot;running for: &quot;</span>);<br>    POINT_COLOR=MAGENTA;<br>    LCD_ShowString(<span class="hljs-number">0</span>,<span class="hljs-number">330</span>,<span class="hljs-number">200</span>,<span class="hljs-number">16</span>,<span class="hljs-number">24</span>,(<span class="hljs-type">uint8_t</span> *)<span class="hljs-string">&quot; seconds.&quot;</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p>在main.c中声明这些用于测试的函数</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-type">void</span> <span class="hljs-title function_">LCD_TEST</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span>;<br><span class="hljs-type">void</span> <span class="hljs-title function_">testlines</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span>;<br><span class="hljs-type">void</span> <span class="hljs-title function_">testdrawrects</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span>;<br><span class="hljs-type">void</span> <span class="hljs-title function_">testfillcircles</span><span class="hljs-params">(<span class="hljs-type">uint8_t</span> radius)</span>;<br><span class="hljs-type">void</span> <span class="hljs-title function_">tftPrintTest</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span>;<br></code></pre></td></tr></table></figure><p>最后在主函数中对LCD初始化，在主循环中周期调用测试函数即可，具体源代码如下所示</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">/*主循环外程序*/</span><br><span class="hljs-comment">//这个延时在FSMC初始化之后LCD初始化之前，必须要有</span><br>HAL_Delay(<span class="hljs-number">50</span>);<br>LCD_Init();<br> <br><span class="hljs-comment">/*主循环内程序*/</span><br>LCD_TEST();<br>HAL_Delay(<span class="hljs-number">4000</span>);<br></code></pre></td></tr></table></figure><h1 id="4、烧录验证"><a href="#4、烧录验证" class="headerlink" title="4、烧录验证"></a>4、烧录验证</h1><p>烧录程序，开发板上电后，LCD会依次测试画线、画矩形、画圆和字符输出功能，具体现象如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/22.22.gif"></div><h1 id="5、注释详解"><a href="#5、注释详解" class="headerlink" title="5、注释详解"></a>5、注释详解</h1><p><em>注释1</em>：图片来源 STM32F4xx 中文参考手册 RM009</p><p><em>注释2</em>：图片来源 <a href="https://github.com/hampussandberg/HexConnect/wiki/LCD-ER_TFTM070_5">https://github.com/hampussandberg/HexConnect/wiki/LCD-ER_TFTM070_5</a></p><p><em>注释3</em>：图片来源 <a href="https://www.epubit.com/bookDetails?id=UB77e58e05a5ea9" title="STM32Cube高效开发教程（基础篇）">STM32Cube高效开发教程（基础篇）</a></p><p><em>注释4</em>：NT35510数据手册来源 <a href="https://www.waveshare.com/w/upload/a/a8/NT35510.pdf">https://www.waveshare.com/w/upload/a/a8/NT35510.pdf</a></p><p><em>注释5</em>：IL9341数据手册来源 <a href="https://cdn-shop.adafruit.com/datasheets/ILI9341.pdf">https://cdn-shop.adafruit.com/datasheets/ILI9341.pdf</a></p><p><em>注释6</em>：NT35510芯片LCD驱动程序来自正点原子</p>]]></content>
    
    
    
    <tags>
      
      <tag>STM32CubeMX</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>STM32CubeMX教程21 CAN - 双机通信</title>
    <link href="/2024/01/26/STM32CubeMX%E6%95%99%E7%A8%8B21-CAN-%E5%8F%8C%E6%9C%BA%E9%80%9A%E4%BF%A1/"/>
    <url>/2024/01/26/STM32CubeMX%E6%95%99%E7%A8%8B21-CAN-%E5%8F%8C%E6%9C%BA%E9%80%9A%E4%BF%A1/</url>
    
    <content type="html"><![CDATA[<h1 id="1、准备材料"><a href="#1、准备材料" class="headerlink" title="1、准备材料"></a>1、准备材料</h1><p>开发板（<a href="http://47.111.11.73/docs/boards/stm32/zdyz_stm32f407_explorerV3.html">正点原子stm32f407探索者开发板V2.4</a>）</p><p>STM32CubeMX软件（<a href="https://www.st.com/en/development-tools/stm32cubemx.html">Version 6.10.0</a>）</p><p><a href="https://doc.embedfire.com/stm32_products/must_read/zh/latest/doc/quickstart/DAP/DAP.html" title="野火DAP仿真器">野火DAP仿真器</a></p><p>keil µVision5 IDE（<a href="https://www.keil.com/download/product/">MDK-Arm</a>）</p><p><a href="https://www.st.com/zh/development-tools/stsw-link009.html">ST-LINK&#x2F;V2驱动</a></p><p>CH340G Windows系统驱动程序（<a href="http://www.wch.cn/downloads/CH341SER_EXE.html" title="CH341SER.EXE">CH341SER.EXE</a>）</p><p><a href="http://www.openedv.com/docs/tool/ruanjian/ATK-XCOM.html" title="XCOM V2.6串口助手">XCOM V2.6串口助手</a></p><h1 id="2、实验目标"><a href="#2、实验目标" class="headerlink" title="2、实验目标"></a>2、实验目标</h1><p>使用STM32CubeMX软件配置<font color="#fe2c24"><strong>两台STM32F407开发板的CAN1模块实现双机通信</strong></font></p><h1 id="3、实验流程"><a href="#3、实验流程" class="headerlink" title="3、实验流程"></a>3、实验流程</h1><h2 id="3-0、前提知识"><a href="#3-0、前提知识" class="headerlink" title="3.0、前提知识"></a>3.0、前提知识</h2><h3 id="3-0-1、CAN总体概述"><a href="#3-0-1、CAN总体概述" class="headerlink" title="3.0.1、CAN总体概述"></a>3.0.1、CAN总体概述</h3><p>STM32F407内部有两个CAN控制器，其中CAN1做为主CAN拥有所有的权限，而CAN2做为从CAN不能单独设置验证筛选器，每个CAN都有3个发送邮箱和两个接收FIFO，每个接收FIFO可以存储三条完整消息，具体的CAN框图如下图所示 <em>（注释1）</em></p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/21.1.png" width = "700"></div><p><font color="#fe2c24"><strong>CAN的总线网络结构有开环和闭环两种形式</strong></font></p><p>闭环网络结构下，两根信号线H&#x2F;L组成一个环路，在网络环路的两端连接120欧姆的电阻，这种网络是一种高速、短距离的CAN网络，通信速率最高1Mbit&#x2F;s；</p><p>开环网络结构下，两根信号线H&#x2F;L各自独立，在两根信号线上各自串联一个2.2千欧的电阻，这种网络是一种低速、远距离的CAN网络，通信速率最高125kbit&#x2F;s；</p><p>如下图所示为开环&#x2F;闭环的CAN总线网络结构 <em>（注释2）</em></p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/21.2.png" width = "700"></div><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/21.3.png" width = "700"></div><p>不管是开环还是闭环CAN网络结构都可以挂载多个节点，<font color="#fe2c24"><strong>CAN网络上的每个节点由CAN控制器和CAN收发器组成</strong></font>，STM32F407内部集成的是CAN控制器，因此硬件设计时需要外部搭载CAN收发器才可以组成一个完整的CAN节点，如下图所示为笔者使用的开发板上搭载的CAN收发器芯片硬件原理图</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/21.4.png" width = "700"></div><p>这里CAN收发器芯片的TX&#x2F;RX引脚并没有直接与单片机CAN1控制器的TX&#x2F;RX引脚相连接，而是通过了一个跳线帽来进行调节，<font color="#fe2c24"><strong>读者在做该实验的时候应该注意USB&#x2F;CAN排针座应该利用跳线帽将CAN_TX&#x2F;RX引脚与USB_D+&#x2F;D-进行短接</strong></font>，具体硬件原理图如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/21.23_add.png" width = "700"></div><h3 id="3-0-2、CAN位时序和波特率"><a href="#3-0-2、CAN位时序和波特率" class="headerlink" title="3.0.2、CAN位时序和波特率"></a>3.0.2、CAN位时序和波特率</h3><p><font color="#fe2c24"><strong>CAN通信是一种异步通信</strong></font>，异步通信的收发双方无时钟同步，因此需要确保收发双方发送&#x2F;接收一帧数据的帧格式和波特率保持一致，这样才能保证收发双方正确的进行通信</p><p>CAN1&#x2F;2挂载在APB1最高42MHz的时钟总线上，其一个<font color="#fe2c24"><strong>时间片</strong></font>的长度由PCLK1频率和CAN分频参数决定，假设PCLK1频率为25MHz，CAN分频参数位5，则一个时间片的长度为5&#x2F;25Mhz&#x3D;0.0000002s&#x3D;0.0002ms&#x3D;0.2us&#x3D;200ns</p><p>CAN网络上一个节点采集一个位数据的时序叫做<font color="#fe2c24"><strong>位时序</strong></font>，位时序由同步段（SYNC_SEG）、位段 1（BS1）和位段2（BS2）三段组成，其中同步段固定为一个时间片，在该段总线上应该发生一次位信号的跳变；位段1定义了采样点的位置，其可以是1-16个时间片；位段2定义了发送点的位置，其可以是1-8个时间片；</p><p>除了上面几个可调节的参数外，CAN还有一个再同步跳转宽度（SJW）参数可以调节，其取值可以是1-4个时间片，通过调节该参数长短决定了CAN再同步时自动调节位段1和位段2长度缩短&#x2F;加长的上限，此处笔者未深究该参数</p><p>通过调节<font color="#fe2c24"><strong>时钟分频、位段1、位段2和再同步跳转宽度SJW</strong></font>四个参数，就可以确定CAN通信的波特率，如下图所示位位序数的结构图 <em>（注释1）</em></p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/21.5.png" width = "700"></div><h3 id="3-0-3、CAN帧格式"><a href="#3-0-3、CAN帧格式" class="headerlink" title="3.0.3、CAN帧格式"></a>3.0.3、CAN帧格式</h3><p><font color="#fe2c24"><strong>CAN通信过程中共有数据帧、遥控帧、错误帧、过载帧和帧间空间五种不同用途的帧</strong></font>，其中数据帧和遥控帧又有标准格式的帧和扩展格式的帧两种，数据帧可以理解为CAN网络上的节点发送消息ID+要发送的数据，遥控帧可以理解为CAN网络上某个节点需要另外一个节点的数据，收到遥控帧的节点就发送对应的数据给请求数据的节点，这里不详细介绍每个帧的格式，想要知道具体帧格式的读者请阅读其他文章，如下图所示为CAN数据&#x2F;遥控帧一帧的结构图 <em>（注释1）</em></p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/21.6.png" width = "700"></div><p>在HAL库中有一个CAN发送消息头结构体CAN_TxHeaderTypeDef，以下为结构体内主要定义参数</p><ol><li>IDE（帧格式）：可选参数CAN_ID_STD（标准格式帧）和CAN_ID_EXT（扩展格式帧）</li><li>StdId（标准格式帧ID）：可选值范围0-0x7FF（11位）</li><li>ExtId（扩展格式帧ID）：可选值范围0-0x1FFF FFFF（29位，其中标准11位+扩展18位）</li><li>RTR（帧类型）：可选参数CAN_RTR_DATA（数据帧）和CAN_RTR_REMOTE（遥控帧）</li><li>DLC（发送数据的长度）：可选值范围0-8</li><li>TransmitGlobalTime（传输时间戳使能）：ENABLE&#x2F;DISABLE</li></ol><h3 id="3-0-4、CAN验收筛选器"><a href="#3-0-4、CAN验收筛选器" class="headerlink" title="3.0.4、CAN验收筛选器"></a>3.0.4、CAN验收筛选器</h3><p>CAN网络上的所有节点没有地址的概念，因此当某个节点发送了特定ID的一条数据帧的时候，所有节点都会收到该帧消息，但是该帧应该只被需要接收该帧的节点接收，而其他不需要接收该数据帧的节点应该自动筛除掉该消息，减少资源浪费，<font color="#fe2c24"><strong>那一个节点如何判断是否应该接收该帧呢？</strong></font></p><p><font color="#fe2c24"><strong>配置CAN控制器的验收筛选器</strong></font>，STM32F407的CAN提供了28个可调整&#x2F;可配置的标识符筛选器组，注意CAN1&#x2F;2共用这个标识符筛选器组，而且CAN2不能够单独直接配置，需要使用CAN1来配置，这里的筛选功能为硬件筛选功能，无需软件筛选，可以节省软件筛选所需的CPU资源</p><p><font color="#fe2c24"><strong>筛选器可配置为掩码模式或标识符列表模式</strong></font>，在掩码模式下，标识符寄存器与掩码寄存器关联，用以指示标识符的哪些位“必须匹配”，哪些位“无关”</p><p>在HAL库中有一个CAN过滤器配置结构体CAN_FilterTypeDef用于配置筛选器，以下为结构体内主要定义参数</p><ol><li>FilterMode（筛选器模式）：可选参数CAN_FILTERMODE_IDMASK（掩码模式）和CAN_FILTERMODE_IDLIST（标识符列表模式）</li><li>FilterBank（筛选器组）：指定将初始化的筛选器组，单CAN时参数范围0-13，双CAN时参数范围0-27</li><li>FilterFIFOAssignment（分配给筛选器的FIFO）：指定分配给过筛选器的FIFO0&#x2F;1，可选参数CAN_FILTER_FIFO0（FIFO0）和CAN_FILTER_FIFO1（FIFO1）</li><li>FilterScale（筛选器宽度）：CAN_FILTERSCALE_16BIT（两个16位）和CAN_FILTERSCALE_32BIT（一个32位）</li><li>FilterActivation（筛选器使能）：CAN_FILTER_DISABLE（不使能）和CAN_FILTER_ENABLE（使能）</li><li>FilterIdHigh（CAN_FxR1 的高16位）：在32位的屏蔽位模式下，用于指定这些位的标准值</li><li>FilterIdLow（CAN_FxR1 的低16位）：在32位的屏蔽位模式下，用于指定这些位的标准值</li><li>FilterMaskIdHigh（CAN_FxR2的高16位）：在32位的屏蔽位模式下，用于指定需要关心哪些位</li><li>FilterMaskIdLow（CAN_FxR2的低16位）：在32位的屏蔽位模式下，用于指定需要关心哪些位</li></ol><p>这一部分很重要，不配置筛选器则CAN不能正常接收数据，具体配置请阅读本实验3.2.3小节程序,这里笔者自认为讲的不是很到位，读者可以阅读“<a href="https://blog.csdn.net/jixiangrurui/article/details/39370027">STM32 CAN 过滤器、滤波屏蔽器配置总结</a>”文章</p><h3 id="3-0-5、CAN工作模式"><a href="#3-0-5、CAN工作模式" class="headerlink" title="3.0.5、CAN工作模式"></a>3.0.5、CAN工作模式</h3><p>CAN1&#x2F;2有工作模式和测试模式两种模式，工作模式中又包括初始化模式、正常模式和睡眠模式三种，测试模式中包括静默模式、环回模式和环回与静默组合模式三种，测试模式主要用于测试单个CAN是否工作正常，本实验主要实现双机通信，因此CAN工作在正常模式即可，由于内容太多这里不再详细介绍，具体内容可参考STM32F4xx 参考手册 RM009，如下图所示为测试模式下结构示意图 <em>（注释1）</em></p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/21.7.png" width = "700"></div><h3 id="3-0-6、CAN发送和接收流程"><a href="#3-0-6、CAN发送和接收流程" class="headerlink" title="3.0.6、CAN发送和接收流程"></a>3.0.6、CAN发送和接收流程</h3><p>CAN1&#x2F;2均有3个邮箱可以发送数据，当用户发送数据时只需要<font color="#fe2c24"><strong>利用CAN_TxHeaderTypeDef结构体生成要发送的帧（具体可阅读本实验3.0.3小节），然后使用HAL_CAN_AddTxMessage()函数将生成的帧添加到邮箱即可</strong></font>，如果此时有空闲邮箱那么邮箱就会被挂起，当该邮箱具有最高优先级的时候就会安排发送出去，发送出去的过程完全由硬件实现，用户只需按要求生成帧，然后放入空闲邮箱即可，如下图所示为发送邮箱状态流程图 <em>（注释1）</em></p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/21.8.png" width = "700"></div><p>CAN1&#x2F;2均有两个接收FIFO，每个接收FIFO都有三级深度，通俗理解就是有三个邮箱，可以接收三条信息，当发送的信息通过某个CAN网络上的节点验收筛选器成为一条有效信息时，那么该消息就会被该节点的CAN接收FIFO接收，同时该FIFO的接收0会被挂起，如果持续收到消息，该FIFO的接收1&#x2F;2也会被挂起，直到三个邮箱全部用完，如果开启了CAN RX接收中断，那么当FIFO接收0&#x2F;1&#x2F;2&#x2F;被挂起时会进入对应的中断服务回调函数中，<font color="#fe2c24"><strong>当使用HAL_CAN_GetRxMessage()函数读取掉接收FIFO0&#x2F;1的某级深度的消息时，该级别邮箱将会被释放</strong></font>，方便接收下一条消息，如下图所示为接收FIFO状态流程图 <em>（注释1）</em></p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/21.9.png" width = "700"></div><p>值得提醒的是，<font color="#fe2c24"><strong>在本实验中由于笔者使用了两个一摸一样的开发板，因此下面配置的一套程序可以直接烧录到两个开发板上就可以通信</strong></font>，但是如果读者使用了不一样的开发板，每个板子的配置流程和下述流程一模一样，但请注意调节时钟树和CAN的参数配置时将两个开发板的CAN通信波特率调节为一致，两个开发板的连接应该如下图所示连接 <em>（注释4）</em></p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/21.10.png" width = "700"></div><p>另外就是尽量使用CAN1作为通信CAN，因为在STM32F407的两个CAN中CAN1为主CAN，本实验使用CAN2可能在接收信息时存在问题（大概率笔者没有彻底了解到应该对CAN2如何正确配置），读者可以自行尝试</p><h2 id="3-1、CubeMX相关配置"><a href="#3-1、CubeMX相关配置" class="headerlink" title="3.1、CubeMX相关配置"></a>3.1、CubeMX相关配置</h2><h3 id="3-1-0、工程基本配置"><a href="#3-1-0、工程基本配置" class="headerlink" title="3.1.0、工程基本配置"></a>3.1.0、工程基本配置</h3><p>打开STM32CubeMX软件，单击ACCESS TO MCU SELECTOR选择开发板MCU（选择你使用开发板的主控MCU型号），选中MCU型号后单击页面右上角Start Project开始工程，具体如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/21.11.png" width = "700"></div><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/21.12.png" width = "700"></div><p>开始工程之后在配置主页面System Core&#x2F;RCC中配置HSE&#x2F;LSE晶振，在System Core&#x2F;SYS中配置Debug模式，具体如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/21.13.png" width = "700"></div><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/21.14.png" width = "700"></div><p>详细工程建立内容读者可以阅读“<a href="https://www.cnblogs.com/lc-guo/p/17937268">STM32CubeMX教程1 工程建立</a>”</p><h3 id="3-1-1、时钟树配置"><a href="#3-1-1、时钟树配置" class="headerlink" title="3.1.1、时钟树配置"></a>3.1.1、时钟树配置</h3><p>本实验时钟树建议按照下图所示将MCU时钟频率配置为100MHz，APB1时钟频率配置为25MHz，这样设置是为了能够得到一个整数的时间片，当然也可以和之前的实验类似，将所有总线频率均设置为最高频率</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/21.15.png" width = "700"></div><h3 id="3-1-2、外设参数配置"><a href="#3-1-2、外设参数配置" class="headerlink" title="3.1.2、外设参数配置"></a>3.1.2、外设参数配置</h3><p>本实验需要初始化开发板上KEY2用户按键做普通输入，具体配置步骤请阅读“<a href="https://www.cnblogs.com/lc-guo/p/17938621">STM32CubeMX教程3 GPIO输入 - 按键响应</a>”</p><p>本实验需要需要初始化USART2作为输出信息渠道，具体配置步骤请阅读“<a href="https://www.cnblogs.com/lc-guo/p/17950348">STM32CubeMX教程9 USART&#x2F;UART 异步通信</a>”</p><p>单击Pinout &amp; Configuration页面左边Connectivity&#x2F;CAN1，在Mode中勾选Activated激活CAN1，在其下方的参数配置栏目中按照图示参数配置即可，位时序参数详解可以阅读本实验“3.0.2、CAN位时序和波特率”小节</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/21.16.png" width = "700"></div><h3 id="3-1-3、外设中断配置"><a href="#3-1-3、外设中断配置" class="headerlink" title="3.1.3、外设中断配置"></a>3.1.3、外设中断配置</h3><p>在Pinout &amp; Configuration页面左边System Core&#x2F;NVIC中<font color="#fe2c24"><strong>勾选CAN1 TX interrupts和CAN1 RX0 interrupts发送接收两个中断</strong></font>，然后选择合适的中断优先级即可，具体如配置下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/21.17.png" width = "700"></div><h2 id="3-2、生成代码"><a href="#3-2、生成代码" class="headerlink" title="3.2、生成代码"></a>3.2、生成代码</h2><h3 id="3-2-0、配置Project-Manager页面"><a href="#3-2-0、配置Project-Manager页面" class="headerlink" title="3.2.0、配置Project Manager页面"></a>3.2.0、配置Project Manager页面</h3><p>单击进入Project Manager页面，在左边Project分栏中修改工程名称、工程目录和工具链，然后在Code Generator中勾选“Gnerate peripheral initialization as a pair of ‘c&#x2F;h’ files per peripheral”，最后单击页面右上角GENERATE CODE生成工程，具体如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/21.18.png" width = "700"></div><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/21.19.png" width = "700"></div><p>详细Project Manager配置内容读者可以阅读“<a href="https://www.cnblogs.com/lc-guo/p/17937268">STM32CubeMX教程1 工程建立</a>”实验3.4.3小节</p><h3 id="3-2-1、外设初始化调用流程"><a href="#3-2-1、外设初始化调用流程" class="headerlink" title="3.2.1、外设初始化调用流程"></a>3.2.1、外设初始化调用流程</h3><p>在生成的工程代码中新增加了MX_CAN1_Init()函数，该函数对CAN1的参数进行了配置，并调用了CAN初始化函数HAL_CAN_Init()</p><p>在该CAN初始化函数HAL_CAN_Init()中调用了HAL_CAN_MspInit()函数对外设CAN1所需要的时钟使能，引脚复用和中断进行了配置</p><p>CAN1具体初始化调用流程如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/21.20.png" width = "700"></div><h3 id="3-2-2、外设中断调用流程"><a href="#3-2-2、外设中断调用流程" class="headerlink" title="3.2.2、外设中断调用流程"></a>3.2.2、外设中断调用流程</h3><p>在STM32CubeMX中勾选CAN1的TX中断和RX0中断后，会在生成的工程代码stm32f4xx_it.c中新增CAN1_TX_IRQHandler()和CAN1_RX0_IRQHandler()中断服务函数</p><p>这两个中断服务函数均调用了HAL库的CAN中断统一处理函数HAL_CAN_IRQHandler()，在该函数中<font color="#fe2c24"><strong>当CAN1邮箱0发送完成消息后会调用HAL_CAN_TxMailbox0CompleteCallback()函数，当CAN1FIFO0消息挂起时会调用HAL_CAN_RxFifo0MsgPendingCallback()函数</strong></font>，这两个函数均为虚函数，需要用户重新实现</p><p>CAN1接收&#x2F;发送中断具体调用流程如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/21.21.png" width = "700"></div><h3 id="3-2-3、添加其他必要代码"><a href="#3-2-3、添加其他必要代码" class="headerlink" title="3.2.3、添加其他必要代码"></a>3.2.3、添加其他必要代码</h3><p>在can.c中添加FIFO0的消息筛选器函数CAN_SetFilters()，然后添加CAN发送数据测试函数CAN1_Send_Test()，具体源代码如下所示 <em>（注释3）</em></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">//设置筛选器,要在完成CAN初始化之后调用此函数</span><br>HAL_StatusTypeDef <span class="hljs-title function_">CAN_SetFilters</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span><br>&#123;<br>    CAN_FilterTypeDefcanFilter;                      <span class="hljs-comment">//筛选器结构体变量</span><br>     <span class="hljs-comment">// Configure the CAN Filter</span><br>    canFilter.FilterBank = <span class="hljs-number">0</span>;                    <span class="hljs-comment">//筛选器组编号</span><br>    canFilter.FilterMode = CAN_FILTERMODE_IDMASK;    <span class="hljs-comment">//ID掩码模式</span><br>    canFilter.FilterScale = CAN_FILTERSCALE_32BIT;    <span class="hljs-comment">//32位长度</span><br>    <span class="hljs-comment">//设置1：接收所有帧</span><br>    <span class="hljs-comment">//  canFilter.FilterIdHigh = 0x0000;            //CAN_FxR1 的高16位</span><br>    <span class="hljs-comment">//canFilter.FilterIdLow = 0x0000;            //CAN_FxR1 的低16位</span><br>    <span class="hljs-comment">//canFilter.FilterMaskIdHigh = 0x0000;            //CAN_FxR2的高16位。所有位任意</span><br>    <span class="hljs-comment">//canFilter.FilterMaskIdLow = 0x0000;            //CAN_FxR2的低16位，所有位任意</span><br>    <span class="hljs-comment">//设置2：只接收stdID为奇数的帧</span><br>    canFilter.FilterIdHigh = <span class="hljs-number">0x0020</span>;            <span class="hljs-comment">//CAN_FxR1 的高16位</span><br>    canFilter.FilterIdLow = <span class="hljs-number">0x0000</span>;            <span class="hljs-comment">//CAN_FxR1 的低16位</span><br>    canFilter.FilterMaskIdHigh = <span class="hljs-number">0x0020</span>;            <span class="hljs-comment">//CAN_FxR2的高16位</span><br>    canFilter.FilterMaskIdLow = <span class="hljs-number">0x0000</span>;            <span class="hljs-comment">//CAN_FxR2的低16位</span><br>    <br>    canFilter.FilterFIFOAssignment = CAN_RX_FIFO0;<span class="hljs-comment">//应用于FIFO0</span><br>    canFilter.FilterActivation = ENABLE;        <span class="hljs-comment">//使用筛选器</span><br>    canFilter.SlaveStartFilterBank = <span class="hljs-number">14</span>;        <span class="hljs-comment">//从CAN控制器筛选器起始的Bank</span><br>    HAL_StatusTypeDef result=HAL_CAN_ConfigFilter(&amp;hcan1, &amp;canFilter);<br>    <span class="hljs-keyword">return</span> result;<br>&#125;<br> <br><span class="hljs-comment">/*CAN发送数据测试函数*/</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">CAN1_Send_Test</span><span class="hljs-params">(<span class="hljs-type">uint32_t</span> msgid, <span class="hljs-type">uint8_t</span> *data)</span><br>&#123;<br>    TxMessage.IDE = CAN_ID_STD;                         <span class="hljs-comment">//设置ID类型</span><br>    TxMessage.StdId = msgid;                            <span class="hljs-comment">//设置ID号</span><br>    TxMessage.RTR = CAN_RTR_DATA;                       <span class="hljs-comment">//设置传送数据帧</span><br>    TxMessage.DLC = <span class="hljs-number">4</span>;                                  <span class="hljs-comment">//设置数据长度</span><br>    <span class="hljs-keyword">if</span>(HAL_CAN_AddTxMessage(&amp;hcan1, &amp;TxMessage, data, &amp;TxMailbox) != HAL_OK) <br>    &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;CAN send test data fail!\r\n&quot;</span>);<br>        Error_Handler();<br>    &#125;<br>&#125;<br><br>在can.c中重新实现CAN接收/发送中断处理函数，具体源代码如下所示<br><br><span class="hljs-comment">/*CAN接收FIFO0挂起中断处理函数*/</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">HAL_CAN_RxFifo0MsgPendingCallback</span><span class="hljs-params">(CAN_HandleTypeDef *hcan)</span><br>&#123;<br>    <span class="hljs-type">uint8_t</span>  data[<span class="hljs-number">8</span>];<br>    HAL_StatusTypeDef status;<br>    <span class="hljs-keyword">if</span>(hcan == &amp;hcan1) <br>    &#123;<br>        status = HAL_CAN_GetRxMessage(hcan, CAN_RX_FIFO0, &amp;RxMessage, data);<br>        <span class="hljs-keyword">if</span> (HAL_OK == status)<br>        &#123;                             <br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;---&gt;Data Receieve!\r\n&quot;</span>);<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;RxMessage.StdId is %#x\r\n&quot;</span>, RxMessage.StdId);<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;data[0] is 0x%02x\r\n&quot;</span>, data[<span class="hljs-number">0</span>]);<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;data[1] is 0x%02x\r\n&quot;</span>, data[<span class="hljs-number">1</span>]);<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;data[2] is 0x%02x\r\n&quot;</span>, data[<span class="hljs-number">2</span>]);<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;data[3] is 0x%02x\r\n&quot;</span>, data[<span class="hljs-number">3</span>]);<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;&lt;---\r\n&quot;</span>);<br>        &#125;<br>    &#125;<br>&#125;<br> <br><span class="hljs-comment">/*CAN发送完成中断处理函数*/</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">HAL_CAN_TxMailbox0CompleteCallback</span><span class="hljs-params">(CAN_HandleTypeDef *hcan)</span><br>&#123;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;---&gt;Into TxMailbox0CompleteCallback Function!\r\n&quot;</span>);<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;---&gt;CAN send test data success!\r\n\r\n&quot;</span>);<br>&#125;<br><br>在main.c主函数中设置CAN接收筛选器，启动CAN，使能中断，然后再主循环中实现按键控制，每当按键KEY2按下时就调用CAN1_Send_Test()函数发送数据<br><br>具体源代码如下所示<br><br><span class="hljs-comment">/*主循环外程序*/</span><br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;----- CAN Test Board #1 -----\r\n&quot;</span>);<br><span class="hljs-comment">//设置筛选器</span><br><span class="hljs-keyword">if</span> (CAN_SetFilters() == HAL_OK)   <br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;ID Filter: Only Odd IDs\r\n&quot;</span>);<br><span class="hljs-comment">//启动CAN1模块</span><br><span class="hljs-keyword">if</span> (HAL_CAN_Start(&amp;hcan1) == HAL_OK)  <br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;CAN is started\r\n&quot;</span>);<br><span class="hljs-comment">//启用CAN发送/接收中断</span><br><span class="hljs-keyword">if</span>(HAL_CAN_ActivateNotification(&amp;hcan1, CAN_IT_RX_FIFO0_MSG_PENDING | CAN_IT_TX_MAILBOX_EMPTY) != HAL_OK) <br>&#123;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;CAN_IT_RX_FIFO0_MSG_PENDING Enable Fail\r\n&quot;</span>);<br>        Error_Handler();<br>&#125;<br><span class="hljs-type">uint32_t</span> msg_id=<span class="hljs-number">0</span>;<br><span class="hljs-type">uint8_t</span> data[<span class="hljs-number">4</span>] = &#123;<span class="hljs-number">0x01</span>, <span class="hljs-number">0x02</span>, <span class="hljs-number">0x03</span>, <span class="hljs-number">0x04</span>&#125;;<br> <br> <br><span class="hljs-comment">/*主循环内程序*/</span><br><span class="hljs-comment">/*按键KEY2按下*/</span><br><span class="hljs-keyword">if</span>(HAL_GPIO_ReadPin(KEY2_GPIO_Port,KEY2_Pin) == GPIO_PIN_RESET)<br>&#123;<br>    HAL_Delay(<span class="hljs-number">50</span>);<br>    <span class="hljs-keyword">if</span>(HAL_GPIO_ReadPin(KEY2_GPIO_Port,KEY2_Pin) == GPIO_PIN_RESET)<br>    &#123;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">uint16_t</span> i =<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">4</span>;i++)<br>            data[i]++;<br> <br>        CAN1_Send_Test(msg_id++,data);<br>        <span class="hljs-keyword">while</span>(!HAL_GPIO_ReadPin(KEY2_GPIO_Port,KEY2_Pin));<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>最后将在can.c中定义的消息筛选器函数、发送数据测试函数在can.h中声明即可，具体源代码如下所示</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">/*can.h中函数声明*/</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">CAN1_Send_Test</span><span class="hljs-params">(<span class="hljs-type">uint32_t</span> msgid, <span class="hljs-type">uint8_t</span> *data)</span>;<br>HAL_StatusTypeDef <span class="hljs-title function_">CAN_SetFilters</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span>;<br></code></pre></td></tr></table></figure><h1 id="4、常用函数"><a href="#4、常用函数" class="headerlink" title="4、常用函数"></a>4、常用函数</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">/*CAN开始通信*/</span><br>HAL_StatusTypeDef <span class="hljs-title function_">HAL_CAN_Start</span><span class="hljs-params">(CAN_HandleTypeDef *hcan)</span><br> <br><span class="hljs-comment">/*CAN停止通信*/</span><br>HAL_StatusTypeDef <span class="hljs-title function_">HAL_CAN_Stop</span><span class="hljs-params">(CAN_HandleTypeDef *hcan)</span><br> <br><span class="hljs-comment">/*获取当前空闲邮箱数量*/</span><br><span class="hljs-type">uint32_t</span> <span class="hljs-title function_">HAL_CAN_GetTxMailboxesFreeLevel</span><span class="hljs-params">(<span class="hljs-type">const</span> CAN_HandleTypeDef *hcan)</span><br> <br><span class="hljs-comment">/*请求发送相应的邮箱内容*/</span><br>HAL_StatusTypeDef <span class="hljs-title function_">HAL_CAN_AddTxMessage</span><span class="hljs-params">(CAN_HandleTypeDef *hcan, <span class="hljs-type">const</span> CAN_TxHeaderTypeDef *pHeader,<span class="hljs-type">const</span> <span class="hljs-type">uint8_t</span> aData[], <span class="hljs-type">uint32_t</span> *pTxMailbox)</span><br> <br><span class="hljs-comment">/*获取FIFO中挂起的消息数*/</span><br><span class="hljs-type">uint32_t</span> <span class="hljs-title function_">HAL_CAN_GetRxFifoFillLevel</span><span class="hljs-params">(<span class="hljs-type">const</span> CAN_HandleTypeDef *hcan, <span class="hljs-type">uint32_t</span> RxFifo)</span><br> <br><span class="hljs-comment">/*读取FIFI中挂起的消息信息并释放邮箱*/</span><br>HAL_StatusTypeDef <span class="hljs-title function_">HAL_CAN_GetRxMessage</span><span class="hljs-params">(CAN_HandleTypeDef *hcan, <span class="hljs-type">uint32_t</span> RxFifo,CAN_RxHeaderTypeDef *pHeader, <span class="hljs-type">uint8_t</span> aData[])</span><br> <br><span class="hljs-comment">/*CAN发送完成中断处理函数*/</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">HAL_CAN_TxMailbox0CompleteCallback</span><span class="hljs-params">(CAN_HandleTypeDef *hcan)</span><br> <br><span class="hljs-comment">/*CAN接收中断处理函数*/</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">HAL_CAN_RxFifo0MsgPendingCallback</span><span class="hljs-params">(CAN_HandleTypeDef *hcan)</span><br></code></pre></td></tr></table></figure><h1 id="5、烧录验证"><a href="#5、烧录验证" class="headerlink" title="5、烧录验证"></a>5、烧录验证</h1><p>烧录程序，开发板1&#x2F;2上电后均显示CAN初始化成功可以开始通信</p><p>当第一次按下开发板1的KEY2按键，此时串口输出进入CAN发送完成中断处理函数中并成功发送信息的提示，但是开发板2并没有接收消息（因为开发板1&#x2F;2均设置了只接收stdID为奇数的帧）</p><p>当第二次按下开发板1的KEY2按键时，可以发现开发板2收到了消息，并将接收到的消息打印了出来，具体实验现象如下图所示（左边为开发板1，右边为开发板2）</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/21.22.gif" width = "700"></div><h1 id="6、注释详解"><a href="#6、注释详解" class="headerlink" title="6、注释详解"></a>6、注释详解</h1><p><em>注释1</em>：图片来源 STM32F4xx 中文参考手册 RM009</p><p><em>注释2</em>：图片来源 <a href="https://www.cnblogs.com/Xa-L/p/15155158.html" title="通信——CAN总线基础介绍">通信——CAN总线基础介绍</a></p><p><em>注释3</em>：在CAN发送测试函数末尾不要使用printf输出，如果非要使用请在使用前进行1ms延时，否则可能进不去发送完成函数HAL_CAN_TxMailbox0CompleteCallback中</p><p><em>注释4</em>：图片来源 <a href="http://news.eeworld.com.cn/mcu/ic543344.html" title="STM32CubeMX | 36 - 使用CAN总线进行双板通信（TJA1050）">STM32CubeMX | 36 - 使用CAN总线进行双板通信（TJA1050）</a></p><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p><a href="https://www.epubit.com/bookDetails?id=UB77e58e05a5ea9">STM32Cube高效开发教程（基础篇）</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>STM32CubeMX</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>STM32CubeMX教程20 SPI - W25Q128驱动</title>
    <link href="/2024/01/26/STM32CubeMX%E6%95%99%E7%A8%8B20-SPI-W25Q128%E9%A9%B1%E5%8A%A8/"/>
    <url>/2024/01/26/STM32CubeMX%E6%95%99%E7%A8%8B20-SPI-W25Q128%E9%A9%B1%E5%8A%A8/</url>
    
    <content type="html"><![CDATA[<h1 id="1、准备材料"><a href="#1、准备材料" class="headerlink" title="1、准备材料"></a>1、准备材料</h1><p>开发板（<a href="http://47.111.11.73/docs/boards/stm32/zdyz_stm32f407_explorerV3.html">正点原子stm32f407探索者开发板V2.4</a>）</p><p>STM32CubeMX软件（<a href="https://www.st.com/en/development-tools/stm32cubemx.html">Version 6.10.0</a>）</p><p><a href="https://doc.embedfire.com/stm32_products/must_read/zh/latest/doc/quickstart/DAP/DAP.html" title="野火DAP仿真器">野火DAP仿真器</a></p><p>keil µVision5 IDE（<a href="https://www.keil.com/download/product/">MDK-Arm</a>）</p><p><a href="https://www.st.com/zh/development-tools/stsw-link009.html">ST-LINK&#x2F;V2驱动</a></p><p><a href="http://www.openedv.com/docs/tool/ruanjian/ATK-XCOM.html" title="XCOM V2.6串口助手">XCOM V2.6串口助手</a></p><p>逻辑分析仪<a href="https://github.com/wuxx/nanoDLA" title="nanoDLA">nanoDLA</a></p><h1 id="2、实验目标"><a href="#2、实验目标" class="headerlink" title="2、实验目标"></a>2、实验目标</h1><p>使用STM32CubeMX软件配置STM32F407开发板的<font color="#fe2c24"><strong>SPI1与W25Q128芯片通信，以轮询方式读写W25Q128 FLASH芯片，并通过USART1输出相关信息</strong></font>，具体为使用开发板上的三个用户按键KEY0&#x2F;1&#x2F;2，分别实现对W25Q128芯片写数据&#x2F;读数据&#x2F;擦除数据的操作，操作过程中与用户的交互由USART1输出信息来实现</p><h1 id="3、实验流程"><a href="#3、实验流程" class="headerlink" title="3、实验流程"></a>3、实验流程</h1><h2 id="3-0、前提知识"><a href="#3-0、前提知识" class="headerlink" title="3.0、前提知识"></a>3.0、前提知识</h2><p><font color="#fe2c24"><strong>本实验重点是理解标准SPI通信协议</strong></font>，而STM32CubeMX的配置则相对简单，这里不会过于详细全面的介绍SPI通信协议，但是会对所有需要知道的知识做介绍</p><p><font color="#fe2c24"><strong>标准SPI通信协议由时钟信号线SCK、主设备输出从设备输入MOSI和主设备输入从设备输出MISO三根线组成</strong></font>，与I2C通信协议不同，挂载在SPI总线上的外围器件不需要有从设备地址，而是由片选CS&#x2F;SS信号选择从机设备，<font color="#fe2c24"><strong>当片选信号为低电平时，表示该从设备被选中</strong></font>，此时主设备通过SCK、MOSI与MISO三根线与该从设备之间进行通信和数据传输，如下所示为SPI总线连接图 <em>（注释1）</em></p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/20.1.png" width = "700"></div><p>本实验所使用的开发板上有一颗FLASH芯片W25Q128，STM32F407通过PB3（SPI1_SCK）、PB4（SPI1_MISO）和PB5（SPI1_MOSI）三个引脚利用标准SPI协议与其进行通信和数据传输，W25Q128的片选信号选择了MCU的PB14引脚，如下图所示为其硬件原理图</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/20.2.png" width = "700"></div><p><font color="#fe2c24"><strong>SPI通信协议的时序根据CPOL（时钟极性）和CPHA（时钟相位）两个寄存器位的不同一共有四种组合模式</strong></font></p><p>时钟极性CPOL位用来控制SCK引脚在空闲状态时的电平，当该位为0时则表示空闲时刻SCK为低电平，反之为高电平</p><p>时钟相位CPHA位用来控制在SCK信号的第几个边沿处采集信号，当该位为0时表示在SCK型号的第一个边沿处采集信号，反之则表示在第二个边沿处采集信号</p><p>如下图所示为根据CPOL和CPHA位取不同值时SPI通信协议的四种时序图 <em>（注释2）</em></p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/20.3.png" width = "700"></div><p>使用逻辑分析仪对STM32F407 SPI1通信SCLK、MISO、MOSI和CS四个引脚进行逻辑电平监测，可以发现在执行读取W25Q128芯片ID操作的过程中，其四个引脚的时序与我们所介绍的一致</p><p>如下图所示为执行读取W25Q128芯片ID操作所使用的程序、CPOL&#x3D;0 CPHA&#x3D;0时SPI通信采集到的时序和CPOL&#x3D;1 CPHA&#x3D;1时SPI通信采集到的时序</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/20.4.png" width = "700"></div><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/20.5.png" width = "700"></div><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/20.6.png" width = "700"></div><h2 id="3-1、CubeMX相关配置"><a href="#3-1、CubeMX相关配置" class="headerlink" title="3.1、CubeMX相关配置"></a>3.1、CubeMX相关配置</h2><h3 id="3-1-0、工程基本配置"><a href="#3-1-0、工程基本配置" class="headerlink" title="3.1.0、工程基本配置"></a>3.1.0、工程基本配置</h3><p>打开STM32CubeMX软件，单击ACCESS TO MCU SELECTOR选择开发板MCU（选择你使用开发板的主控MCU型号），选中MCU型号后单击页面右上角Start Project开始工程，具体如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/20.7.png" width = "700"></div><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/20.8.png" width = "700"></div><p>开始工程之后在配置主页面System Core&#x2F;RCC中配置HSE&#x2F;LSE晶振，在System Core&#x2F;SYS中配置Debug模式，具体如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/20.9.png" width = "700"></div><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/20.10.png" width = "700"></div><p>详细工程建立内容读者可以阅读“<a href="https://www.cnblogs.com/lc-guo/p/17937268">STM32CubeMX教程1 工程建立</a>”</p><h3 id="3-1-1、时钟树配置"><a href="#3-1-1、时钟树配置" class="headerlink" title="3.1.1、时钟树配置"></a>3.1.1、时钟树配置</h3><p>系统时钟使用8MHz外部高速时钟HSE，HCLK、PCLK1和PCLK2均设置为STM32F407能达到的最高时钟频率，具体如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/20.11.png" width = "700"></div><h3 id="3-1-2、外设参数配置"><a href="#3-1-2、外设参数配置" class="headerlink" title="3.1.2、外设参数配置"></a>3.1.2、外设参数配置</h3><p>此实验主要是利用SPI通信协议与W25Q128芯片进行通信和数据传输，并且需要串口将读取的数据输出给用户，同时还需要三个用户按键KEY0&#x2F;1&#x2F;2&#x2F;，因此外设需要初始化KEY0&#x2F;1&#x2F;2、USART1和SPI1</p><p>按键初始化操作请阅读“<a href="https://www.cnblogs.com/lc-guo/p/17938621">STM32CubeMX教程3 GPIO输入 - 按键响应</a>”实验</p><p>单击Pinout &amp; Configuration页面左边Connectivity&#x2F;USART1选项，然后按照“<a href="https://www.cnblogs.com/lc-guo/p/17950348">STM32CubeMX教程9 USART&#x2F;UART 异步通信</a>”实验中将USART1配置为异步通信模式，无需开启中断，如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/20.12.png" width = "700"></div><p>单击Pinout &amp; Configuration页面左边Connectivity&#x2F;SPI1选项，<font color="#fe2c24"><strong>Mode选择全双工主机模式，不需要硬件片选，时钟分频选择16分频</strong></font>，根据W25Q128的数据手册 <em>（注释3）</em>，读数据指令支持的最高频率为33MHz，因此适当降低频率确保通信不会出现错误，其他参数配置默认即可，具体配置如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/20.13.png" width = "700"></div><p>然后在右边芯片引脚预览Pinout view中找到W25Q128芯片的<font color="#fe2c24"><strong>片选引脚PB14，左键单击并配置其功能为GPIO_Ouput</strong></font>，然后单击System Core&#x2F;GPIO，配置PB14引脚默认输出电平高，推挽输出，无上下拉，IO速度非常高，具体配置如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/20.14.png" width = "700"></div><h3 id="3-1-3、外设中断配置"><a href="#3-1-3、外设中断配置" class="headerlink" title="3.1.3、外设中断配置"></a>3.1.3、外设中断配置</h3><p>本实验无需启用中断，如果需要启用SPI1的中断，请单击System Core&#x2F;NVIC，然后根据需求勾选SP1全局中断，并选择合适的中断优先级即可，具体配置如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/20.15.png" width = "700"></div><h2 id="3-2、生成代码"><a href="#3-2、生成代码" class="headerlink" title="3.2、生成代码"></a>3.2、生成代码</h2><h3 id="3-2-0、配置Project-Manager页面"><a href="#3-2-0、配置Project-Manager页面" class="headerlink" title="3.2.0、配置Project Manager页面"></a>3.2.0、配置Project Manager页面</h3><p>单击进入Project Manager页面，在左边Project分栏中修改工程名称、工程目录和工具链，然后在Code Generator中勾选“Gnerate peripheral initialization as a pair of ‘c&#x2F;h’ files per peripheral”，最后单击页面右上角GENERATE CODE生成工程，具体如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/20.16.png" width = "700"></div><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/20.17.png" width = "700"></div><p>详细Project Manager配置内容读者可以阅读“<a href="https://www.cnblogs.com/lc-guo/p/17937268">STM32CubeMX教程1 工程建立</a>”实验3.4.3小节</p><h3 id="3-2-1、外设初始化调用流程"><a href="#3-2-1、外设初始化调用流程" class="headerlink" title="3.2.1、外设初始化调用流程"></a>3.2.1、外设初始化调用流程</h3><p>在生成的工程代码主函数中新增了MX_SPI1_Init()函数，在该函数中实现了对SPI1的模式及参数配置</p><p>在MX_SPI1_Init()函数中调用了HAL_SPI_Init()函数使用配置的参数对SPI1进行了初始化</p><p>在HAL_SPI_Init()函数中又调用了HAL_SPI_MspInit()函数对SPI1引脚复用设置，SPI1时钟使能，如果开启了中断该函数中还会有中断相关设置及使能</p><p>具体的SPI1初始化函数调用流程如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/20.18.png" width = "700"></div><h3 id="3-2-2、外设中断调用流程"><a href="#3-2-2、外设中断调用流程" class="headerlink" title="3.2.2、外设中断调用流程"></a>3.2.2、外设中断调用流程</h3><p>本实验无需中断，因此未启动任何SPI1的中断</p><h3 id="3-2-3、添加其他必要代码"><a href="#3-2-3、添加其他必要代码" class="headerlink" title="3.2.3、添加其他必要代码"></a>3.2.3、添加其他必要代码</h3><p>需要添加W25Q128的驱动文件，注意本实验只使用而不会介绍W25Q128具体驱动文件的原理，具体源代码如下图所示 <em>（注释4）</em></p><p><strong>w25flash.c文件</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">/* 文件： w25flash.c</span><br><span class="hljs-comment"> * 功能描述： Flash 存储器W25Q128的驱动程序</span><br><span class="hljs-comment"> * 作者：王维波</span><br><span class="hljs-comment"> * 修改日期：2019-06-05</span><br><span class="hljs-comment"> */</span><br> <br> <br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;w25flash.h&quot;</span></span><br> <br><span class="hljs-meta">#<span class="hljs-keyword">define</span> MAX_TIMEOUT   200<span class="hljs-comment">//SPI轮询操作时的最大等待时间,ms</span></span><br> <br><span class="hljs-comment">//SPI接口发送一个字节,byteData是需要发送的数据</span><br>HAL_StatusTypeDef<span class="hljs-title function_">SPI_TransmitOneByte</span><span class="hljs-params">(<span class="hljs-type">uint8_t</span>byteData)</span><br>&#123;<br><span class="hljs-keyword">return</span> HAL_SPI_Transmit(&amp;SPI_HANDLE, &amp;byteData, <span class="hljs-number">1</span>, MAX_TIMEOUT);<br>&#125;<br> <br><span class="hljs-comment">//SPI接口发送多个字节, pBuffer是发送数据缓存区指针，byteCount是发送数据字节数，byteCount最大256</span><br>HAL_StatusTypeDef<span class="hljs-title function_">SPI_TransmitBytes</span><span class="hljs-params">(<span class="hljs-type">uint8_t</span>* pBuffer, <span class="hljs-type">uint16_t</span> byteCount)</span><br>&#123;<br><span class="hljs-keyword">return</span> HAL_SPI_Transmit(&amp;SPI_HANDLE, pBuffer, byteCount, MAX_TIMEOUT);<br>&#125;<br> <br><span class="hljs-comment">//SPI接口接收一个字节， 返回接收的一个字节数据</span><br><span class="hljs-type">uint8_t</span><span class="hljs-title function_">SPI_ReceiveOneByte</span><span class="hljs-params">()</span><br>&#123;<br><span class="hljs-type">uint8_t</span>byteData=<span class="hljs-number">0</span>;<br>HAL_SPI_Receive(&amp;SPI_HANDLE, &amp;byteData, <span class="hljs-number">1</span>, MAX_TIMEOUT);<br><span class="hljs-keyword">return</span>  byteData;<br>&#125;<br> <br><span class="hljs-comment">//SPI接口接收多个字节， pBuffer是接收数据缓存区指针，byteCount是需要接收数据的字节数</span><br>HAL_StatusTypeDef<span class="hljs-title function_">SPI_ReceiveBytes</span><span class="hljs-params">(<span class="hljs-type">uint8_t</span>* pBuffer, <span class="hljs-type">uint16_t</span> byteCount)</span><br>&#123;<br><span class="hljs-keyword">return</span> HAL_SPI_Receive(&amp;SPI_HANDLE, pBuffer, byteCount, MAX_TIMEOUT);<br>&#125;<br> <br><span class="hljs-comment">//Command=0x05:  Read Status Register-1,返回寄存器SR1的值</span><br><span class="hljs-type">uint8_t</span> <span class="hljs-title function_">Flash_ReadSR1</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span><br>&#123;  <br><span class="hljs-type">uint8_t</span> byte=<span class="hljs-number">0</span>;<br>__Select_Flash();<span class="hljs-comment">//CS=0</span><br>SPI_TransmitOneByte(<span class="hljs-number">0x05</span>); <span class="hljs-comment">//Command=0x05:  Read Status Register-1</span><br>byte=SPI_ReceiveOneByte();<br>__Deselect_Flash();<span class="hljs-comment">//CS=1</span><br><span class="hljs-keyword">return</span> byte;   <br>&#125; <br> <br><span class="hljs-comment">//Command=0x35:  Read Status Register-2,返回寄存器SR2的值</span><br><span class="hljs-type">uint8_t</span> <span class="hljs-title function_">Flash_ReadSR2</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span><br>&#123;<br><span class="hljs-type">uint8_t</span> byte=<span class="hljs-number">0</span>;<br>__Select_Flash();<span class="hljs-comment">//CS=0</span><br>SPI_TransmitOneByte(<span class="hljs-number">0x35</span>); <span class="hljs-comment">//Command=0x35:  Read Status Register-2</span><br>byte=SPI_ReceiveOneByte();<span class="hljs-comment">//读取一个字节</span><br>__Deselect_Flash();<span class="hljs-comment">//CS=1</span><br><span class="hljs-keyword">return</span> byte;<br>&#125;<br> <br> <br><span class="hljs-comment">//Command=0x01:  Write Status Register,只写SR1的值</span><br><span class="hljs-comment">//耗时大约10-15ms</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">Flash_WriteSR1</span><span class="hljs-params">(<span class="hljs-type">uint8_t</span> SR1)</span><br>&#123;   <br>Flash_Write_Enable();       <span class="hljs-comment">//必须使 WEL=1</span><br> <br>__Select_Flash();<span class="hljs-comment">//CS=0</span><br>SPI_TransmitOneByte(<span class="hljs-number">0x01</span>);   <span class="hljs-comment">//Command=0x01:  Write Status Register,只写SR1的值</span><br>SPI_TransmitOneByte(<span class="hljs-number">0x00</span>);    <span class="hljs-comment">//SR1的值</span><br><span class="hljs-comment">//SPI_WriteOneByte(0x00);    //SR2的值, 只发送SR1的值，而不发送SR2的值， QE和CMP将自动被清零</span><br>__Deselect_Flash();<span class="hljs-comment">//CS=1</span><br> <br>Flash_Wait_Busy();    <span class="hljs-comment">//耗时大约10-15ms</span><br>&#125;  <br> <br>HAL_StatusTypeDef <span class="hljs-title function_">Flash_WriteVolatile_Enable</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span>  <span class="hljs-comment">//Command=0x50: Write Volatile Enable</span><br>&#123;<br>__Select_Flash();<span class="hljs-comment">//CS=0</span><br>HAL_StatusTypeDef result=SPI_TransmitOneByte(<span class="hljs-number">0x50</span>);<br>__Deselect_Flash();<span class="hljs-comment">//CS=1</span><br><span class="hljs-keyword">return</span> result;<br>&#125;<br> <br> <br><span class="hljs-comment">//Command=0x06: Write Enable,    使WEL=1</span><br>HAL_StatusTypeDef <span class="hljs-title function_">Flash_Write_Enable</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span><br>&#123;<br>__Select_Flash();<span class="hljs-comment">//CS=0</span><br>HAL_StatusTypeDef result=SPI_TransmitOneByte(<span class="hljs-number">0x06</span>);  <span class="hljs-comment">//Command=0x06: Write Enable,    使WEL=1</span><br>__Deselect_Flash();<span class="hljs-comment">//CS=1</span><br>Flash_Wait_Busy(); <span class="hljs-comment">//等待操作完成</span><br><span class="hljs-keyword">return</span> result;<br>&#125; <br> <br><span class="hljs-comment">//Command=0x04, Write Disable，  使WEL=0</span><br>HAL_StatusTypeDef <span class="hljs-title function_">Flash_Write_Disable</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span><br>&#123;  <br>__Select_Flash();<span class="hljs-comment">//CS=0</span><br>HAL_StatusTypeDef result=SPI_TransmitOneByte(<span class="hljs-number">0x04</span>); <span class="hljs-comment">//Command=0x04, Write Disable，  使WEL=0</span><br>__Deselect_Flash();<span class="hljs-comment">//CS=1</span><br>Flash_Wait_Busy();    <span class="hljs-comment">//</span><br><span class="hljs-keyword">return</span> result;<br>&#125; <br> <br><span class="hljs-comment">//根据Block绝对编号获取地址, 共256个Block， BlockNo 取值范围0-255</span><br><span class="hljs-comment">//每个块64K字节，16位地址，块内地址范围0x0000-0xFFFF。</span><br><span class="hljs-type">uint32_t</span><span class="hljs-title function_">Flash_Addr_byBlock</span><span class="hljs-params">(<span class="hljs-type">uint8_t</span>BlockNo)</span><br>&#123;<br><span class="hljs-comment">//uint32_t addr=BlockNo*0x10000;</span><br> <br><span class="hljs-type">uint32_t</span> addr=BlockNo;<br>addr=addr&lt;&lt;<span class="hljs-number">16</span>; <span class="hljs-comment">//左移16位，等于乘以0x10000</span><br><span class="hljs-keyword">return</span> addr;<br>&#125;<br> <br><span class="hljs-comment">//根据Sector绝对编号获取地址, 共4096个Sector, SectorNo取值范围0-4095</span><br><span class="hljs-comment">//每个扇区4K字节，12位地址，扇区内地址范围0x000-0xFFF</span><br><span class="hljs-type">uint32_t</span><span class="hljs-title function_">Flash_Addr_bySector</span><span class="hljs-params">(<span class="hljs-type">uint16_t</span>  SectorNo)</span><br>&#123;<br><span class="hljs-keyword">if</span> (SectorNo&gt;<span class="hljs-number">4095</span>)<span class="hljs-comment">//不能超过4095</span><br>SectorNo=<span class="hljs-number">0</span>;<br><span class="hljs-comment">//uint32_t addr=SectorNo*0x1000;</span><br> <br><span class="hljs-type">uint32_t</span> addr=SectorNo;<br>addr=addr&lt;&lt;<span class="hljs-number">12</span>;<span class="hljs-comment">//左移12位,等于乘以0x1000</span><br><span class="hljs-keyword">return</span> addr;<br>&#125;<br> <br><span class="hljs-comment">//根据Page绝对编号获取地址，共65536个Page,  PageNo取值范围0-65535</span><br><span class="hljs-comment">//每个页256字节，8位地址，页内地址范围0x00—0xFF</span><br><span class="hljs-type">uint32_t</span><span class="hljs-title function_">Flash_Addr_byPage</span><span class="hljs-params">(<span class="hljs-type">uint16_t</span>  PageNo)</span><br>&#123;<br><span class="hljs-comment">//uint32_t addr=PageNo*0x100;</span><br> <br><span class="hljs-type">uint32_t</span> addr=PageNo;<br>addr=addr&lt;&lt;<span class="hljs-number">8</span>;<span class="hljs-comment">//左移8位，等于乘以0x100</span><br><span class="hljs-keyword">return</span> addr;<br>&#125;<br> <br><span class="hljs-comment">//根据Block编号和内部Sector编号计算地址，一个Block有16个Sector</span><br><span class="hljs-comment">//BlockNo取值范围0-255，  内部SubSectorNo取值范围0-15</span><br><span class="hljs-type">uint32_t</span><span class="hljs-title function_">Flash_Addr_byBlockSector</span><span class="hljs-params">(<span class="hljs-type">uint8_t</span> BlockNo, <span class="hljs-type">uint8_t</span> SubSectorNo)</span><br>&#123;<br><span class="hljs-keyword">if</span> (SubSectorNo&gt;<span class="hljs-number">15</span>) <span class="hljs-comment">//不能超过15</span><br>SubSectorNo=<span class="hljs-number">0</span>;<br> <br><span class="hljs-comment">//uint32_t addr=BlockNo*0x10000;//先计算Block的起始地址</span><br><span class="hljs-type">uint32_t</span> addr=BlockNo;<br>addr=addr&lt;&lt;<span class="hljs-number">16</span>;<span class="hljs-comment">//先计算Block的起始地址</span><br> <br><span class="hljs-comment">//uint32_t offset=SubSectorNo*0x1000;//计算Sector的偏移地址</span><br><span class="hljs-type">uint32_t</span> offset=SubSectorNo;<span class="hljs-comment">//计算Sector的偏移地址</span><br>offset=offset&lt;&lt;<span class="hljs-number">12</span>;<span class="hljs-comment">//计算Sector的偏移地址</span><br> <br>addr += offset;<br> <br><span class="hljs-keyword">return</span> addr;<br>&#125;<br> <br><span class="hljs-comment">//根据Block编号，内部Sector编号，内部Page编号获取地址</span><br><span class="hljs-comment">//BlockNo取值范围0-255</span><br><span class="hljs-comment">//一个Block有16个Sector， 内部SubSectorNo取值范围0-15</span><br><span class="hljs-comment">//一个Sector有16个Page , 内部SubPageNo取值范围0-15</span><br><span class="hljs-type">uint32_t</span><span class="hljs-title function_">Flash_Addr_byBlockSectorPage</span><span class="hljs-params">(<span class="hljs-type">uint8_t</span> BlockNo, <span class="hljs-type">uint8_t</span> SubSectorNo, <span class="hljs-type">uint8_t</span>  SubPageNo)</span><br>&#123;<br><span class="hljs-keyword">if</span> (SubSectorNo&gt;<span class="hljs-number">15</span>)<span class="hljs-comment">//不能超过15</span><br>SubSectorNo=<span class="hljs-number">0</span>;<br> <br><span class="hljs-keyword">if</span> (SubPageNo&gt;<span class="hljs-number">15</span>)<span class="hljs-comment">//不能超过15</span><br>SubPageNo=<span class="hljs-number">0</span>;<br> <br><span class="hljs-comment">//uint32_t addr=BlockNo*0x10000;//先计算Block的起始地址</span><br><span class="hljs-type">uint32_t</span> addr=BlockNo;<br>addr=addr&lt;&lt;<span class="hljs-number">16</span>;<span class="hljs-comment">//先计算Block的起始地址</span><br> <br><span class="hljs-comment">//uint32_t offset=SubSectorNo*0x1000;//计算Sector的偏移地址</span><br><span class="hljs-type">uint32_t</span> offset=SubSectorNo;<span class="hljs-comment">//计算Sector的偏移地址</span><br>offset=offset&lt;&lt;<span class="hljs-number">12</span>;<span class="hljs-comment">//计算Sector的偏移地址</span><br>addr += offset;<br> <br><span class="hljs-comment">//offset=SubPageNo*0x100;//计算Page的偏移地址</span><br>offset=SubPageNo;<br>offset=offset&lt;&lt;<span class="hljs-number">8</span>;<span class="hljs-comment">//计算Page的偏移地址</span><br> <br>addr += offset;<span class="hljs-comment">//Page的起始地址</span><br><span class="hljs-keyword">return</span> addr;<br>&#125;<br> <br><span class="hljs-comment">//将24位地址分解为3个字节</span><br><span class="hljs-comment">//globalAddr是全局24位地址, 返回 addrHigh高字节，addrMid中间字节，addrLow低字节</span><br><span class="hljs-type">void</span>  <span class="hljs-title function_">Flash_SpliteAddr</span><span class="hljs-params">(<span class="hljs-type">uint32_t</span> globalAddr, <span class="hljs-type">uint8_t</span>* addrHigh, <span class="hljs-type">uint8_t</span>* addrMid,<span class="hljs-type">uint8_t</span>* addrLow)</span><br>&#123;<br>*addrHigh= (globalAddr&gt;&gt;<span class="hljs-number">16</span>);<span class="hljs-comment">//addrHigh=高字节</span><br> <br>globalAddr =globalAddr &amp; <span class="hljs-number">0x0000FFFF</span>;<span class="hljs-comment">//屏蔽高字节</span><br>*addrMid= (globalAddr&gt;&gt;<span class="hljs-number">8</span>);<span class="hljs-comment">//addrMid=中间字节</span><br> <br>*addrLow =globalAddr &amp; <span class="hljs-number">0x000000FF</span>;<span class="hljs-comment">//屏蔽中间字节， 只剩低字节，addrLow=低字节</span><br>&#125;<br> <br> <br><span class="hljs-comment">//读取芯片ID</span><br><span class="hljs-comment">//返回值如下:   </span><br><span class="hljs-comment">// 0xEF17,表示芯片型号为W25Q128, Winbond,用过</span><br><span class="hljs-comment">// 0xC817，表示芯片型号为GD25Q128,ELM，用过</span><br><span class="hljs-comment">// 0x1C17，表示芯片型号为EN25Q128,台湾EON</span><br><span class="hljs-comment">// 0xA117，表示芯片型号为FM25Q128，复旦微电子</span><br><span class="hljs-comment">// 0x2018，表示芯片型号为N25Q128，美光</span><br><span class="hljs-comment">// 0x2017，表示芯片型号为XM25QH128，武汉新芯，用过</span><br> <br><span class="hljs-comment">//读取芯片的制造商和器件ID，高字节是Manufacturer ID,低字节是Device ID</span><br><span class="hljs-type">uint16_t</span> <span class="hljs-title function_">Flash_ReadID</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span><br>&#123;<br><span class="hljs-type">uint16_t</span> Temp = <span class="hljs-number">0</span>;<br>__Select_Flash();<span class="hljs-comment">//CS=0</span><br> <br>SPI_TransmitOneByte(<span class="hljs-number">0x90</span>); <span class="hljs-comment">//指令码，0x90=Manufacturer/Device ID</span><br>SPI_TransmitOneByte(<span class="hljs-number">0x00</span>); <span class="hljs-comment">//dummy</span><br>SPI_TransmitOneByte(<span class="hljs-number">0x00</span>); <span class="hljs-comment">//dummy</span><br>SPI_TransmitOneByte(<span class="hljs-number">0x00</span>); <span class="hljs-comment">//0x00</span><br>Temp =SPI_ReceiveOneByte()&lt;&lt;<span class="hljs-number">8</span>; <span class="hljs-comment">//Manufacturer ID</span><br>Temp|=SPI_ReceiveOneByte();  <span class="hljs-comment">//Device ID, 与具体器件相关</span><br> <br>__Deselect_Flash();<span class="hljs-comment">//CS=1</span><br><br><span class="hljs-keyword">return</span> Temp;<br>&#125;<br> <br><span class="hljs-comment">// 参数High32和Low32分别返回64位序列号的高32位和低32位的值</span><br><span class="hljs-comment">// 函数返回值为64位序列号的值</span><br><span class="hljs-type">uint64_t</span>  <span class="hljs-title function_">Flash_ReadSerialNum</span><span class="hljs-params">(<span class="hljs-type">uint32_t</span>* High32,  <span class="hljs-type">uint32_t</span>* Low32)</span><span class="hljs-comment">//读取64位序列号，</span><br>&#123;<br><span class="hljs-type">uint8_t</span> Temp = <span class="hljs-number">0</span>;<br><span class="hljs-type">uint64_t</span> SerialNum=<span class="hljs-number">0</span>;<br><span class="hljs-type">uint32_t</span> High=<span class="hljs-number">0</span>,Low=<span class="hljs-number">0</span>;<br> <br>__Select_Flash();<span class="hljs-comment">//CS=0</span><br>SPI_TransmitOneByte(<span class="hljs-number">0x4B</span>);<span class="hljs-comment">//发送指令码, 4B=read Unique ID</span><br>SPI_TransmitOneByte(<span class="hljs-number">0x00</span>);<span class="hljs-comment">//发送4个Dummy字节数据</span><br>SPI_TransmitOneByte(<span class="hljs-number">0x00</span>);<br>SPI_TransmitOneByte(<span class="hljs-number">0x00</span>);<br>SPI_TransmitOneByte(<span class="hljs-number">0x00</span>);<br> <br><span class="hljs-keyword">for</span>(<span class="hljs-type">uint8_t</span> i=<span class="hljs-number">0</span>; i&lt;<span class="hljs-number">4</span>; i++)  <span class="hljs-comment">//高32位</span><br>&#123;<br>Temp =SPI_ReceiveOneByte();<br>High = (High&lt;&lt;<span class="hljs-number">8</span>);<br>High = High | Temp;  <span class="hljs-comment">//按位或</span><br>&#125;<br> <br><span class="hljs-keyword">for</span>(<span class="hljs-type">uint8_t</span> i=<span class="hljs-number">0</span>; i&lt;<span class="hljs-number">4</span>; i++)<span class="hljs-comment">//低32位</span><br>&#123;<br>Temp =SPI_ReceiveOneByte();<br>Low = (Low&lt;&lt;<span class="hljs-number">8</span>);<br>Low = Low | Temp;  <span class="hljs-comment">//按位或</span><br>&#125;<br>__Deselect_Flash();<span class="hljs-comment">//CS=1</span><br> <br>*High32 = High;<br>*Low32=Low;<br> <br>SerialNum = High;<br>SerialNum = SerialNum&lt;&lt;<span class="hljs-number">32</span>;  <span class="hljs-comment">//高32位</span><br>SerialNum=SerialNum | Low;<br> <br><span class="hljs-keyword">return</span> SerialNum;<br>&#125;<br> <br> <br><span class="hljs-comment">//在任意地址读取一个字节的数据,返回读取的字节数据</span><br><span class="hljs-comment">// globalAddr是24位全局地址</span><br><span class="hljs-type">uint8_t</span> <span class="hljs-title function_">Flash_ReadOneByte</span><span class="hljs-params">(<span class="hljs-type">uint32_t</span> globalAddr)</span><br>&#123;<br><span class="hljs-type">uint8_t</span> byte2, byte3, byte4;<br>Flash_SpliteAddr(globalAddr, &amp;byte2, &amp;byte3, &amp;byte4);<span class="hljs-comment">//24位地址分解为3个字节</span><br> <br>__Select_Flash();<span class="hljs-comment">//CS=0</span><br>SPI_TransmitOneByte(<span class="hljs-number">0x03</span>);      <span class="hljs-comment">//Command=0x03, read data</span><br>SPI_TransmitOneByte(byte2);<span class="hljs-comment">//发送24位地址</span><br>SPI_TransmitOneByte(byte3);<br>SPI_TransmitOneByte(byte4);<br>byte2 = SPI_ReceiveOneByte();<span class="hljs-comment">//接收1个字节</span><br>__Deselect_Flash();<span class="hljs-comment">//CS=1</span><br> <br><span class="hljs-keyword">return</span> byte2;<br>&#125;<br> <br> <br><span class="hljs-comment">//从任何地址开始读取指定长度的数据</span><br><span class="hljs-comment">//globalAddr：开始读取的地址(24bit)， pBuffer：数据存储区指针，byteCount:要读取的字节数</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">Flash_ReadBytes</span><span class="hljs-params">(<span class="hljs-type">uint32_t</span> globalAddr, <span class="hljs-type">uint8_t</span>* pBuffer, <span class="hljs-type">uint16_t</span> byteCount)</span><br>&#123; <br><span class="hljs-type">uint8_t</span> byte2, byte3, byte4;<br>Flash_SpliteAddr(globalAddr, &amp;byte2, &amp;byte3, &amp;byte4);<span class="hljs-comment">//24位地址分解为3个字节</span><br> <br>__Select_Flash();<span class="hljs-comment">//CS=0</span><br>SPI_TransmitOneByte(<span class="hljs-number">0x03</span>);      <span class="hljs-comment">//Command=0x03, read data</span><br>SPI_TransmitOneByte(byte2);<span class="hljs-comment">//发送24位地址</span><br>SPI_TransmitOneByte(byte3);<br>SPI_TransmitOneByte(byte4);<br>SPI_ReceiveBytes(pBuffer, byteCount);<span class="hljs-comment">//接收byteCount个字节数据</span><br>__Deselect_Flash();<span class="hljs-comment">//CS=1</span><br>&#125;  <br> <br><span class="hljs-comment">//Command=0x0B,  高速连续读取flash多个字节，任意全局地址， 速度大约是常规读取的2倍</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">Flash_FastReadBytes</span><span class="hljs-params">(<span class="hljs-type">uint32_t</span> globalAddr, <span class="hljs-type">uint8_t</span>* pBuffer,  <span class="hljs-type">uint16_t</span> byteCount)</span><br>&#123;<br><span class="hljs-comment">// uint16_t i;</span><br><span class="hljs-type">uint8_t</span> byte2, byte3, byte4;<br>Flash_SpliteAddr(globalAddr, &amp;byte2, &amp;byte3, &amp;byte4);<span class="hljs-comment">//24位地址分解为3个字节</span><br> <br>__Select_Flash();<span class="hljs-comment">//CS=0</span><br> <br>SPI_TransmitOneByte(<span class="hljs-number">0x0B</span>);      <span class="hljs-comment">//Command=0x0B, fast read data</span><br>SPI_TransmitOneByte(byte2);<span class="hljs-comment">//发送24位地址</span><br>SPI_TransmitOneByte(byte3);<br>SPI_TransmitOneByte(byte4);<br>SPI_TransmitOneByte(<span class="hljs-number">0x00</span>);<span class="hljs-comment">//Dummy字节</span><br> <br>SPI_ReceiveBytes(pBuffer, byteCount);<span class="hljs-comment">//接收byteCount个字节数据</span><br>__Deselect_Flash();<span class="hljs-comment">//CS=1</span><br> <br>&#125;<br> <br><span class="hljs-comment">//Command=0xC7: Chip Erase, 擦除整个器件</span><br><span class="hljs-comment">// 擦除后，所有存储区内容为0xFF,耗时大约25秒</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">Flash_EraseChip</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span><br>&#123;                                   <br>Flash_Write_Enable();   <span class="hljs-comment">//使 WEL=1</span><br>Flash_Wait_Busy();   <span class="hljs-comment">//等待空闲</span><br> <br>__Select_Flash();<span class="hljs-comment">//CS=0</span><br>SPI_TransmitOneByte(<span class="hljs-number">0xC7</span>);  <span class="hljs-comment">// Command=0xC7: Chip Erase, 擦除整个器件</span><br>__Deselect_Flash();<span class="hljs-comment">//CS=1</span><br> <br>Flash_Wait_Busy();   <span class="hljs-comment">//等待芯片擦除结束,大约25秒</span><br>&#125;   <br> <br><span class="hljs-comment">// Command=0x02: Page program, 对一个页（256字节）编程, 耗时大约3ms,</span><br><span class="hljs-comment">// globalAddr是写入初始地址，全局地址</span><br><span class="hljs-comment">// pBuffer是要写入数据缓冲区指针，byteCount是需要写入的数据字节数</span><br><span class="hljs-comment">// 写入的Page必须是前面已经擦除过的，如果写入地址超出了page的边界，就从Page的开头重新写</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">Flash_WriteInPage</span><span class="hljs-params">(<span class="hljs-type">uint32_t</span> globalAddr, <span class="hljs-type">uint8_t</span>* pBuffer, <span class="hljs-type">uint16_t</span> byteCount)</span><br>&#123;<br><span class="hljs-type">uint8_t</span> byte2, byte3, byte4;<br>Flash_SpliteAddr(globalAddr, &amp;byte2, &amp;byte3, &amp;byte4);<span class="hljs-comment">//24位地址分解为3个字节</span><br> <br>Flash_Write_Enable();   <span class="hljs-comment">//SET WEL</span><br> Flash_Wait_Busy();<br> <br>__Select_Flash();<span class="hljs-comment">//CS=0</span><br>SPI_TransmitOneByte(<span class="hljs-number">0x02</span>);      <span class="hljs-comment">//Command=0x02: Page program 对一个扇区编程</span><br>SPI_TransmitOneByte(byte2);<span class="hljs-comment">//发送24位地址</span><br>SPI_TransmitOneByte(byte3);<br>SPI_TransmitOneByte(byte4);<br>SPI_TransmitBytes(pBuffer, byteCount); <span class="hljs-comment">//发送byteCount个字节的数据</span><br><span class="hljs-comment">//for(uint16_t i=0; i&lt;byteCount; i++)</span><br><span class="hljs-comment">//&#123;</span><br><span class="hljs-comment">//byte2=pBuffer[i];</span><br><span class="hljs-comment">//SPI_WriteOneByte(byte2);//要写入的数据</span><br><span class="hljs-comment">//&#125;</span><br>__Deselect_Flash();<span class="hljs-comment">//CS=1</span><br> <br>Flash_Wait_Busy();    <span class="hljs-comment">//耗时大约3ms</span><br>&#125;<br> <br><span class="hljs-comment">//从某个Sector的起始位置开始写数据，数据可能跨越多个Page,甚至跨越Sector,不必提前擦除</span><br><span class="hljs-comment">// globalAddr是写入初始地址，全局地址,是扇区的起始地址，</span><br><span class="hljs-comment">// pBuffer是要写入数据缓冲区指针</span><br><span class="hljs-comment">// byteCount是需要写入的数据字节数，byteCount不能超过64K，也就是一个Block（16个扇区）的大小,但是可以超过一个Sector(4K字节)</span><br><span class="hljs-comment">// 如果数据超过一个Page，自动分成多个Page，调用EN25Q_WriteInPage分别写入</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">Flash_WriteSector</span><span class="hljs-params">(<span class="hljs-type">uint32_t</span> globalAddr,  <span class="hljs-type">uint8_t</span>* pBuffer, <span class="hljs-type">uint16_t</span> byteCount)</span><br>&#123;<br><span class="hljs-comment">//需要先擦除扇区，可能是重复写文件</span><br><span class="hljs-type">uint8_t</span> secCount= (byteCount / FLASH_SECTOR_SIZE);<span class="hljs-comment">//数据覆盖的扇区个数</span><br><span class="hljs-keyword">if</span> ((byteCount % FLASH_SECTOR_SIZE) &gt;<span class="hljs-number">0</span>)<br>secCount++;<br> <br><span class="hljs-type">uint32_t</span> startAddr=globalAddr;<br><span class="hljs-keyword">for</span> (<span class="hljs-type">uint8_t</span> k=<span class="hljs-number">0</span>; k&lt;secCount; k++)<br>&#123;<br>Flash_EraseSector(startAddr);<span class="hljs-comment">//擦除扇区</span><br>startAddr += FLASH_SECTOR_SIZE;<span class="hljs-comment">//移到下一个扇区</span><br>&#125;<br> <br><span class="hljs-comment">//分成Page写入数据,写入数据的最小单位是Page</span><br><span class="hljs-type">uint16_t</span>  leftBytes=byteCount % FLASH_PAGE_SIZE;  <span class="hljs-comment">//非整数个Page剩余的字节数，即最后一个Page写入的数据</span><br><span class="hljs-type">uint16_t</span>  pgCount=byteCount/FLASH_PAGE_SIZE;  <span class="hljs-comment">//前面整数个Page</span><br><span class="hljs-type">uint8_t</span>* buff=pBuffer;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">uint16_t</span> i=<span class="hljs-number">0</span>; i&lt;pgCount; i++)<span class="hljs-comment">//写入前面pgCount个Page的数据，</span><br>&#123;<br>Flash_WriteInPage(globalAddr, buff, FLASH_PAGE_SIZE);  <span class="hljs-comment">//写一整个Page的数据</span><br>globalAddr += FLASH_PAGE_SIZE;<span class="hljs-comment">//地址移动一个Page</span><br>buff += FLASH_PAGE_SIZE;<span class="hljs-comment">//数据指针移动一个Page大小</span><br>&#125;<br> <br><span class="hljs-keyword">if</span> (leftBytes&gt;<span class="hljs-number">0</span>)<br>Flash_WriteInPage(globalAddr, buff, leftBytes);  <span class="hljs-comment">//最后一个Page，不是一整个Page的数据</span><br>&#125;<br> <br><span class="hljs-comment">//Command=0xD8: Block Erase(64KB) 擦除整个Block, globalAddr是全局地址</span><br><span class="hljs-comment">//清除后存储区内容全部为0xFF,  耗时大概150ms</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">Flash_EraseBlock64K</span><span class="hljs-params">(<span class="hljs-type">uint32_t</span> globalAddr)</span><br>&#123;<br> Flash_Write_Enable();   <span class="hljs-comment">//SET WEL</span><br> Flash_Wait_Busy();<br> <br><span class="hljs-type">uint8_t</span> byte2, byte3, byte4;<br>Flash_SpliteAddr(globalAddr, &amp;byte2, &amp;byte3, &amp;byte4);<span class="hljs-comment">//24位地址分解为3个字节</span><br> <br>__Select_Flash();<span class="hljs-comment">//CS=0</span><br> <br>SPI_TransmitOneByte(<span class="hljs-number">0xD8</span>);      <span class="hljs-comment">//Command=0xD8, Block Erase(64KB)</span><br>SPI_TransmitOneByte(byte2);<span class="hljs-comment">//发送24位地址</span><br>SPI_TransmitOneByte(byte3);<br>SPI_TransmitOneByte(byte4);<br> <br>__Deselect_Flash();<span class="hljs-comment">//CS=1</span><br>Flash_Wait_Busy();    <span class="hljs-comment">//耗时大概150ms</span><br>&#125;<br> <br> <br><span class="hljs-comment">//擦除一个扇区(4KB字节)，Command=0x20, Sector Erase(4KB)</span><br><span class="hljs-comment">//globalAddr: 扇区的绝对地址，24位地址0x00XXXXXX</span><br><span class="hljs-comment">//擦除后，扇区内全部内容为0xFF, 耗时大约30ms，</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">Flash_EraseSector</span><span class="hljs-params">(<span class="hljs-type">uint32_t</span> globalAddr)</span><br>&#123;  <br> Flash_Write_Enable();   <span class="hljs-comment">//SET WEL</span><br> Flash_Wait_Busy();<br><span class="hljs-type">uint8_t</span> byte2, byte3, byte4;<br>Flash_SpliteAddr(globalAddr, &amp;byte2, &amp;byte3, &amp;byte4);<span class="hljs-comment">//24位地址分解为3个字节</span><br> <br>__Select_Flash();<span class="hljs-comment">//CS=0</span><br> <br>SPI_TransmitOneByte(<span class="hljs-number">0x20</span>);      <span class="hljs-comment">//Command=0x20, Sector Erase(4KB)</span><br>SPI_TransmitOneByte(byte2);<span class="hljs-comment">//发送24位地址</span><br>SPI_TransmitOneByte(byte3);<br>SPI_TransmitOneByte(byte4);<br> <br>__Deselect_Flash();<span class="hljs-comment">//CS=1</span><br>Flash_Wait_Busy();    <span class="hljs-comment">//大约30ms</span><br>&#125;<br> <br><span class="hljs-comment">//检查寄存器SR1的BUSY位，直到BUSY位为0</span><br><span class="hljs-type">uint32_t</span> <span class="hljs-title function_">Flash_Wait_Busy</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span><br>&#123;   <br><span class="hljs-type">uint8_t</span>SR1=<span class="hljs-number">0</span>;<br><span class="hljs-type">uint32_t</span>  delay=<span class="hljs-number">0</span>;<br>SR1=Flash_ReadSR1();<span class="hljs-comment">//读取状态寄存器SR1</span><br><span class="hljs-keyword">while</span>((SR1 &amp; <span class="hljs-number">0x01</span>)==<span class="hljs-number">0x01</span>)<br>&#123;<br>HAL_Delay(<span class="hljs-number">1</span>);<span class="hljs-comment">//延时1ms</span><br>delay++;<br>SR1=Flash_ReadSR1();<span class="hljs-comment">//读取状态寄存器SR1</span><br>&#125;<br><span class="hljs-keyword">return</span> delay;<br>&#125;<br> <br><span class="hljs-comment">//进入掉电模式</span><br><span class="hljs-comment">//Command=0xB9: Power Down</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">Flash_PowerDown</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span><br>&#123; <br>__Select_Flash();<span class="hljs-comment">//CS=0</span><br>SPI_TransmitOneByte(<span class="hljs-number">0xB9</span>);  <span class="hljs-comment">//Command=0xB9: Power Down</span><br>__Deselect_Flash();<span class="hljs-comment">//CS=1</span><br>    HAL_Delay(<span class="hljs-number">1</span>); <span class="hljs-comment">//等待TPD</span><br>&#125;   <br> <br><span class="hljs-comment">//唤醒</span><br><span class="hljs-comment">//Command=0xAB: Release Power Down</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">Flash_WakeUp</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span><br>&#123;  <br>__Select_Flash();<span class="hljs-comment">//CS=0</span><br>SPI_TransmitOneByte(<span class="hljs-number">0xAB</span>);<span class="hljs-comment">//Command=0xAB: Release Power Down</span><br>__Deselect_Flash();<span class="hljs-comment">//CS=1</span><br>HAL_Delay(<span class="hljs-number">1</span>);     <span class="hljs-comment">//等待TRES1</span><br>&#125;<br><br></code></pre></td></tr></table></figure><p><strong>w25flash.h文件</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">/* 文件： w25flash.h</span><br><span class="hljs-comment"> * 功能描述： Flash 存储器W25Q128的驱动程序</span><br><span class="hljs-comment"> * 作者：王维波</span><br><span class="hljs-comment"> * 修改日期：2019-06-05</span><br><span class="hljs-comment"> * W25Q128 芯片参数： 16M字节，24位地址线</span><br><span class="hljs-comment"> * 分为256个Block，每个Block 64K字节</span><br><span class="hljs-comment"> * 一个Block又分为16个Sector，共4096个Sector，每个Sector 4K字节</span><br><span class="hljs-comment"> * 一个Sector又分为16个Page，共65536个Page，每个Page 256字节</span><br><span class="hljs-comment"> * 写数据操作的基本单元是Page，一次连续写入操作不能超过一个Page的范围。写的Page必须是擦除过的。</span><br><span class="hljs-comment"> */</span><br> <br><span class="hljs-meta">#<span class="hljs-keyword">ifndef</span> _W25FLASH_H</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> _W25FLASH_H</span><br> <br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;stm32f4xx_hal.h&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&quot;spi.h&quot;</span><span class="hljs-comment">//使用其中的变量 hspi1，表示SPI1接口</span></span><br> <br><span class="hljs-comment">/*  W25Q128硬件接口相关的部分：CS引脚和SPI接口 ，若电路不同，更改这部分配置即可   */</span><br><span class="hljs-comment">// Flash_CS --&gt;PB14, 片选信号CS操作的宏定义函数</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> CS_PORTGPIOB</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span>CS_PINGPIO_PIN_14</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span>SPI_HANDLEhspi1<span class="hljs-comment">//SPI接口对象，使用spi.h中的变量 hspi1</span></span><br> <br><span class="hljs-meta">#<span class="hljs-keyword">define</span>__Select_Flash()HAL_GPIO_WritePin(CS_PORT, CS_PIN, GPIO_PIN_RESET)<span class="hljs-comment">//CS=0</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span>__Deselect_Flash()HAL_GPIO_WritePin(CS_PORT, CS_PIN, GPIO_PIN_SET)<span class="hljs-comment">//CS=1</span></span><br> <br><span class="hljs-comment">//===========Flash存储芯片W25Q128的存储容量参数================</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span>FLASH_PAGE_SIZE256<span class="hljs-comment">//一个Page是256字节</span></span><br> <br><span class="hljs-meta">#<span class="hljs-keyword">define</span>FLASH_SECTOR_SIZE4096<span class="hljs-comment">//一个Sector是4096字节</span></span><br> <br><span class="hljs-meta">#<span class="hljs-keyword">define</span>FLASH_SECTOR_COUNT4096<span class="hljs-comment">//总共4096个 Sector</span></span><br> <br><span class="hljs-comment">//=======1. SPI 基本发送和接收函数，阻塞式传输============</span><br>HAL_StatusTypeDef<span class="hljs-title function_">SPI_TransmitOneByte</span><span class="hljs-params">(<span class="hljs-type">uint8_t</span>byteData)</span>;<span class="hljs-comment">//SPI接口发送一个字节</span><br>HAL_StatusTypeDef<span class="hljs-title function_">SPI_TransmitBytes</span><span class="hljs-params">(<span class="hljs-type">uint8_t</span>* pBuffer, <span class="hljs-type">uint16_t</span> byteCount)</span>;<span class="hljs-comment">//SPI接口发送多个字节</span><br> <br><span class="hljs-type">uint8_t</span><span class="hljs-title function_">SPI_ReceiveOneByte</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span>;<span class="hljs-comment">//SPI接口接收一个字节</span><br>HAL_StatusTypeDef<span class="hljs-title function_">SPI_ReceiveBytes</span><span class="hljs-params">(<span class="hljs-type">uint8_t</span>* pBuffer, <span class="hljs-type">uint16_t</span> byteCount)</span>;<span class="hljs-comment">//SPI接口接收多个字节</span><br> <br><span class="hljs-comment">//=========2. W25Qxx 基本控制指令==========</span><br><span class="hljs-comment">// 0xEF17,表示芯片型号为W25Q128, Winbond,用过</span><br><span class="hljs-comment">// 0xC817，表示芯片型号为GD25Q128,ELM，用过</span><br><span class="hljs-comment">// 0x1C17，表示芯片型号为EN25Q128,台湾EON</span><br><span class="hljs-comment">// 0xA117，表示芯片型号为FM25Q128，复旦微电子</span><br><span class="hljs-comment">// 0x2018，表示芯片型号为N25Q128，美光</span><br><span class="hljs-comment">// 0x2017，表示芯片型号为XM25QH128，武汉新芯，用过</span><br> <br><span class="hljs-type">uint16_t</span>  <span class="hljs-title function_">Flash_ReadID</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span>; <span class="hljs-comment">// Command=0x90, Manufacturer/Device ID</span><br> <br><span class="hljs-type">uint64_t</span>  <span class="hljs-title function_">Flash_ReadSerialNum</span><span class="hljs-params">(<span class="hljs-type">uint32_t</span>* High32,  <span class="hljs-type">uint32_t</span>* Low32)</span>; <span class="hljs-comment">//Command=0x4B, Read Unique ID, 64-bit</span><br> <br>HAL_StatusTypeDef <span class="hljs-title function_">Flash_WriteVolatile_Enable</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span>;  <span class="hljs-comment">//Command=0x50: Write Volatile Enable</span><br> <br>HAL_StatusTypeDef <span class="hljs-title function_">Flash_Write_Enable</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span>;  <span class="hljs-comment">//Command=0x06: Write Enable,    使WEL=1</span><br>HAL_StatusTypeDef <span class="hljs-title function_">Flash_Write_Disable</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span>;<span class="hljs-comment">//Command=0x04, Write Disable，  使WEL=0</span><br> <br><span class="hljs-type">uint8_t</span> <span class="hljs-title function_">Flash_ReadSR1</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span>;  <span class="hljs-comment">//Command=0x05:  Read Status Register-1,返回寄存器SR1的值</span><br><span class="hljs-type">uint8_t</span> <span class="hljs-title function_">Flash_ReadSR2</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span>;  <span class="hljs-comment">//Command=0x35:  Read Status Register-2,返回寄存器SR2的值</span><br> <br><span class="hljs-type">void</span> <span class="hljs-title function_">Flash_WriteSR1</span><span class="hljs-params">(<span class="hljs-type">uint8_t</span> SR1)</span>;  <span class="hljs-comment">//Command=0x01:  Write Status Register,只写SR1的值,禁止写状态寄存器</span><br> <br><span class="hljs-type">uint32_t</span> <span class="hljs-title function_">Flash_Wait_Busy</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span>;  <span class="hljs-comment">//读状态寄存器SR1，等待BUSY变为0,返回值是等待时间</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">Flash_PowerDown</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span>;   <span class="hljs-comment">//Command=0xB9: Power Down</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">Flash_WakeUp</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span>;  <span class="hljs-comment">//Command=0xAB: Release Power Down</span><br> <br><span class="hljs-comment">//========3. 计算地址的辅助功能函数========</span><br><span class="hljs-comment">//根据Block  绝对编号获取地址,共256个Block</span><br><span class="hljs-type">uint32_t</span><span class="hljs-title function_">Flash_Addr_byBlock</span><span class="hljs-params">(<span class="hljs-type">uint8_t</span> BlockNo)</span>;<br><span class="hljs-comment">//根据Sector 绝对编号获取地址,共4096个Sector</span><br><span class="hljs-type">uint32_t</span><span class="hljs-title function_">Flash_Addr_bySector</span><span class="hljs-params">(<span class="hljs-type">uint16_t</span>  SectorNo)</span>;<br><span class="hljs-comment">//根据Page  绝对编号获取地址，共65536个Page</span><br><span class="hljs-type">uint32_t</span><span class="hljs-title function_">Flash_Addr_byPage</span><span class="hljs-params">(<span class="hljs-type">uint16_t</span>  PageNo)</span>;<br> <br><span class="hljs-comment">//根据Block编号，和内部Sector编号计算地址，一个Block有16个Sector,</span><br><span class="hljs-type">uint32_t</span><span class="hljs-title function_">Flash_Addr_byBlockSector</span><span class="hljs-params">(<span class="hljs-type">uint8_t</span> BlockNo, <span class="hljs-type">uint8_t</span> SubSectorNo)</span>;<br><span class="hljs-comment">//根据Block编号，内部Sector编号，内部Page编号计算地址</span><br><span class="hljs-type">uint32_t</span><span class="hljs-title function_">Flash_Addr_byBlockSectorPage</span><span class="hljs-params">(<span class="hljs-type">uint8_t</span> BlockNo, <span class="hljs-type">uint8_t</span> SubSectorNo, <span class="hljs-type">uint8_t</span>  SubPageNo)</span>;<br><span class="hljs-comment">//将24位地址分解为3个字节</span><br><span class="hljs-type">void</span><span class="hljs-title function_">Flash_SpliteAddr</span><span class="hljs-params">(<span class="hljs-type">uint32_t</span> globalAddr, <span class="hljs-type">uint8_t</span>* addrHigh, <span class="hljs-type">uint8_t</span>* addrMid,<span class="hljs-type">uint8_t</span>* addrLow)</span>;<br> <br><span class="hljs-comment">//=======4. chip、Block，Sector擦除函数============</span><br><span class="hljs-comment">//Command=0xC7: Chip Erase, 擦除整个器件,大约25秒</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">Flash_EraseChip</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span>;<br> <br><span class="hljs-comment">//Command=0xD8: Block Erase(64KB) 擦除整个Block, globalAddr是全局地址，耗时大约150ms</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">Flash_EraseBlock64K</span><span class="hljs-params">(<span class="hljs-type">uint32_t</span> globalAddr)</span>;<br> <br><span class="hljs-comment">//Command=0x20: Sector Erase(4KB) 扇区擦除, globalAddr是扇区的全局地址，耗时大约30ms</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">Flash_EraseSector</span><span class="hljs-params">(<span class="hljs-type">uint32_t</span> globalAddr)</span>;<br> <br><span class="hljs-comment">//=========5. 数据读写函数=============</span><br><span class="hljs-comment">//Command=0x03,  读取一个字节，任意全局地址</span><br><span class="hljs-type">uint8_t</span> <span class="hljs-title function_">Flash_ReadOneByte</span><span class="hljs-params">(<span class="hljs-type">uint32_t</span> globalAddr)</span>;<br> <br><span class="hljs-comment">//Command=0x03,  连续读取多个字节，任意全局地址</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">Flash_ReadBytes</span><span class="hljs-params">(<span class="hljs-type">uint32_t</span> globalAddr, <span class="hljs-type">uint8_t</span>* pBuffer,  <span class="hljs-type">uint16_t</span> byteCount)</span>;<br> <br><span class="hljs-comment">//Command=0x0B,  高速连续读取多个字节，任意全局地址， 速度大约是常规读取的2倍</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">Flash_FastReadBytes</span><span class="hljs-params">(<span class="hljs-type">uint32_t</span> globalAddr, <span class="hljs-type">uint8_t</span>* pBuffer,  <span class="hljs-type">uint16_t</span> byteCount)</span>;<br> <br><span class="hljs-comment">//Command=0x02: Page program 对一个Page写入数据（最多256字节）, globalAddr是初始位置的全局地址，耗时大约3ms</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">Flash_WriteInPage</span><span class="hljs-params">(<span class="hljs-type">uint32_t</span> globalAddr, <span class="hljs-type">uint8_t</span>* pBuffer, <span class="hljs-type">uint16_t</span> byteCount)</span>;<br> <br><span class="hljs-comment">//从某个Sector的起始地址开始写数据，数据可能跨越多个Page,甚至跨越Sector，总字节数byteCount不能超过64K，也就是一个Block的大小</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">Flash_WriteSector</span><span class="hljs-params">(<span class="hljs-type">uint32_t</span> globalAddr,  <span class="hljs-type">uint8_t</span>* pBuffer, <span class="hljs-type">uint16_t</span> byteCount)</span>;<br> <br><span class="hljs-meta">#<span class="hljs-keyword">endif</span></span><br></code></pre></td></tr></table></figure><p>向工程中添加.c&#x2F;.h文件的步骤请阅读“<a href="https://www.cnblogs.com/lc-guo/p/17965519">STM32CubeMX教程19 I2C - MPU6050驱动</a>”实验3.2.3小节</p><p>在主函数中添加操作提示信息和按键操作逻辑程序，具体如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/20.19.png" width = "700"></div><p>源代码如下</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">/*主函数主循环外代码*/</span><br><span class="hljs-type">uint16_t</span> ID = Flash_ReadID();<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;W25Q128 ID:0x%x\r\n&quot;</span>,ID);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;---------------------\r\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;KEY2: Flash_Write\r\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;KEY1: Flash_Read\r\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;KEY0: Flash_Erase\r\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;---------------------\r\n&quot;</span>);<br> <br><span class="hljs-comment">/*主函数主循环内代码*/</span><br><span class="hljs-comment">/*按键KEY2被按下*/</span><br><span class="hljs-keyword">if</span>(HAL_GPIO_ReadPin(KEY2_GPIO_Port,KEY2_Pin) == GPIO_PIN_RESET)<br>&#123;<br>    HAL_Delay(<span class="hljs-number">50</span>);<br>    <span class="hljs-keyword">if</span>(HAL_GPIO_ReadPin(KEY2_GPIO_Port,KEY2_Pin) == GPIO_PIN_RESET)<br>    &#123;<br>        Flash_TestWrite();<br>        <span class="hljs-keyword">while</span>(!HAL_GPIO_ReadPin(KEY2_GPIO_Port,KEY2_Pin));<br>    &#125;<br>&#125;<br><span class="hljs-comment">/*按键KEY1被按下*/</span><br><span class="hljs-keyword">if</span>(HAL_GPIO_ReadPin(KEY1_GPIO_Port,KEY1_Pin) == GPIO_PIN_RESET)<br>&#123;<br>    HAL_Delay(<span class="hljs-number">50</span>);<br>    <span class="hljs-keyword">if</span>(HAL_GPIO_ReadPin(KEY1_GPIO_Port,KEY1_Pin) == GPIO_PIN_RESET)<br>    &#123;<br>        Flash_TestRead();<br>        <span class="hljs-keyword">while</span>(!HAL_GPIO_ReadPin(KEY1_GPIO_Port,KEY1_Pin));<br>    &#125;<br>&#125;<br><span class="hljs-comment">/*按键KEY0被按下*/</span><br><span class="hljs-keyword">if</span>(HAL_GPIO_ReadPin(KEY0_GPIO_Port,KEY0_Pin) == GPIO_PIN_RESET)<br>&#123;<br>    HAL_Delay(<span class="hljs-number">50</span>);<br>    <span class="hljs-keyword">if</span>(HAL_GPIO_ReadPin(KEY0_GPIO_Port,KEY0_Pin) == GPIO_PIN_RESET)<br>    &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;---------------------\r\n&quot;</span>);<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Erasing Block 0(256 pages)...\r\n&quot;</span>);<br>        <span class="hljs-type">uint32_t</span> globalAddr=<span class="hljs-number">0</span>;<br>        Flash_EraseBlock64K(globalAddr);<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Block 0 is erased.\r\n&quot;</span>);<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;---------------------\r\n&quot;</span>);<br>        <span class="hljs-keyword">while</span>(!HAL_GPIO_ReadPin(KEY0_GPIO_Port,KEY0_Pin));<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>在spi.c中实现W25Q128的写入&#x2F;读取测试函数Flash_TestWrite()&#x2F;Flash_TestRead()，具体源代码如下所示 <em>（注释4）</em></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">/*spi.c中包含的头文件*/</span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;w25flash.h&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;string.h&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;stdio.h&quot;</span></span><br> <br><span class="hljs-comment">/*spi.c中的函数定义*/</span><br><span class="hljs-comment">//测试写入Page0和Page1</span><br><span class="hljs-comment">//注意：一个Page写入之前必须是被擦除过的，写入之后就不能再重复写</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">Flash_TestWrite</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span><br>&#123;<br><span class="hljs-type">uint8_t</span> blobkNo = <span class="hljs-number">0</span>;<br><span class="hljs-type">uint16_t</span> sectorNo = <span class="hljs-number">0</span>;<br><span class="hljs-type">uint16_t</span> pageNo = <span class="hljs-number">0</span>;<br><span class="hljs-type">uint32_t</span> memAddress = <span class="hljs-number">0</span>;<br><br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;---------------------\r\n&quot;</span>);<br><span class="hljs-comment">//写入Page0两个字符串</span><br>memAddress = Flash_Addr_byBlockSectorPage(blobkNo, sectorNo, pageNo);<span class="hljs-comment">//Page0的地址</span><br><span class="hljs-type">uint8_t</span>bufStr1[] = <span class="hljs-string">&quot;Hello from beginning&quot;</span>;<br><span class="hljs-type">uint16_t</span> len = <span class="hljs-number">1</span> + <span class="hljs-built_in">strlen</span>(<span class="hljs-string">&quot;Hello from beginning&quot;</span>); <span class="hljs-comment">//包括结束符&#x27;\0&#x27;</span><br>Flash_WriteInPage(memAddress, bufStr1, len);   <span class="hljs-comment">//在Page0的起始位置写入数据</span><br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Write in Page0:0\r\n%s\r\n&quot;</span>, bufStr1);<br> <br><span class="hljs-type">uint8_t</span>bufStr2[]=<span class="hljs-string">&quot;Hello in page&quot;</span>;<br>len = <span class="hljs-number">1</span> + <span class="hljs-built_in">strlen</span>(<span class="hljs-string">&quot;Hello in page&quot;</span>); <span class="hljs-comment">//包括结束符&#x27;\0&#x27;</span><br>Flash_WriteInPage(memAddress+<span class="hljs-number">100</span>, bufStr2, len);   <span class="hljs-comment">//Page0内偏移100</span><br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Write in Page0:100\r\n%s\r\n&quot;</span>, bufStr2);<br> <br><span class="hljs-comment">//写入Page1中0-255数字</span><br><span class="hljs-type">uint8_t</span>bufPage[FLASH_PAGE_SIZE];<span class="hljs-comment">//EN25Q_PAGE_SIZE=256</span><br><span class="hljs-keyword">for</span> (<span class="hljs-type">uint16_t</span> i=<span class="hljs-number">0</span>;i&lt;FLASH_PAGE_SIZE;i++)<br>bufPage[i] = i;<span class="hljs-comment">//准备数据</span><br>pageNo = <span class="hljs-number">1</span>; <span class="hljs-comment">//Page 1</span><br>memAddress = Flash_Addr_byBlockSectorPage(blobkNo, sectorNo, pageNo);<span class="hljs-comment">//page1的地址</span><br>Flash_WriteInPage(memAddress, bufPage, FLASH_PAGE_SIZE);   <span class="hljs-comment">//写一个Page</span><br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Write 0-255 in Page1\r\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;---------------------\r\n&quot;</span>);<br>&#125;<br> <br><span class="hljs-comment">//测试读取Page0 和 Page1的内容</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">Flash_TestRead</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span><br>&#123;<br><span class="hljs-type">uint8_t</span> blobkNo=<span class="hljs-number">0</span>;<br><span class="hljs-type">uint16_t</span> sectorNo=<span class="hljs-number">0</span>;<br><span class="hljs-type">uint16_t</span> pageNo=<span class="hljs-number">0</span>;<br><br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;---------------------\r\n&quot;</span>);<br><span class="hljs-comment">//读取Page0</span><br><span class="hljs-type">uint8_t</span> bufStr[<span class="hljs-number">50</span>];<span class="hljs-comment">//Page0读出的数据</span><br><span class="hljs-type">uint32_t</span> memAddress = Flash_Addr_byBlockSectorPage(blobkNo, sectorNo,pageNo);<br>Flash_ReadBytes(memAddress, bufStr, <span class="hljs-number">50</span>);<span class="hljs-comment">//读取50个字符</span><br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Read from Page0:0\r\n%s\r\n&quot;</span>,bufStr);<br> <br>Flash_ReadBytes(memAddress+<span class="hljs-number">100</span>, bufStr, <span class="hljs-number">50</span>);<span class="hljs-comment">//地址偏移100后的50个字字节</span><br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Read from Page0:100\r\n%s\r\n&quot;</span>,bufStr);<br> <br><span class="hljs-comment">//读取Page1</span><br><span class="hljs-type">uint8_t</span>randData = <span class="hljs-number">0</span>;<br>pageNo = <span class="hljs-number">1</span>;<br>memAddress = Flash_Addr_byBlockSectorPage(blobkNo, sectorNo,pageNo);<br> <br>randData = Flash_ReadOneByte(memAddress+<span class="hljs-number">12</span>);<span class="hljs-comment">//读取1个字节数据，页内地址偏移12</span><br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Page1[12] = %d\r\n&quot;</span>,randData);<br> <br>randData = Flash_ReadOneByte(memAddress+<span class="hljs-number">136</span>);<span class="hljs-comment">//页内地址偏移136</span><br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Page1[136] = %d\r\n&quot;</span>,randData);<br> <br>randData = Flash_ReadOneByte(memAddress+<span class="hljs-number">210</span>);<span class="hljs-comment">//页内地址偏移210</span><br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Page1[210] = %d\r\n&quot;</span>,randData);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;---------------------\r\n&quot;</span>);<br>&#125;<br> <br><span class="hljs-comment">/*spi.h中的函数声明*/</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">Flash_TestWrite</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span>;<br><span class="hljs-type">void</span> <span class="hljs-title function_">Flash_TestRead</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span>;<br></code></pre></td></tr></table></figure><h1 id="4、常用函数"><a href="#4、常用函数" class="headerlink" title="4、常用函数"></a>4、常用函数</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">/*SPI发送数据函数*/</span><br>HAL_StatusTypeDef <span class="hljs-title function_">HAL_SPI_Transmit</span><span class="hljs-params">(SPI_HandleTypeDef *hspi, <span class="hljs-type">uint8_t</span> *pData, <span class="hljs-type">uint16_t</span> Size, <span class="hljs-type">uint32_t</span> Timeout)</span><br> <br><span class="hljs-comment">/*SPI接收数据函数*/</span><br>HAL_StatusTypeDef <span class="hljs-title function_">HAL_SPI_Receive</span><span class="hljs-params">(SPI_HandleTypeDef *hspi, <span class="hljs-type">uint8_t</span> *pData, <span class="hljs-type">uint16_t</span> Size, <span class="hljs-type">uint32_t</span> Timeout)</span><br></code></pre></td></tr></table></figure><h1 id="5、烧录验证"><a href="#5、烧录验证" class="headerlink" title="5、烧录验证"></a>5、烧录验证</h1><p>烧录程序，开发板上电后首先读取FLASH芯片的ID，并通过串口显示给用户，然后输出操作提示，按下KEY0按键会擦除块0内容，擦除后按下KEY1按键读取内容会发现全是FF，然后按下KEY2按键将数据写入，此时再按下KEY1按键读取内容会发现和我们写入的内容一致，如下图所示为整个过程串口详细输出信息</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/20.20.gif"></div><h1 id="6、注释详解"><a href="#6、注释详解" class="headerlink" title="6、注释详解"></a>6、注释详解</h1><p><em>注释1</em>：图片来源<a href="https://www.emtronix.com/article/article20181111.html" title="多路SPI从设备连接方法--技术天地">多路SPI从设备连接方法–技术天地</a></p><p><em>注释2</em>：<a href="https://www.epubit.com/bookDetails?id=UB77e58e05a5ea9" title="图片来源STM32Cube高效开发教程（基础篇）">图片来源STM32Cube高效开发教程（基础篇）</a></p><p><em>注释3</em>：<a href="https://pdf1.alldatasheet.com/datasheet-pdf/view/506494/WINBOND/W25Q128FV.html" title="W25Q128FV Datasheet">W25Q128FV Datasheet</a></p><p><em>注释4</em>：驱动代码来源<a href="https://www.epubit.com/bookDetails?id=UB77e58e05a5ea9" title="STM32Cube高效开发教程（基础篇）">STM32Cube高效开发教程（基础篇）</a></p><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p><a href="https://www.epubit.com/bookDetails?id=UB77e58e05a5ea9" title="STM32Cube高效开发教程（基础篇）">STM32Cube高效开发教程（基础篇）</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>STM32CubeMX</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>STM32CubeMX教程19 I2C - MPU6050驱动</title>
    <link href="/2024/01/26/STM32CubeMX%E6%95%99%E7%A8%8B19-I2C-MPU6050%E9%A9%B1%E5%8A%A8/"/>
    <url>/2024/01/26/STM32CubeMX%E6%95%99%E7%A8%8B19-I2C-MPU6050%E9%A9%B1%E5%8A%A8/</url>
    
    <content type="html"><![CDATA[<h1 id="1、准备材料"><a href="#1、准备材料" class="headerlink" title="1、准备材料"></a>1、准备材料</h1><p><a href="http://47.111.11.73/docs/boards/stm32/zdyz_stm32f407_explorerV3.html">正点原子stm32f407探索者开发板V2.4</a></p><p>STM32CubeMX软件（<a href="https://www.st.com/en/development-tools/stm32cubemx.html">Version 6.10.0</a>）</p><p><a href="https://doc.embedfire.com/stm32_products/must_read/zh/latest/doc/quickstart/DAP/DAP.html" title="野火DAP仿真器">野火DAP仿真器</a></p><p>keil µVision5 IDE（<a href="https://www.keil.com/download/product/">MDK-Arm</a>）</p><p><a href="https://www.st.com/zh/development-tools/stsw-link009.html">ST-LINK&#x2F;V2驱动</a></p><p><a href="http://www.openedv.com/docs/tool/ruanjian/ATK-XCOM.html" title="XCOM V2.6串口助手">XCOM V2.6串口助手</a></p><p>逻辑分析仪<a href="https://github.com/wuxx/nanoDLA" title="nanoDLA">nanoDLA</a></p><h1 id="2、实验目标"><a href="#2、实验目标" class="headerlink" title="2、实验目标"></a>2、实验目标</h1><p>使用STM32CubeMX软件配置STM32F407开发板的<font color="#fe2c24"><strong>I2C1与MPU6050芯片通信，读取MPU6050的三轴加速度和陀螺仪数据并通过串口打印出来</strong></font></p><h1 id="3、实验流程"><a href="#3、实验流程" class="headerlink" title="3、实验流程"></a>3、实验流程</h1><h2 id="3-0、前提知识"><a href="#3-0、前提知识" class="headerlink" title="3.0、前提知识"></a>3.0、前提知识</h2><p><font color="#fe2c24"><strong>本实验重点是理解I2C通信协议</strong></font>，而STM32CubeMX的配置则相对简单，这里不会过于详细全面的介绍I2C通信协议，但是会对所有需要知道的知识做介绍</p><p>在我们的开发板上有一颗三轴加速度计和陀螺仪传感器MPU6050，<font color="#fe2c24"><strong>单片机通过I2C1的PB8和PB9两个引脚与MPU6050进行通信</strong></font>，MPU6050还有一个中断引脚，这里为3D_INT引脚，但是本实验仅仅轮询读取加速度计和陀螺仪的数据，并没有用到该引脚中断功能，我们使用的开发板上的MPU6050芯片硬件原理图如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/19.1.png" width = "700"></div><p>I2C通信仅需要时钟线SCLK和数据线SDA两根线就可以让主机与挂载在I2C上的从机进行通信和数据交换，一个I2C理论上最多可挂载127个设备（从机地址用7位二进制表示）</p><p>为了让主机准确的与众多从机中的一个进行通信，每个从机都会有一个地址，I2C通信时会在通信数据中先发送从机地址，然后对应地址的从机才会响应</p><p><font color="#fe2c24"><strong>而且I2C通信使用的时钟线SCLK和数据线SDA两根线必须要做上拉设置，因为I2C的两个引脚被配置为开漏输出，因此无法输出高电平</strong></font>，I2C总线连线图如下图所示 <em>（注释1）</em></p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/19.2.png" width = "700"></div><p>MPU6050的从机地址由芯片上的AD0引脚确定，当AD0引脚接地时，从机地址为0X68；</p><p>当AD0引脚接VCC时，从机地址为0X69；</p><p><font color="#fe2c24"><strong>根据上面MPU6050芯片硬件原理图可知此时MPU6050的从机地址为0X68</strong></font></p><p>根据MPU6050 datasheet 9.3 I2C Communications Protocol 小节可知 <em>（注释2）</em>，主机要通过I2C写入&#x2F;读取MPU6050某一个寄存器一字节的数据，其通信步骤序列应该如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/19.3.png" width = "700"></div><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/19.4.png" width = "700"></div><p><font color="#fe2c24"><strong>我们以读取内部寄存器单个字节数据为例做详细介绍</strong></font>，首先确定通信的目的为主机Master从从机Slave内部某个寄存器internal register中读取一个字节数据，以下为详细通信步骤</p><ol><li>主机时钟线SCLK和数据线SDA两根线产生起始信号（当 SCL 线是高电平时 SDA 线从高电平向低电平切换）</li><li>接下来时钟线SCLK的8个时钟节拍中，由数据线SDA发送一字节8位的数据，其中高7位为从机的地址，最后一位为0（1表示读操作，0表示写操作）</li><li>接下来1个时钟节拍，从机应该产生应答信号ACK</li><li>接下来8个时钟节拍，主机发送一字节8位的数据，该数据为要读取的从机内部寄存器地址</li><li>接下来1个时钟节拍，从机应该产生应答信号ACK</li><li>主机重新产生一个起始信号</li><li>接下来8个时钟节拍，重新发送一字节8位的数据，其中高7位为从机的地址，最后一位为1，表示这次要读</li><li>接下来1个时钟节拍，从机应该产生应答信号ACK</li><li>接下来8个时钟节拍，主机读取一字节8位数据</li><li>接下来1个时钟节拍，主机应该产生应答信号NACK</li><li>主机时钟线SCLK和数据线SDA两根线产生停止信号（当 SCL 线是高电平时 SDA 线由低电平向高电平切换）</li></ol><p><font color="#fe2c24"><strong>接下来我们用逻辑分析仪捕获下主机使用I2C1读取MPU6050寄存器WHO_AM_I（0X75）时，时钟线SCLK和数据线SDA的逻辑电平变化</strong></font>，如下图所示，从图上可知I2C读取读取MPU6050内部寄存器的时序与上面我们所描述的一致</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/19.5.png" width = "700"></div><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/19.6.png" width = "700"></div><p><font color="#fe2c24"><strong>用逻辑分析仪捕获主机使用I2C1向MPU6050寄存器PWR_MGMT_1（0X6B）写入一字节0X00数据时，时钟线SCLK和数据线SDA的逻辑电平变化</strong></font>，如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/19.7.png" width = "700"></div><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/19.8.png" width = "700"></div><p><font color="#fe2c24"><strong>为什么上图中从机地址从0X68变为0XD0了？</strong></font></p><p>HAL库中的I2C写入函数HAL_I2C_Mem_Write()和读取函数HAL_I2C_Mem_Read()对传入从机地址DevAddress参数做了要求，该地址必须将数据手册中提到的地址左移才可以调用该接口</p><p>0X68（0110 1000）向左移动直到遇到1即为0XD0（1101 0000），在I2C通信中使用上述两个API，从机地址传入0XD0表示对从机地址为0X68的从机进行写操作，传入0XD1表示对从机地址为0X68的从机进行读操作</p><p>如下图为HAL库HAL_I2C_Mem_Read()函数说明</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/19.9.png" width = "700"></div><p>上面提到，<font color="#fe2c24"><strong>当启用I2C之后，其I2C_SCL和I2C_SDA两个引脚被配置为了复用功能开漏输出，而开漏输出无法输出高电平，因此I2C_SCL和I2C_SDA两个引脚需要外部上拉</strong></font>，一般的开发板都会考虑到这一点，在设计原理图的时候将使用的I2C两根线给外部上拉到3.3V，如果你使用的是自己设计的板子，请务必记住I2C需要上拉</p><p><font color="#fe2c24"><strong>细心的同学可能又发现了，你上面给出的MPU6050硬件原理图I2C两根线并没有外部上拉呀？</strong></font></p><p>虽然MPU6050硬件原理图I2C两根线没有上拉，但是在开发板的其他I2C通信的芯片上进行了外部上拉，如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/19.10.png" ></div><h2 id="3-1、CubeMX相关配置"><a href="#3-1、CubeMX相关配置" class="headerlink" title="3.1、CubeMX相关配置"></a>3.1、CubeMX相关配置</h2><h3 id="3-1-0、工程基本配置"><a href="#3-1-0、工程基本配置" class="headerlink" title="3.1.0、工程基本配置"></a>3.1.0、工程基本配置</h3><p>打开STM32CubeMX软件，单击ACCESS TO MCU SELECTOR选择开发板MCU（选择你使用开发板的主控MCU型号），选中MCU型号后单击页面右上角Start Project开始工程，具体如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/19.11.png" width = "700"></div><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/19.12.png" width = "700"></div><p>开始工程之后在配置主页面System Core&#x2F;RCC中配置HSE&#x2F;LSE晶振，在System Core&#x2F;SYS中配置Debug模式，具体如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/19.13.png" width = "700"></div><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/19.14.png" width = "700"></div><p>详细工程建立内容读者可以阅读“<a href="https://www.cnblogs.com/lc-guo/p/17937268">STM32CubeMX教程1 工程建立</a>”</p><h3 id="3-1-1、时钟树配置"><a href="#3-1-1、时钟树配置" class="headerlink" title="3.1.1、时钟树配置"></a>3.1.1、时钟树配置</h3><p>系统时钟使用8MHz外部高速时钟HSE，HCLK、PCLK1和PCLK2均设置为STM32F407能达到的最高时钟频率，具体如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/19.15.png" width = "700"></div><h3 id="3-1-2、外设参数配置"><a href="#3-1-2、外设参数配置" class="headerlink" title="3.1.2、外设参数配置"></a>3.1.2、外设参数配置</h3><p>实验需要通过串口来输出与MPU6050进行I2C通信读取的陀螺仪和加速度计数据，因此外设需要初始化USART1和I2C1</p><p>单击Pinout &amp; Configuration页面左边Connectivity&#x2F;USART1选项，然后按照“<a href="https://www.cnblogs.com/lc-guo/p/17950348">STM32CubeMX教程9 USART&#x2F;UART 异步通信</a>”实验中将USART1配置为异步通信模式，无需开启中断，如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/19.16.png" width = "700"></div><p>在Pinout ＆ Configuration页面右边芯片引脚预览Pinout view中找到与开发板上MPU6050芯片连接的I2C的两个通信引脚PB8和PB9，左边单击将其分别配置为I2C1_SCL和I2C1_SDA</p><p>然后单击Connectivity&#x2F;I2C1选项，在其模式中选择I2C，在下方Master Features中将<font color="#be191c" style="background: #fef2f0"> I2C Speed Mode </font>根据用户需求选择快速模式（400kkHz）或者标准模式（100kHz），这两种模式仅仅影响通信速率，对于本实验两个模式均可随意选择</p><p>其他参数保持默认即可，具体配置如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/19.17.png" width = "700"></div><h3 id="3-1-3、外设中断配置"><a href="#3-1-3、外设中断配置" class="headerlink" title="3.1.3、外设中断配置"></a>3.1.3、外设中断配置</h3><p>本实验无需启用中断，如果需要启用I2C1的中断，请单击System Core&#x2F;NVIC，然后根据需求勾选I2C1的事件或错误中断，并选择合适的中断优先级即可，具体配置如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/19.18.png" width = "700"></div><h2 id="3-2、生成代码"><a href="#3-2、生成代码" class="headerlink" title="3.2、生成代码"></a>3.2、生成代码</h2><h3 id="3-2-0、配置Project-Manager页面"><a href="#3-2-0、配置Project-Manager页面" class="headerlink" title="3.2.0、配置Project Manager页面"></a>3.2.0、配置Project Manager页面</h3><p>单击进入Project Manager页面，在左边Project分栏中修改工程名称、工程目录和工具链，然后在Code Generator中勾选“Gnerate peripheral initialization as a pair of ‘c&#x2F;h’ files per peripheral”，最后单击页面右上角GENERATE CODE生成工程，具体如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/19.19.png" width = "700"></div><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/19.20.png" width = "700"></div><p>详细Project Manager配置内容读者可以阅读“<a href="https://www.cnblogs.com/lc-guo/p/17937268">STM32CubeMX教程1 工程建立</a>”实验3.4.3小节</p><h3 id="3-2-1、外设初始化调用流程"><a href="#3-2-1、外设初始化调用流程" class="headerlink" title="3.2.1、外设初始化调用流程"></a>3.2.1、外设初始化调用流程</h3><p>还是一模一样的流程，与该系列教程所有的外设初始化一致</p><p>在生成的工程代码主函数中新增了MX_I2C1_Init()函数，在该函数中实现了对I2C1的模式及参数配置</p><p>在MX_I2C1_Init()函数中调用了HAL_I2C_Init()函数使用配置的参数对I2C1进行了初始化</p><p>在HAL_I2C_Init()函数中又调用了HAL_I2C_MspInit()函数对I2C1引脚复用设置，I2C1时钟使能，如果开启了中断该函数中还会有中断相关设置及使能</p><p>如下图所示为I2C1初始化调用流程</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/19.21.png" width = "700"></div><h3 id="3-2-2、外设中断调用流程"><a href="#3-2-2、外设中断调用流程" class="headerlink" title="3.2.2、外设中断调用流程"></a>3.2.2、外设中断调用流程</h3><p>本实验无需中断，因此未启动任何I2C1的中断</p><h3 id="3-2-3、添加其他必要代码"><a href="#3-2-3、添加其他必要代码" class="headerlink" title="3.2.3、添加其他必要代码"></a>3.2.3、添加其他必要代码</h3><p>需要添加MPU6050的驱动文件，文件中至少应该包括</p><ol><li>MPU6050初始化函数</li><li>MPU6050获取三轴加速度计原始数据函数</li><li>MPU6050获取三轴陀螺仪原始数据函数</li></ol><p>注意本实验只使用而不会介绍MPU6050具体驱动文件的原理，具体源代码如下所示 <em>（注释3）</em></p><p><strong>mpu6050.c文件</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;mpu6050.h&quot;</span></span><br> <br><span class="hljs-comment">/**</span><br><span class="hljs-comment">* @brief MPU6050初始化函数</span><br><span class="hljs-comment">* @alter无</span><br><span class="hljs-comment">* @param无</span><br><span class="hljs-comment">* @retval 成功返回0，失败返回1</span><br><span class="hljs-comment">*/</span><br><span class="hljs-type">uint8_t</span> <span class="hljs-title function_">MPU6050_Init</span><span class="hljs-params">(I2C_HandleTypeDef *I2Cx)</span><br>&#123;<br><span class="hljs-type">uint8_t</span> check;<br><span class="hljs-type">uint8_t</span> Data;<br> <br><span class="hljs-comment">// check device ID WHO_AM_I</span><br>HAL_I2C_Mem_Read(I2Cx, MPU6050_ADDR, MPU_DEVICE_ID_REG, <span class="hljs-number">1</span>, &amp;check, <span class="hljs-number">1</span>, I2C_TimeOut);<br><span class="hljs-comment">// 0x68 will be returned by the sensor if everything goes well</span><br><span class="hljs-keyword">if</span> (check == <span class="hljs-number">104</span>) <br>&#123;<br><span class="hljs-comment">// power management register 0X6B we should write all 0&#x27;s to wake the sensor up</span><br>Data = <span class="hljs-number">0</span>;<br>HAL_I2C_Mem_Write(I2Cx, MPU6050_ADDR, MPU_PWR_MGMT1_REG, <span class="hljs-number">1</span>, &amp;Data, <span class="hljs-number">1</span>, I2C_TimeOut);<br> <br><span class="hljs-comment">// Set DATA RATE of 1KHz by writing SMPLRT_DIV register</span><br>Data = <span class="hljs-number">0x07</span>;<br>HAL_I2C_Mem_Write(I2Cx, MPU6050_ADDR, MPU_SAMPLE_RATE_REG, <span class="hljs-number">1</span>, &amp;Data, <span class="hljs-number">1</span>, I2C_TimeOut);<br> <br><span class="hljs-comment">// Set accelerometer configuration in ACCEL_CONFIG Register</span><br><span class="hljs-comment">// XA_ST=0,YA_ST=0,ZA_ST=0, FS_SEL=0 -&gt;   2g</span><br>Data = <span class="hljs-number">0x00</span>;<br>HAL_I2C_Mem_Write(I2Cx, MPU6050_ADDR, MPU_ACCEL_CFG_REG, <span class="hljs-number">1</span>, &amp;Data, <span class="hljs-number">1</span>, I2C_TimeOut);<br> <br><span class="hljs-comment">// Set Gyroscopic configuration in GYRO_CONFIG Register</span><br><span class="hljs-comment">// XG_ST=0,YG_ST=0,ZG_ST=0, FS_SEL=0 -&gt;   250  /s</span><br>Data = <span class="hljs-number">0x00</span>;<br>HAL_I2C_Mem_Write(I2Cx, MPU6050_ADDR, MPU_GYRO_CFG_REG, <span class="hljs-number">1</span>, &amp;Data, <span class="hljs-number">1</span>, I2C_TimeOut);<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<br>&#125;<br> <br> <br><span class="hljs-comment">/**</span><br><span class="hljs-comment">* @brief MPU6050温度值获取函数</span><br><span class="hljs-comment">* @alter无</span><br><span class="hljs-comment">* @param无</span><br><span class="hljs-comment">* @retval 温度值</span><br><span class="hljs-comment">*/</span><br><span class="hljs-type">float</span> <span class="hljs-title function_">MPU_Get_Temperature</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span><br>&#123;<br><span class="hljs-type">uint8_t</span> buf[<span class="hljs-number">2</span>]; <br><span class="hljs-type">short</span> raw;<br><span class="hljs-type">float</span> temp;<br>HAL_I2C_Mem_Read(&amp;MPU6050_I2C, MPU6050_ADDR, MPU_TEMP_OUTH_REG, <span class="hljs-number">1</span>, buf, <span class="hljs-number">2</span>, I2C_TimeOut);<br>raw=((<span class="hljs-type">int16_t</span>)buf[<span class="hljs-number">0</span>]&lt;&lt;<span class="hljs-number">8</span>)|buf[<span class="hljs-number">1</span>];  <br>temp=<span class="hljs-number">36.53</span>+((<span class="hljs-type">double</span>)raw)/<span class="hljs-number">340</span>;  <br><span class="hljs-keyword">return</span> temp;;<br>&#125;<br> <br><span class="hljs-comment">/**</span><br><span class="hljs-comment">* @brief MPU6050陀螺仪值获取函数(三轴原始值)</span><br><span class="hljs-comment">* @alter无</span><br><span class="hljs-comment">* @paramgx,gy,gz:陀螺仪x,y,z轴的原始读数(带符号)</span><br><span class="hljs-comment">* @retval 正常：0，错误：其他</span><br><span class="hljs-comment">*/</span><br><span class="hljs-type">uint8_t</span> <span class="hljs-title function_">MPU_Get_RAW_Gyroscope</span><span class="hljs-params">(<span class="hljs-type">int16_t</span> *gx,<span class="hljs-type">int16_t</span> *gy,<span class="hljs-type">int16_t</span> *gz)</span><br>&#123;<br><span class="hljs-type">uint8_t</span> buf[<span class="hljs-number">6</span>],res;  <br>res = HAL_I2C_Mem_Read(&amp;MPU6050_I2C, MPU6050_ADDR, MPU_GYRO_XOUTH_REG, <span class="hljs-number">1</span>, buf, <span class="hljs-number">6</span>, I2C_TimeOut);<br><span class="hljs-keyword">if</span>(res==<span class="hljs-number">0</span>)<br>&#123;<br>*gx=((<span class="hljs-type">int16_t</span>)buf[<span class="hljs-number">0</span>]&lt;&lt;<span class="hljs-number">8</span>)|buf[<span class="hljs-number">1</span>];  <br>*gy=((<span class="hljs-type">int16_t</span>)buf[<span class="hljs-number">2</span>]&lt;&lt;<span class="hljs-number">8</span>)|buf[<span class="hljs-number">3</span>];  <br>*gz=((<span class="hljs-type">int16_t</span>)buf[<span class="hljs-number">4</span>]&lt;&lt;<span class="hljs-number">8</span>)|buf[<span class="hljs-number">5</span>];<br>&#125; <br>    <span class="hljs-keyword">return</span> res;<br>&#125;<br> <br><span class="hljs-comment">/**</span><br><span class="hljs-comment">* @brief MPU6050加速度值获取函数(三轴原始值)</span><br><span class="hljs-comment">* @alter无</span><br><span class="hljs-comment">* @paramax,ay,az:加速度计x,y,z轴的原始读数(带符号)</span><br><span class="hljs-comment">* @retval 正常：0，错误：其他</span><br><span class="hljs-comment">*/</span><br><span class="hljs-type">uint8_t</span> <span class="hljs-title function_">MPU_Get_RAW_Accelerometer</span><span class="hljs-params">(<span class="hljs-type">int16_t</span> *ax,<span class="hljs-type">int16_t</span> *ay,<span class="hljs-type">int16_t</span> *az)</span><br>&#123;<br><span class="hljs-type">uint8_t</span> buf[<span class="hljs-number">6</span>],res;  <br>res = HAL_I2C_Mem_Read(&amp;MPU6050_I2C, MPU6050_ADDR, MPU_ACCEL_XOUTH_REG, <span class="hljs-number">1</span>, buf, <span class="hljs-number">6</span>, I2C_TimeOut);<br><span class="hljs-keyword">if</span>(res==<span class="hljs-number">0</span>)<br>&#123;<br>*ax=((<span class="hljs-type">int16_t</span>)buf[<span class="hljs-number">0</span>]&lt;&lt;<span class="hljs-number">8</span>)|buf[<span class="hljs-number">1</span>];  <br>*ay=((<span class="hljs-type">int16_t</span>)buf[<span class="hljs-number">2</span>]&lt;&lt;<span class="hljs-number">8</span>)|buf[<span class="hljs-number">3</span>];  <br>*az=((<span class="hljs-type">int16_t</span>)buf[<span class="hljs-number">4</span>]&lt;&lt;<span class="hljs-number">8</span>)|buf[<span class="hljs-number">5</span>];<br>&#125; <br>    <span class="hljs-keyword">return</span> res;<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>mpu6050.h文件</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">ifndef</span> __MPU6050_H</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> __MPU6050_H</span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;main.h&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;i2c.h&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">endif</span></span><br> <br> <br><span class="hljs-meta">#<span class="hljs-keyword">define</span> MPU6050_I2C      hi2c1</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> MPU6050_ADDR     0xD0   </span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> I2C_TimeOut  100</span><br> <br><span class="hljs-comment">/*MPU6050内部寄存器地址*/</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> MPU_SAMPLE_RATE_REG0X19<span class="hljs-comment">//采样频率分频器</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> MPU_GYRO_CFG_REG0X1B<span class="hljs-comment">//陀螺仪配置寄存器</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> MPU_ACCEL_CFG_REG0X1C<span class="hljs-comment">//加速度计配置寄存器</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> MPU_ACCEL_XOUTH_REG0X3B<span class="hljs-comment">//加速度值,X轴高8位寄存器</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> MPU_TEMP_OUTH_REG0X41<span class="hljs-comment">//温度值高八位寄存器</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> MPU_GYRO_XOUTH_REG0X43<span class="hljs-comment">//陀螺仪值,X轴高8位寄存器</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> MPU_PWR_MGMT1_REG0X6B<span class="hljs-comment">//电源管理寄存器1</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> MPU_DEVICE_ID_REG0X75<span class="hljs-comment">//器件ID寄存器</span></span><br> <br><span class="hljs-type">uint8_t</span> <span class="hljs-title function_">MPU6050_Init</span><span class="hljs-params">(I2C_HandleTypeDef *I2Cx)</span>;<br><span class="hljs-type">float</span> <span class="hljs-title function_">MPU_Get_Temperature</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span>;<br><span class="hljs-type">uint8_t</span> <span class="hljs-title function_">MPU_Get_RAW_Gyroscope</span><span class="hljs-params">(<span class="hljs-type">int16_t</span> *gx,<span class="hljs-type">int16_t</span> *gy,<span class="hljs-type">int16_t</span> *gz)</span>;<br><span class="hljs-type">uint8_t</span> <span class="hljs-title function_">MPU_Get_RAW_Accelerometer</span><span class="hljs-params">(<span class="hljs-type">int16_t</span> *ax,<span class="hljs-type">int16_t</span> *ay,<span class="hljs-type">int16_t</span> *az)</span>;<br> <br><span class="hljs-comment">/*</span><br><span class="hljs-comment">MPU6050内部所有寄存器地址</span><br><span class="hljs-comment">#define MPU_SELF_TESTX_REG0X0D//自检寄存器X</span><br><span class="hljs-comment">#define MPU_SELF_TESTY_REG0X0E//自检寄存器Y</span><br><span class="hljs-comment">#define MPU_SELF_TESTZ_REG0X0F//自检寄存器Z</span><br><span class="hljs-comment">#define MPU_SELF_TESTA_REG0X10//自检寄存器A</span><br><span class="hljs-comment">#define MPU_SAMPLE_RATE_REG0X19//采样频率分频器</span><br><span class="hljs-comment">#define MPU_CFG_REG0X1A//配置寄存器</span><br><span class="hljs-comment">#define MPU_GYRO_CFG_REG0X1B//陀螺仪配置寄存器</span><br><span class="hljs-comment">#define MPU_ACCEL_CFG_REG0X1C//加速度计配置寄存器</span><br><span class="hljs-comment">#define MPU_MOTION_DET_REG0X1F//运动检测阀值设置寄存器</span><br><span class="hljs-comment">#define MPU_FIFO_EN_REG0X23//FIFO使能寄存器</span><br><span class="hljs-comment">#define MPU_I2CMST_CTRL_REG0X24//IIC主机控制寄存器</span><br><span class="hljs-comment">#define MPU_I2CSLV0_ADDR_REG0X25//IIC从机0器件地址寄存器</span><br><span class="hljs-comment">#define MPU_I2CSLV0_REG0X26//IIC从机0数据地址寄存器</span><br><span class="hljs-comment">#define MPU_I2CSLV0_CTRL_REG0X27//IIC从机0控制寄存器</span><br><span class="hljs-comment">#define MPU_I2CSLV1_ADDR_REG0X28//IIC从机1器件地址寄存器</span><br><span class="hljs-comment">#define MPU_I2CSLV1_REG0X29//IIC从机1数据地址寄存器</span><br><span class="hljs-comment">#define MPU_I2CSLV1_CTRL_REG0X2A//IIC从机1控制寄存器</span><br><span class="hljs-comment">#define MPU_I2CSLV2_ADDR_REG0X2B//IIC从机2器件地址寄存器</span><br><span class="hljs-comment">#define MPU_I2CSLV2_REG0X2C//IIC从机2数据地址寄存器</span><br><span class="hljs-comment">#define MPU_I2CSLV2_CTRL_REG0X2D//IIC从机2控制寄存器</span><br><span class="hljs-comment">#define MPU_I2CSLV3_ADDR_REG0X2E//IIC从机3器件地址寄存器</span><br><span class="hljs-comment">#define MPU_I2CSLV3_REG0X2F//IIC从机3数据地址寄存器</span><br><span class="hljs-comment">#define MPU_I2CSLV3_CTRL_REG0X30//IIC从机3控制寄存器</span><br><span class="hljs-comment">#define MPU_I2CSLV4_ADDR_REG0X31//IIC从机4器件地址寄存器</span><br><span class="hljs-comment">#define MPU_I2CSLV4_REG0X32//IIC从机4数据地址寄存器</span><br><span class="hljs-comment">#define MPU_I2CSLV4_DO_REG0X33//IIC从机4写数据寄存器</span><br><span class="hljs-comment">#define MPU_I2CSLV4_CTRL_REG0X34//IIC从机4控制寄存器</span><br><span class="hljs-comment">#define MPU_I2CSLV4_DI_REG0X35//IIC从机4读数据寄存器</span><br><span class="hljs-comment">#define MPU_I2CMST_STA_REG0X36//IIC主机状态寄存器</span><br><span class="hljs-comment">#define MPU_INTBP_CFG_REG0X37//中断/旁路设置寄存器</span><br><span class="hljs-comment">#define MPU_INT_EN_REG0X38//中断使能寄存器</span><br><span class="hljs-comment">#define MPU_INT_STA_REG0X3A//中断状态寄存器</span><br><span class="hljs-comment">#define MPU_ACCEL_XOUTH_REG0X3B//加速度值,X轴高8位寄存器</span><br><span class="hljs-comment">#define MPU_ACCEL_XOUTL_REG0X3C//加速度值,X轴低8位寄存器</span><br><span class="hljs-comment">#define MPU_ACCEL_YOUTH_REG0X3D//加速度值,Y轴高8位寄存器</span><br><span class="hljs-comment">#define MPU_ACCEL_YOUTL_REG0X3E//加速度值,Y轴低8位寄存器</span><br><span class="hljs-comment">#define MPU_ACCEL_ZOUTH_REG0X3F//加速度值,Z轴高8位寄存器</span><br><span class="hljs-comment">#define MPU_ACCEL_ZOUTL_REG0X40//加速度值,Z轴低8位寄存器</span><br><span class="hljs-comment">#define MPU_TEMP_OUTH_REG0X41//温度值高八位寄存器</span><br><span class="hljs-comment">#define MPU_TEMP_OUTL_REG0X42//温度值低8位寄存器</span><br><span class="hljs-comment">#define MPU_GYRO_XOUTH_REG0X43//陀螺仪值,X轴高8位寄存器</span><br><span class="hljs-comment">#define MPU_GYRO_XOUTL_REG0X44//陀螺仪值,X轴低8位寄存器</span><br><span class="hljs-comment">#define MPU_GYRO_YOUTH_REG0X45//陀螺仪值,Y轴高8位寄存器</span><br><span class="hljs-comment">#define MPU_GYRO_YOUTL_REG0X46//陀螺仪值,Y轴低8位寄存器</span><br><span class="hljs-comment">#define MPU_GYRO_ZOUTH_REG0X47//陀螺仪值,Z轴高8位寄存器</span><br><span class="hljs-comment">#define MPU_GYRO_ZOUTL_REG0X48//陀螺仪值,Z轴低8位寄存器</span><br><span class="hljs-comment">#define MPU_I2CSLV0_DO_REG0X63//IIC从机0数据寄存器</span><br><span class="hljs-comment">#define MPU_I2CSLV1_DO_REG0X64//IIC从机1数据寄存器</span><br><span class="hljs-comment">#define MPU_I2CSLV2_DO_REG0X65//IIC从机2数据寄存器</span><br><span class="hljs-comment">#define MPU_I2CSLV3_DO_REG0X66//IIC从机3数据寄存器</span><br><span class="hljs-comment">#define MPU_I2CMST_DELAY_REG0X67//IIC主机延时管理寄存器</span><br><span class="hljs-comment">#define MPU_SIGPATH_RST_REG0X68//信号通道复位寄存器</span><br><span class="hljs-comment">#define MPU_MDETECT_CTRL_REG0X69//运动检测控制寄存器</span><br><span class="hljs-comment">#define MPU_USER_CTRL_REG0X6A//用户控制寄存器</span><br><span class="hljs-comment">#define MPU_PWR_MGMT1_REG0X6B//电源管理寄存器1</span><br><span class="hljs-comment">#define MPU_PWR_MGMT2_REG0X6C//电源管理寄存器2 </span><br><span class="hljs-comment">#define MPU_FIFO_CNTH_REG0X72//FIFO计数寄存器高八位</span><br><span class="hljs-comment">#define MPU_FIFO_CNTL_REG0X73//FIFO计数寄存器低八位</span><br><span class="hljs-comment">#define MPU_FIFO_RW_REG0X74//FIFO读写寄存器</span><br><span class="hljs-comment">#define MPU_DEVICE_ID_REG0X75//器件ID寄存器</span><br><span class="hljs-comment">*/</span><br></code></pre></td></tr></table></figure><p><font color="#fe2c24"><strong>在keil中添加.c&#x2F;.h文件步骤如下图所示</strong></font></p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/19.22.png" width = "700"></div><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/19.23.png" width = "700"></div><p>然后将源代码复制到新建的.c&#x2F;.h文件中，最后将.c文件添加到工程即可，如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/19.24.png" width = "700"></div><p>在主函数中初始化MPU6050，主循环中获取原始的三轴加速度数据和三轴陀螺仪数据，并通过串口打印信息</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/19.25.png" ></div><p>源代码如下</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">/*main.c中定义的变量*/</span><br><span class="hljs-type">int16_t</span> ax,ay,az,gx,gy,gz;<br> <br><span class="hljs-comment">/*初始化代码*/</span><br><span class="hljs-keyword">while</span>(MPU6050_Init(&amp;hi2c1) != HAL_OK)&#123;HAL_Delay(<span class="hljs-number">1</span>);&#125;<br> <br><span class="hljs-comment">/*主循环中代码*/</span><br>MPU_Get_RAW_Gyroscope(&amp;ax,&amp;ay,&amp;az);<br>MPU_Get_RAW_Accelerometer(&amp;gx,&amp;gy,&amp;gz);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;ax:%d,ay:%d,az:%d,&quot;</span>,ax,ay,az);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;gx:%d,gy:%d,gz:%d\r\n&quot;</span>,gx,gy,gz);<br>HAL_Delay(<span class="hljs-number">100</span>);<br></code></pre></td></tr></table></figure><h1 id="4、常用函数"><a href="#4、常用函数" class="headerlink" title="4、常用函数"></a>4、常用函数</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">/*I2C读函数*/</span><br>HAL_StatusTypeDef <span class="hljs-title function_">HAL_I2C_Mem_Read</span><span class="hljs-params">(I2C_HandleTypeDef *hi2c, <span class="hljs-type">uint16_t</span> DevAddress, <span class="hljs-type">uint16_t</span> MemAddress, <span class="hljs-type">uint16_t</span> MemAddSize, <span class="hljs-type">uint8_t</span> *pData, <span class="hljs-type">uint16_t</span> Size, <span class="hljs-type">uint32_t</span> Timeout)</span><br> <br><span class="hljs-comment">/*I2C写函数*/</span><br>HAL_StatusTypeDef <span class="hljs-title function_">HAL_I2C_Mem_Write</span><span class="hljs-params">(I2C_HandleTypeDef *hi2c, <span class="hljs-type">uint16_t</span> DevAddress, <span class="hljs-type">uint16_t</span> MemAddress, <span class="hljs-type">uint16_t</span> MemAddSize, <span class="hljs-type">uint8_t</span> *pData, <span class="hljs-type">uint16_t</span> Size, <span class="hljs-type">uint32_t</span> Timeout)</span><br></code></pre></td></tr></table></figure><h1 id="5、烧录验证"><a href="#5、烧录验证" class="headerlink" title="5、烧录验证"></a>5、烧录验证</h1><p>烧录程序，上电后开启串口，可以看到源源不断的输出当前MPU6050三轴加速度数据和三轴陀螺仪数据，移动开发板会发现数据有规律改变，如下图所示为串口输出的数据</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/19.26.gif"></div><h1 id="6、注释详解"><a href="#6、注释详解" class="headerlink" title="6、注释详解"></a>6、注释详解</h1><p><em>注释1</em>：图片来源 <a href="https://zhuanlan.zhihu.com/p/137568249" title="I2C通信协议介绍 - 知乎">I2C通信协议介绍 - 知乎</a></p><p><em>注释2</em>：MPU6050 Datasheet <a href="https://invensense.tdk.com/wp-content/uploads/2015/02/MPU-6000-Datasheet1.pdf">https://invensense.tdk.com/wp-content/uploads/2015/02/MPU-6000-Datasheet1.pdf</a></p><p><em>注释3</em>：MPU6050驱动库参考 <a href="https://github.com/leech001/MPU6050">https://github.com/leech001/MPU6050</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>STM32CubeMX</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>STM32CubeMX教程18 DAC - DMA输出自定义波形</title>
    <link href="/2024/01/26/STM32CubeMX%E6%95%99%E7%A8%8B18-DAC-DMA%E8%BE%93%E5%87%BA%E8%87%AA%E5%AE%9A%E4%B9%89%E6%B3%A2%E5%BD%A2/"/>
    <url>/2024/01/26/STM32CubeMX%E6%95%99%E7%A8%8B18-DAC-DMA%E8%BE%93%E5%87%BA%E8%87%AA%E5%AE%9A%E4%B9%89%E6%B3%A2%E5%BD%A2/</url>
    
    <content type="html"><![CDATA[<h1 id="1、准备材料"><a href="#1、准备材料" class="headerlink" title="1、准备材料"></a>1、准备材料</h1><p>开发板（<a href="http://47.111.11.73/docs/boards/stm32/zdyz_stm32f407_explorerV3.html">正点原子stm32f407探索者开发板V2.4</a>）</p><p>STM32CubeMX软件（<a href="https://www.st.com/en/development-tools/stm32cubemx.html">Version 6.10.0</a>）</p><p><a href="https://doc.embedfire.com/stm32_products/must_read/zh/latest/doc/quickstart/DAP/DAP.html" title="野火DAP仿真器">野火DAP仿真器</a></p><p>keil µVision5 IDE（<a href="https://www.keil.com/download/product/">MDK-Arm</a>）</p><p><a href="https://www.st.com/zh/development-tools/stsw-link009.html">ST-LINK&#x2F;V2驱动</a></p><p>一台示波器</p><p>逻辑分析仪<a href="https://github.com/wuxx/nanoDLA" title="nanoDLA">nanoDLA</a></p><h1 id="2、实验目标"><a href="#2、实验目标" class="headerlink" title="2、实验目标"></a>2、实验目标</h1><p>使用STM32CubeMX软件配置STM32F407开发板的<font color="#fe2c24"><strong>DAC OUT1实现输出0-3.3V 周期为12.8ms的正弦波形</strong></font></p><h1 id="3、实验流程"><a href="#3、实验流程" class="headerlink" title="3、实验流程"></a>3、实验流程</h1><h2 id="3-0、前提知识"><a href="#3-0、前提知识" class="headerlink" title="3.0、前提知识"></a>3.0、前提知识</h2><p>由于STM32F407的两个DAC输出通道只能自动生成三角波和噪声波，因此如果想要输出其他的波形可以自己手动定义一个周期内DAC要输出的值，并选择定时器的更新事件作为DAC输出的触发源按顺序输出</p><p>这样按照波形采样值的顺序，在每一个触发源到来的时候，手动指定DAC将要输出的值，理论上就可以输出任何我们想要输出的波形，比如正弦波，<font color="#fe2c24"><strong>本实验将以正弦波为例，讲解如何通过DAC的DMA输出正弦波型</strong></font></p><p><font color="#fe2c24"><strong>当DAC参考电源引脚VREF+接VDDA（3.3V）时，可设置的DAC输出寄存器值范围为0~4095，而DAC的输出范围为0-3.3V</strong></font>，要输出的正弦波sin(x)波形幅值范围为-1~1，因此可以对该波形做一些平移伸缩，将其幅值范围缩放到DAC设置范围0~4095内，变换后的正弦波公式为：y&#x3D;2047*(sin(x)+1)</p><p>在该正弦波形的一个周期0-2pi内平均取128个采样点，然后按照时间先后顺序定义在数组中，每当0.1ms触发源到来的时候，我们就递归的从数组中取出一个值将其设置为DAC的输出值，直到128个采样点全部设置完毕，然后再反复从第一个重新设置，这样就可以大致实现正弦波型</p><p><font color="#fe2c24"><strong>因为需要频繁的从内存取出数据然后写入DAC外设，因此这里比较合适的做法是使用DMA的方式进行</strong></font>，通过上述设置的DAC输出的正弦波形的周期应该为0.1ms*128&#x3D;12.8ms，正弦波的幅值范围应该为0-3.3V</p><h2 id="3-1、CubeMX相关配置"><a href="#3-1、CubeMX相关配置" class="headerlink" title="3.1、CubeMX相关配置"></a>3.1、CubeMX相关配置</h2><h3 id="3-1-0、工程基本配置"><a href="#3-1-0、工程基本配置" class="headerlink" title="3.1.0、工程基本配置"></a>3.1.0、工程基本配置</h3><p>打开STM32CubeMX软件，单击ACCESS TO MCU SELECTOR选择开发板MCU（选择你使用开发板的主控MCU型号），选中MCU型号后单击页面右上角Start Project开始工程，具体如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/18.1.png" width = "700"></div><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/18.2.png" width = "700"></div><p>开始工程之后在配置主页面System Core&#x2F;RCC中配置HSE&#x2F;LSE晶振，在System Core&#x2F;SYS中配置Debug模式，具体如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/18.3.png" width = "700"></div><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/18.4.png" width = "700"></div><p>详细工程建立内容读者可以阅读“<a href="https://www.cnblogs.com/lc-guo/p/17937268">STM32CubeMX教程1 工程建立</a>”</p><h3 id="3-1-1、时钟树配置"><a href="#3-1-1、时钟树配置" class="headerlink" title="3.1.1、时钟树配置"></a>3.1.1、时钟树配置</h3><p>系统时钟使用8MHz外部高速时钟HSE，HCLK、PCLK1和PCLK2均设置为STM32F407能达到的最高时钟频率，具体如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/18.5.png" width = "700"></div><h3 id="3-1-2、外设参数配置"><a href="#3-1-2、外设参数配置" class="headerlink" title="3.1.2、外设参数配置"></a>3.1.2、外设参数配置</h3><p>在Pinout ＆ Configuration页面左边功能分类栏目Analog中单击其中DAC</p><p>在Mode中勾选OUT1 Configuration</p><p><font color="#fe2c24"><strong>选择TIM6的外部触发事件作为DAC OU1输出的触发源</strong></font>，不选择波形生成模式，因为本实验要生成自定义波形</p><p>具体配置如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/18.6.png" width = "700"></div><p>单击Configuration中的DMA Settings选项卡对DAC的DMA请求进行设置</p><p>单击ADD按键增加DMA请求，这里可选的只有一个DAC1</p><p>选择想要使用的DMA Stream，并设置优先级，将DMA请求模式设置为循环模式，外设地址不增加，内存地址递增，数据宽度选择字Word</p><p>上述配置如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/18.7.png" width = "700"></div><h3 id="3-1-3、外设中断配置"><a href="#3-1-3、外设中断配置" class="headerlink" title="3.1.3、外设中断配置"></a>3.1.3、外设中断配置</h3><p>在Pinout &amp; Configuration页面左边System Core&#x2F;NVIC中<font color="#fe2c24"><strong>勾选DMA1 Stream5 全局中断</strong></font>，然后选择合适的中断优先级即可</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/18.8.png" width = "700"></div><h2 id="3-2、生成代码"><a href="#3-2、生成代码" class="headerlink" title="3.2、生成代码"></a>3.2、生成代码</h2><h3 id="3-2-0、配置Project-Manager页面"><a href="#3-2-0、配置Project-Manager页面" class="headerlink" title="3.2.0、配置Project Manager页面"></a>3.2.0、配置Project Manager页面</h3><p>单击进入Project Manager页面，在左边Project分栏中修改工程名称、工程目录和工具链，然后在Code Generator中勾选“Gnerate peripheral initialization as a pair of ‘c&#x2F;h’ files per peripheral”，最后单击页面右上角GENERATE CODE生成工程，具体如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/18.9.png" width = "700"></div><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/18.10.png" width = "700"></div><p>详细Project Manager配置内容读者可以阅读“<a href="https://www.cnblogs.com/lc-guo/p/17937268">STM32CubeMX教程1 工程建立</a>”实验3.4.3小节</p><h3 id="3-2-1、外设初始化调用流程"><a href="#3-2-1、外设初始化调用流程" class="headerlink" title="3.2.1、外设初始化调用流程"></a>3.2.1、外设初始化调用流程</h3><p>在生成的工程代码主函数中新增了MX_DMA_Init()函数，该函数对DAC使用的DMA1时钟使能，由于启用了该DMA的中断，因此还对中断优先级及使能进行了配置，如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/18.11.png"></div><p>DAC的初始化调用流程与“<a href="https://www.cnblogs.com/lc-guo/p/17965467">STM32CubeMX教程16 DAC - 输出3.3V内任意电压</a>”实验一致，只是因为本实验配置了DMA，因此在HAL_DAC_MspInit()函数中增加了对使用的DAC1 DMA请求的相关配置代码，如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/18.12.png"></div><h3 id="3-2-2、外设中断调用流程"><a href="#3-2-2、外设中断调用流程" class="headerlink" title="3.2.2、外设中断调用流程"></a>3.2.2、外设中断调用流程</h3><p>DMA全局中断事件回调函数为一个函数指针，当使用HAL_DAC_Start_DMA()函数启动DAC传输时，会将DMA全局中断事件回调函数指针指向具体的函数，这里指向了DAC_DMAConvCpltCh1()函数</p><p><font color="#fe2c24"><strong>在DAC_DMAConvCpltCh1()函数中最终调用了DAC OU1 DMA传输完成中断回调函数HAL_DAC_ConvCpltCallbackCh1()</strong></font>，该函数为虚函数，需要用户重新实现</p><p>启用DMA的外设中断调用流程可参考“<a href="https://www.cnblogs.com/lc-guo/p/17957875">STM32CubeMX教程12 DMA 直接内存读取</a>”实验3.2.2、外设中断调用流程小节，上述具体过程如下图所述</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/18.13.png" width = "700"></div><h3 id="3-2-3、添加其他必要代码"><a href="#3-2-3、添加其他必要代码" class="headerlink" title="3.2.3、添加其他必要代码"></a>3.2.3、添加其他必要代码</h3><p>采集正弦波y&#x3D;2047*(sin(x)+1)的一个周期2pi内n个采样点，并将其定义在一个uint32_t 数组中，笔者这里定义了128个采样点</p><p><font color="#fe2c24"><em><em>为什么非要正弦波函数为y&#x3D;2047</em>(sin(x)+1)？</em>*</font></p><p>因为DAC的输出范围为0~4095，而sin(x)的输出范围为-1~1，因此需要采集的正弦波采样点最好缩放到0-4095范围，这样输出的波形更好显示</p><p>源代码如下所示 <em>（注释1）</em></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">/*正弦波数据，12bit，1个周期128个点, 0-4095之间变化*/</span><br><span class="hljs-type">const</span> <span class="hljs-type">uint32_t</span> userWave[] = <br>&#123;<br>    <span class="hljs-number">2047</span>,   <span class="hljs-number">2147</span>,<span class="hljs-number">2248</span>,   <span class="hljs-number">2347</span>,<span class="hljs-number">2446</span>,<span class="hljs-number">2544</span>,<span class="hljs-number">2641</span>,<span class="hljs-number">2737</span>,<br>    <span class="hljs-number">2830</span>,   <span class="hljs-number">2922</span>,<span class="hljs-number">3012</span>,<span class="hljs-number">3099</span>,<span class="hljs-number">3184</span>,<span class="hljs-number">3266</span>,<span class="hljs-number">3346</span>,<span class="hljs-number">3422</span>,<br>    <span class="hljs-number">3494</span>,   <span class="hljs-number">3564</span>,<span class="hljs-number">3629</span>,<span class="hljs-number">3691</span>,<span class="hljs-number">3749</span>,<span class="hljs-number">3803</span>,<span class="hljs-number">3852</span>,<span class="hljs-number">3897</span>,<br>    <span class="hljs-number">3938</span>,   <span class="hljs-number">3974</span>,<span class="hljs-number">4006</span>,<span class="hljs-number">4033</span>,<span class="hljs-number">4055</span>,<span class="hljs-number">4072</span>,<span class="hljs-number">4084</span>,<span class="hljs-number">4092</span>,<br>    <span class="hljs-number">4094</span>,   <span class="hljs-number">4092</span>,<span class="hljs-number">4084</span>,<span class="hljs-number">4072</span>,<span class="hljs-number">4055</span>,<span class="hljs-number">4033</span>,<span class="hljs-number">4006</span>,<span class="hljs-number">3974</span>,<br>    <span class="hljs-number">3938</span>,   <span class="hljs-number">3897</span>,<span class="hljs-number">3852</span>,<span class="hljs-number">3803</span>,<span class="hljs-number">3749</span>,<span class="hljs-number">3691</span>,<span class="hljs-number">3629</span>,<span class="hljs-number">3564</span>,<br>    <span class="hljs-number">3494</span>,   <span class="hljs-number">3422</span>,<span class="hljs-number">3346</span>,<span class="hljs-number">3266</span>,<span class="hljs-number">3184</span>,<span class="hljs-number">3099</span>,<span class="hljs-number">3012</span>,<span class="hljs-number">2922</span>,<br>    <span class="hljs-number">2830</span>,   <span class="hljs-number">2737</span>,<span class="hljs-number">2641</span>,<span class="hljs-number">2544</span>,<span class="hljs-number">2446</span>,<span class="hljs-number">2347</span>,<span class="hljs-number">2248</span>,<span class="hljs-number">2147</span>,<br>    <span class="hljs-number">2047</span>,   <span class="hljs-number">1947</span>,<span class="hljs-number">1846</span>,<span class="hljs-number">1747</span>,<span class="hljs-number">1648</span>,<span class="hljs-number">1550</span>,<span class="hljs-number">1453</span>,<span class="hljs-number">1357</span>,<br>    <span class="hljs-number">1264</span>,   <span class="hljs-number">1172</span>,<span class="hljs-number">1082</span>,<span class="hljs-number">995</span> ,<span class="hljs-number">910</span> ,<span class="hljs-number">828</span> ,<span class="hljs-number">748</span> ,<span class="hljs-number">672</span> ,<br>    <span class="hljs-number">600</span> ,   <span class="hljs-number">530</span> ,<span class="hljs-number">465</span> ,<span class="hljs-number">403</span> ,<span class="hljs-number">345</span> ,<span class="hljs-number">291</span> ,<span class="hljs-number">242</span> ,<span class="hljs-number">197</span> ,<br>    <span class="hljs-number">156</span> ,   <span class="hljs-number">120</span> ,<span class="hljs-number">88</span>  ,<span class="hljs-number">61</span>  ,<span class="hljs-number">39</span>  ,<span class="hljs-number">22</span>  ,<span class="hljs-number">10</span>  ,<span class="hljs-number">2</span>   ,<br>    <span class="hljs-number">0</span>   ,   <span class="hljs-number">2</span>   ,<span class="hljs-number">10</span>  ,<span class="hljs-number">22</span>  ,<span class="hljs-number">39</span>  ,<span class="hljs-number">61</span>  ,<span class="hljs-number">88</span>  ,<span class="hljs-number">120</span> ,<br>    <span class="hljs-number">156</span> ,   <span class="hljs-number">197</span> ,<span class="hljs-number">242</span> ,<span class="hljs-number">291</span> ,<span class="hljs-number">345</span> ,<span class="hljs-number">403</span> ,   <span class="hljs-number">465</span>,<span class="hljs-number">530</span> ,<br>    <span class="hljs-number">600</span> ,   <span class="hljs-number">672</span> ,<span class="hljs-number">748</span> ,<span class="hljs-number">828</span> ,<span class="hljs-number">910</span> ,<span class="hljs-number">995</span> ,<span class="hljs-number">1082</span>,<span class="hljs-number">1172</span>,<br>    <span class="hljs-number">1264</span>,   <span class="hljs-number">1357</span>,<span class="hljs-number">1453</span>,   <span class="hljs-number">1550</span>,<span class="hljs-number">1648</span>,<span class="hljs-number">1747</span>,<span class="hljs-number">1846</span>,<span class="hljs-number">1947</span><br>&#125;;<br></code></pre></td></tr></table></figure><p>在dac.c中重新实现DAC OU1 DMA传输完成中断回调函数HAL_DAC_ConvCpltCallbackCh1()，源代码如下</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">/*DAC OUT1 DMA传输完成中断回调函数*/</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">HAL_DAC_ConvCpltCallbackCh1</span><span class="hljs-params">(DAC_HandleTypeDef *hdac)</span><br>&#123;<br>    <span class="hljs-comment">/*翻转RED_LED引脚状态*/</span><br>    HAL_GPIO_TogglePin(RED_LED_GPIO_Port,RED_LED_Pin);<br>&#125;<br></code></pre></td></tr></table></figure><p>在main.c文件主函数main中以DMA方式启动DAC输出，源代码如下</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs c">HAL_DAC_Start_DMA(&amp;hdac,DAC_CHANNEL_1,userWave,<span class="hljs-number">128</span>,DAC_ALIGN_12B_R);<br>HAL_TIM_Base_Start(&amp;htim6);<br></code></pre></td></tr></table></figure><h1 id="4、常用函数"><a href="#4、常用函数" class="headerlink" title="4、常用函数"></a>4、常用函数</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs C"><span class="hljs-comment">/*以DMA启动DAC输出*/</span><br>HAL_StatusTypeDef <span class="hljs-title function_">HAL_DAC_Start_DMA</span><span class="hljs-params">(DAC_HandleTypeDef *hdac, <span class="hljs-type">uint32_t</span> Channel, <span class="hljs-type">const</span> <span class="hljs-type">uint32_t</span> *pData, <span class="hljs-type">uint32_t</span> Length,<span class="hljs-type">uint32_t</span> Alignment)</span><br> <br><span class="hljs-comment">/*停止以DMA启动的DAC输出*/</span><br>HAL_StatusTypeDef <span class="hljs-title function_">HAL_DAC_Stop_DMA</span><span class="hljs-params">(DAC_HandleTypeDef *hdac, <span class="hljs-type">uint32_t</span> Channel)</span><br> <br><span class="hljs-comment">/*DAC OUT1 DMA传输完成时间中断回调函数*/</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">HAL_DAC_ConvCpltCallbackCh1</span><span class="hljs-params">(DAC_HandleTypeDef *hdac)</span><br></code></pre></td></tr></table></figure><h1 id="5、烧录验证"><a href="#5、烧录验证" class="headerlink" title="5、烧录验证"></a>5、烧录验证</h1><p>烧录程序，单片机上电后，将示波器的探头挂钩与DAC OUT1引脚PA4相连接，接地环与开发板上的GND引脚连接，将示波器每格电压幅值调节为1.00V，将每格子采集时间调节为10ms，然后开启示波器对DAC OU1输出的波形采集</p><p>因为定时器溢出时间为0.1ms，而DMA传输的数据为正弦波一个周期内的128个样本点，因此生成的正弦波周期为128*0.1ms&#x3D;12.8ms，这与示波器采集到的正弦波波形周期一致，如下图所示为示波器采集到的正弦波形</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/18.14.png" width = "700"></div><p>在DAC OUT1 DMA传输完成时间中断回调函数中翻转了RED_LED（PF9）引脚的状态，经过上述分析知道，传输完成一次所需事件应该为输出正弦波形的周期，也即12.8ms，因此使用逻辑分析仪器采集PF9引脚的状态，发现PF9引脚确实12.8ms翻转一次状态，逻辑分析仪采集的波形如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/18.15.png" width = "700"></div><h1 id="6、注释详解"><a href="#6、注释详解" class="headerlink" title="6、注释详解"></a>6、注释详解</h1><p><em>注释1</em>：正弦波数组定义来源 <a href="https://blog.csdn.net/lc_guo/article/details/135349055?spm=1001.2014.3001.5502">DAC输出正弦波帖子</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>STM32CubeMX</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>STM32CubeMX教程17 DAC - 输出三角波噪声波</title>
    <link href="/2024/01/26/STM32CubeMX%E6%95%99%E7%A8%8B17-DAC-%E8%BE%93%E5%87%BA%E4%B8%89%E8%A7%92%E6%B3%A2%E5%99%AA%E5%A3%B0%E6%B3%A2/"/>
    <url>/2024/01/26/STM32CubeMX%E6%95%99%E7%A8%8B17-DAC-%E8%BE%93%E5%87%BA%E4%B8%89%E8%A7%92%E6%B3%A2%E5%99%AA%E5%A3%B0%E6%B3%A2/</url>
    
    <content type="html"><![CDATA[<h1 id="1、准备材料"><a href="#1、准备材料" class="headerlink" title="1、准备材料"></a>1、准备材料</h1><p><a href="http://47.111.11.73/docs/boards/stm32/zdyz_stm32f407_explorerV3.html">正点原子stm32f407探索者开发板V2.4</a></p><p>STM32CubeMX软件（<a href="https://www.st.com/en/development-tools/stm32cubemx.html">Version 6.10.0</a>）</p><p>keil µVision5 IDE（<a href="https://www.keil.com/download/product/">MDK-Arm</a>）</p><p><a href="https://www.st.com/zh/development-tools/stsw-link009.html">ST-LINK&#x2F;V2驱动</a></p><p><a href="https://doc.embedfire.com/stm32_products/must_read/zh/latest/doc/quickstart/DAP/DAP.html">野火DAP仿真器</a></p><p><a href="http://www.openedv.com/docs/tool/ruanjian/ATK-XCOM.html">XCOM V2.6串口助手</a></p><p>一台示波器</p><h1 id="2、实验目标"><a href="#2、实验目标" class="headerlink" title="2、实验目标"></a>2、实验目标</h1><p>使用STM32CubeMX软件配置STM32F407开发板的<font color="#fe2c24"><strong>DAC OUT1实现输出三角波</strong></font></p><h1 id="3、实验流程"><a href="#3、实验流程" class="headerlink" title="3、实验流程"></a>3、实验流程</h1><h2 id="3-0、前提知识"><a href="#3-0、前提知识" class="headerlink" title="3.0、前提知识"></a>3.0、前提知识</h2><p>STM32F407的DAC输出引脚除可以输出 DACoutput &#x3D; VREF+ * DOR &#x2F; 4095 的模拟电压之外，其DAC控制逻辑中还有两个重要的波形生成器 Wave generation mode ，<font color="#fe2c24"><strong>分别为三角波和噪声波，本小节的实验主要以生成三角波为例</strong></font>，只会在“3.0、前提知识”中简单提到噪声波相关内容，在实际生成过程中两者的设置类似，且均简单易理解 </p><p><font color="#fe2c24"><strong>使用DAC输出指定三角波&#x2F;噪声波需要先指定DAC的输出触发源</strong></font><font color="#be191c" style="background: #fef2f0"> Trigger </font>，DAC输出的触发源一共有7个，包括Timer 2&#x2F;4&#x2F;5&#x2F;6&#x2F;7&#x2F;8 Trigger Out event和Software trigger，一般使用定时器的溢出时间作为DAC输出的触发源，本实验采用了TIM6的溢出更新事件作为DAC OUT1 三角波的触发源，所有可选的触发源如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/17.1.png"></div><p><font color="#fe2c24"><strong>当DAC输出三角波时需要设置参数</strong></font><font color="#be191c" style="background: #fef2f0"> Maximum Triangle Amplitude </font>，当触发源定时器每次产生溢出更新事件时，DAC的输出值就会从基值增加1&#x2F;减少1，因为TIM6基础定时器只能向上计数，因此当TIM6每次溢出时，DAC的输出会增加1，直到增加到设置的<font color="#be191c" style="background: #fef2f0"> Maximum Triangle Amplitude </font>参数值为止，然后逐渐减少直到基值，这个过程会反复执行从而生成三角波</p><p>上述过程如下图所示 <em>（注释1）</em></p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/17.2.png" width = "700"></div><p>当DAC输出伪噪声波时需要设置<font color="#be191c" style="background: #fef2f0"> Noise Amplitude </font>参数，其主要配置生成噪声波使用的12位LFSR寄存器解锁的位，如下图所示为DAC使用LFSR寄存器生成伪噪声的算法结构图，这里具体不做深究 <em>（注释1）</em></p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/17.3.png" width = "700"></div><h2 id="3-1、CubeMX相关配置"><a href="#3-1、CubeMX相关配置" class="headerlink" title="3.1、CubeMX相关配置"></a>3.1、CubeMX相关配置</h2><h3 id="3-1-0、工程基本配置"><a href="#3-1-0、工程基本配置" class="headerlink" title="3.1.0、工程基本配置"></a>3.1.0、工程基本配置</h3><p>打开STM32CubeMX软件，单击ACCESS TO MCU SELECTOR选择开发板MCU（选择你使用开发板的主控MCU型号），选中MCU型号后单击页面右上角Start Project开始工程，具体如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/17.4.png" width = "700"></div><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/17.5.png" width = "700"></div><p>开始工程之后在配置主页面System Core&#x2F;RCC中配置HSE&#x2F;LSE晶振，在System Core&#x2F;SYS中配置Debug模式，具体如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/17.6.png" width = "700"></div><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/17.7.png" width = "700"></div><p>详细工程建立内容读者可以阅读“<a href="https://www.cnblogs.com/lc-guo/p/17937268">STM32CubeMX教程1 工程建立</a>”</p><h3 id="3-1-1、时钟树配置"><a href="#3-1-1、时钟树配置" class="headerlink" title="3.1.1、时钟树配置"></a>3.1.1、时钟树配置</h3><p>系统时钟使用8MHz外部高速时钟HSE，HCLK、PCLK1和PCLK2均设置为STM32F407能达到的最高时钟频率，具体如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/17.8.png" width = "700"></div><h3 id="3-1-2、外设参数配置"><a href="#3-1-2、外设参数配置" class="headerlink" title="3.1.2、外设参数配置"></a>3.1.2、外设参数配置</h3><p>在Pinout ＆ Configuration页面左边功能分类栏目Analog中单击其中DAC</p><p>在Mode中勾选OUT1 Configuration</p><p><font color="#fe2c24"><strong>将DAC OUT1的触发源选择为TIM6外部触发，最大三角波幅值设置为4095</strong></font></p><p>具体配置如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/17.9.png" width = "700"></div><p>在Pinout ＆ Configuration页面左边功能分类栏目Timers中单击其中TIM6</p><p>勾选Activated激活定时器，配置其计数器参数溢出时间为0.1ms，具体参数解释请阅读“<a href="https://www.cnblogs.com/lc-guo/p/17942465">STM32CubeMX教程5 TIM 定时器概述及基本定时器</a>”</p><p>外部事件触发选择更新事件Updata Event，具体配置如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/17.10.png" width = "700"></div><h3 id="3-1-3、外设中断配置"><a href="#3-1-3、外设中断配置" class="headerlink" title="3.1.3、外设中断配置"></a>3.1.3、外设中断配置</h3><p>此实验无需开启DAC的任何中断</p><h2 id="3-2、生成代码"><a href="#3-2、生成代码" class="headerlink" title="3.2、生成代码"></a>3.2、生成代码</h2><h3 id="3-2-0、配置Project-Manager页面"><a href="#3-2-0、配置Project-Manager页面" class="headerlink" title="3.2.0、配置Project Manager页面"></a>3.2.0、配置Project Manager页面</h3><p>单击进入Project Manager页面，在左边Project分栏中修改工程名称、工程目录和工具链，然后在Code Generator中勾选“Gnerate peripheral initialization as a pair of ‘c&#x2F;h’ files per peripheral”，最后单击页面右上角GENERATE CODE生成工程，具体如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/17.11.png" width = "700"></div><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/17.12.png" width = "700"></div><p>详细Project Manager配置内容读者可以阅读”<a href="https://www.cnblogs.com/lc-guo/p/17937268">STM32CubeMX教程1 工程建立</a>“实验3.4.3小节</p><h3 id="3-2-1、外设初始化调用流程"><a href="#3-2-1、外设初始化调用流程" class="headerlink" title="3.2.1、外设初始化调用流程"></a>3.2.1、外设初始化调用流程</h3><p>请阅读“<a href="https://www.cnblogs.com/lc-guo/p/17965467">STM32CubeMX教程16 DAC - 输出3.3V内任意电压</a>”实验“3.2.1、外设初始化调用流程”小节</p><h3 id="3-2-2、外设中断调用流程"><a href="#3-2-2、外设中断调用流程" class="headerlink" title="3.2.2、外设中断调用流程"></a>3.2.2、外设中断调用流程</h3><p>此实验无需开启DAC的任何中断</p><h3 id="3-2-3、添加其他必要代码"><a href="#3-2-3、添加其他必要代码" class="headerlink" title="3.2.3、添加其他必要代码"></a>3.2.3、添加其他必要代码</h3><p>在主函数中启动DAC通道1输出，默认基值设置为0即可，源代码如下所示</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">/*启动DAC输出*/</span><br>HAL_DAC_Start(&amp;hdac,DAC_CHANNEL_1);<br><span class="hljs-comment">/*设置DAC三角波输出基值*/</span><br><span class="hljs-type">int32_t</span> DacValue=<span class="hljs-number">0</span>;<br>HAL_DAC_SetValue(&amp;hdac,DAC_CHANNEL_1,DAC_ALIGN_12B_L,DacValue);<br><span class="hljs-comment">/*启动TIM6触发源*/</span><br>HAL_TIM_Base_Start(&amp;htim6);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Reset\r\n&quot;</span>);<br></code></pre></td></tr></table></figure><h1 id="4、常用函数"><a href="#4、常用函数" class="headerlink" title="4、常用函数"></a>4、常用函数</h1><p>请阅读“<a href="https://www.cnblogs.com/lc-guo/p/17965467">STM32CubeMX教程16 DAC - 输出3.3V内任意电压</a>”实验</p><h1 id="5、烧录验证"><a href="#5、烧录验证" class="headerlink" title="5、烧录验证"></a>5、烧录验证</h1><p>烧录程序，单片机上电后，将示波器的探头挂钩与DAC OUT1引脚PA4相连接，接地环与开发板上的GND引脚连接，将示波器每格电压幅值调节为1.00V，将每格子采集时间调节为400ms，然后开启示波器对DAC OU1输出的波形采集</p><p>设置Maximum Triangle Amplitud最大三角波幅值设置为2047时由示波器采集到的三角波如下图所示，<font color="#fe2c24"><strong>其中三角波的幅值电压为1.48V，大致为3.3V的一半，波形频率为2.446Hz，计算的周期大约为408.8ms，定时器溢出时间为0.1ms，期待的周期为0.1<em>2048</em>2&#x3D;409.6ms</strong></font>，与示波器采集结果大致一致</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/17.13.png" width = "700"></div><p>设置Maximum Triangle Amplitud最大三角波幅值设置为4095时由示波器采集到的三角波如下图所示，<font color="#fe2c24"><strong>其中三角波的幅值电压为2.96V，波形频率为1.207Hz，计算的周期大约为828.5ms，定时器溢出时间为0.1ms，期待的周期为0.1<em>4096</em>2&#x3D;819.2ms</strong></font>，与示波器采集结果大致一致</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/17.14.png" width = "700"></div><h1 id="6、注释解析"><a href="#6、注释解析" class="headerlink" title="6、注释解析"></a>6、注释解析</h1><p><em>注释1</em>：图片来源STM32F4xx 中文参考手册</p><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p><a href="https://www.epubit.com/bookDetails?id=UB77e58e05a5ea9">STM32Cube高效开发教程（基础篇）</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>STM32CubeMX</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>STM32CubeMX教程16 DAC - 输出3.3V内任意电压</title>
    <link href="/2024/01/26/STM32CubeMX%E6%95%99%E7%A8%8B16-DAC-%E8%BE%93%E5%87%BA3-3V%E5%86%85%E4%BB%BB%E6%84%8F%E7%94%B5%E5%8E%8B/"/>
    <url>/2024/01/26/STM32CubeMX%E6%95%99%E7%A8%8B16-DAC-%E8%BE%93%E5%87%BA3-3V%E5%86%85%E4%BB%BB%E6%84%8F%E7%94%B5%E5%8E%8B/</url>
    
    <content type="html"><![CDATA[<h1 id="1、准备材料"><a href="#1、准备材料" class="headerlink" title="1、准备材料"></a>1、准备材料</h1><p>开发板（<a href="http://47.111.11.73/docs/boards/stm32/zdyz_stm32f407_explorerV3.html">正点原子stm32f407探索者开发板V2.4</a>）</p><p>STM32CubeMX软件（<a href="https://www.st.com/en/development-tools/stm32cubemx.html">Version 6.10.0</a>）</p><p>keil µVision5 IDE（<a href="https://www.keil.com/download/product/">MDK-Arm</a>）</p><p><a href="https://www.st.com/zh/development-tools/stsw-link009.html">ST-LINK&#x2F;V2驱动</a></p><p><a href="https://doc.embedfire.com/stm32_products/must_read/zh/latest/doc/quickstart/DAP/DAP.html">野火DAP仿真器</a></p><p><a href="http://www.openedv.com/docs/tool/ruanjian/ATK-XCOM.html">XCOM V2.6串口助手</a></p><h1 id="2、实验目标"><a href="#2、实验目标" class="headerlink" title="2、实验目标"></a>2、实验目标</h1><p>使用STM32CubeMX软件配置STM32F407开发板的<font color="#fe2c24"><strong>DAC OUT1实现输出0-3.3V任意模拟电压</strong></font>，然后用ADC1_IN5单通道采集DAC输出的电压，并利用USART1输出信息用于验证</p><h1 id="3、实验流程"><a href="#3、实验流程" class="headerlink" title="3、实验流程"></a>3、实验流程</h1><h2 id="3-0、前提知识"><a href="#3-0、前提知识" class="headerlink" title="3.0、前提知识"></a>3.0、前提知识</h2><p>STM32F407有一个DAC，该DAC拥有两个输出通道OUT1&#x2F;2，每个通道均可以输出0~VREF+范围内电压、噪声波或三角波型</p><p>DAC集成了两个输出缓冲器，可用来降低输出阻抗并在不增加外部运算放大器的情况下直接驱动外部负载，该参数可以在STM32CubeMX中DAC参数配置页面配置，一般选择Enable</p><p>DAC输出的触发源一共有8个触发源，可以通过设置DAC控制寄存器DAC_CR的TSEL[2:0]位来决定触发源，其中外部引脚触发源在STM32CubeMX中需要勾选Mode中的External Trigger才可以选择，具体如下表所示 <em>（注释1）</em></p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/16.1.png" width=700></div><p>DAC的数字转模拟主要是利用片上的12位电压输出数模转换器来实现的，而这个12位电压输出数模转换器的输入数据为数据输出寄存器DORx中的内容，<font color="#fe2c24"><strong>但是用户不能直接将数据写入数据输出寄存器DORx中，而是需要将数据输入数据保持寄存器DHRx中，然后等待触发源到来&#x2F;一个时钟周期后，数据将自动从DHRx中转移到DORx中</strong></font></p><p><font color="#fe2c24"><strong>由于DHRx寄存器位32位寄存器，而我们写入的数据为8&#x2F;12位的，因此存在数据对齐的问题</strong></font>，采用不同的对齐方式需要将数据写入对应对齐方式的数据保存寄存器中，如下图所示为DAC单&#x2F;双通道模式下的数据对齐模式，每种模式对应1&#x2F;2个寄存器（注释1）</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/16.2.png" width=700></div><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/16.3.png" width=700></div><p><font color="#fe2c24"><strong>举个例子：</strong></font></p><p>本实验采取DAC1单通道模式12位右对齐，因此笔者需要将数据写入 DAC_DHR12R1 寄存器中，而该寄存器的偏址从手册上可以看到为0x80</p><p>我们写入DAC寄存器数据时使用的函数为HAL_DAC_SetValue(&amp;hdac,DAC_CHANNEL_1,DAC_ALIGN_12B_R,DacValue)，其中DAC_ALIGN_12B_R值为0，因此最后将DacValue值写入了地址为DAC基址+0x00000008UL偏址的 DAC_DHR12R1 寄存器，上述描述如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/16.4.png" width=700></div><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/16.5.png" width=700></div><p><font color="#fe2c24"><strong>DAC输出引脚输出的电压值由DACoutput &#x3D; VREF+ * DOR &#x2F; 4095公式计算，通常 VREF+直接与VDDA短接，因此DAC通道输出的电压范围为0-3.3V</strong></font>，如下图所示为DAC通道框图 <em>（注释1）</em></p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/16.6.png" width=700></div><h2 id="3-1、CubeMX相关配置"><a href="#3-1、CubeMX相关配置" class="headerlink" title="3.1、CubeMX相关配置"></a>3.1、CubeMX相关配置</h2><h3 id="3-1-0、工程基本配置"><a href="#3-1-0、工程基本配置" class="headerlink" title="3.1.0、工程基本配置"></a>3.1.0、工程基本配置</h3><p>打开STM32CubeMX软件，单击ACCESS TO MCU SELECTOR选择开发板MCU（选择你使用开发板的主控MCU型号），选中MCU型号后单击页面右上角Start Project开始工程，具体如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/16.7.png" width=700></div><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/16.8.png" width=700></div><p>开始工程之后在配置主页面System Core&#x2F;RCC中配置HSE&#x2F;LSE晶振，在System Core&#x2F;SYS中配置Debug模式，具体如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/16.9.png" width=700></div><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/16.10.png" width=700></div><p>详细工程建立内容读者可以阅读“<a href="https://www.cnblogs.com/lc-guo/p/17937268">STM32CubeMX教程1 工程建立</a>”</p><h3 id="3-1-1、时钟树配置"><a href="#3-1-1、时钟树配置" class="headerlink" title="3.1.1、时钟树配置"></a>3.1.1、时钟树配置</h3><p>系统时钟使用8MHz外部高速时钟HSE，HCLK、PCLK1和PCLK2均设置为STM32F407能达到的最高时钟频率，具体如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/16.11.png" width=700></div><h3 id="3-1-2、外设参数配置"><a href="#3-1-2、外设参数配置" class="headerlink" title="3.1.2、外设参数配置"></a>3.1.2、外设参数配置</h3><p>本实验需要需要初始化开发板上KEY2和KEY0用户按键，具体配置步骤请阅读“<a href="https://www.cnblogs.com/lc-guo/p/17938621">STM32CubeMX教程3 GPIO输入 - 按键响应</a>”</p><p>本实验需要需要初始化USART1作为输出信息渠道，具体配置步骤请阅读“<a href="https://www.cnblogs.com/lc-guo/p/17950348">STM32CubeMX教程9 USART&#x2F;UART 异步通信</a>”</p><p>本实验需要配置TIM3 100ms更新事件作为ADC1_IN5通道采集触发源的ADC采集，因此需要初始化TIM3和ADC1_IN5，具体配置步骤请阅读“<a href="https://www.cnblogs.com/lc-guo/p/17958496">STM32CubeMX教程13 ADC - 单通道转换</a>”，如下图所示为配置简图</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/16.12.png" width=700></div><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/16.13.png" width=700></div><p>接下来配置DAC OUT1，在Pinout ＆ Configuration页面左边功能分类栏目<font color="#fe2c24"><strong>Analog中单击其中DAC，在Mode中勾选OUT1 Configuration</strong></font></p><p><font color="#fe2c24"><strong>在DAC Out1 Settings中使能</strong></font><font color="#be191c" style="background: #fef2f0"> Output Buffer </font>，<font color="#be191c" style="background: #fef2f0"> Trigger </font><font color="#fe2c24"><strong>选择默认None</strong></font>，这里不需要触发源，也就是说当DAC启动后DAC就会一直输出下去而不是在每次一触发源来到的时候才输出，具体配置如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/16.14.png" width=700></div><h3 id="3-1-3、外设中断配置"><a href="#3-1-3、外设中断配置" class="headerlink" title="3.1.3、外设中断配置"></a>3.1.3、外设中断配置</h3><p><font color="#fe2c24"><strong>DAC只有两个关于DMA的下溢事件的中断源，本实验尚不设计DMA，因此这里无需开启DAC的任何中断</strong></font></p><p>但是DAC的输出电压需要由ADC1_IN5来采集，因此这里勾选ADC的全局中断，并设置合适的中断优先级，具体配置如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/16.15.png" width=700></div><h2 id="3-2、生成代码"><a href="#3-2、生成代码" class="headerlink" title="3.2、生成代码"></a>3.2、生成代码</h2><h3 id="3-2-0、配置Project-Manager页面"><a href="#3-2-0、配置Project-Manager页面" class="headerlink" title="3.2.0、配置Project Manager页面"></a>3.2.0、配置Project Manager页面</h3><p>单击进入Project Manager页面，在左边Project分栏中修改工程名称、工程目录和工具链，然后在Code Generator中勾选“Gnerate peripheral initialization as a pair of ‘c&#x2F;h’ files per peripheral”，最后单击页面右上角GENERATE CODE生成工程，具体如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/16.16.png" width=700></div><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/16.17.png" width=700></div><p>详细Project Manager配置内容读者可以阅读“<a href="https://www.cnblogs.com/lc-guo/p/17937268">STM32CubeMX教程1 工程建立</a>”实验3.4.3小节</p><h3 id="3-2-1、外设初始化调用流程"><a href="#3-2-1、外设初始化调用流程" class="headerlink" title="3.2.1、外设初始化调用流程"></a>3.2.1、外设初始化调用流程</h3><p>在生成的工程代码主函数中增加了MX_DAC_Init()函数，该函数对启用的DAC触发方式、输出缓存进行了配置</p><p>然后调用HAL_DAC_Init()函数对DAC进行了初始化，并调用了HAL_DAC_MspInit()函数</p><p>在HAL_DAC_MspInit()函数中对DAC OUT1的输出引脚PA4做了引脚复用配置，并且使能了DAC的时钟，如果配置了中断，在该函数中还会出现中断优先级及中断使能相关代码</p><p>上述DAC初始化调用流程如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/16.18.png" width=700></div><h3 id="3-2-2、外设中断调用流程"><a href="#3-2-2、外设中断调用流程" class="headerlink" title="3.2.2、外设中断调用流程"></a>3.2.2、外设中断调用流程</h3><p>本实验只开启了ADC的全局中断，ADC全局中断调用流程请阅读“<a href="https://www.cnblogs.com/lc-guo/p/17958496">STM32CubeMX教程13 ADC - 单通道转换</a>”4.2.2小节</p><h3 id="3-2-3、添加其他必要代码"><a href="#3-2-3、添加其他必要代码" class="headerlink" title="3.2.3、添加其他必要代码"></a>3.2.3、添加其他必要代码</h3><p><font color="#fe2c24"><strong>在adc.c中重新实现ADC采集完毕中断回调函数HAL_ADC_ConvCpltCallback()</strong></font>，与”<a href="https://www.cnblogs.com/lc-guo/p/17958496">STM32CubeMX教程13 ADC - 单通道转换</a>”实验内容一致，目的就是获取ADC1_IN5通道采集值并通过USART1输出，具体代码如下所示</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-type">void</span> <span class="hljs-title function_">HAL_ADC_ConvCpltCallback</span><span class="hljs-params">(ADC_HandleTypeDef *hadc)</span><br>&#123;<br>    <span class="hljs-keyword">if</span>(hadc-&gt;Instance == ADC1)<br>    &#123;<br>        <span class="hljs-type">uint32_t</span> val=HAL_ADC_GetValue(&amp;hadc1);<br>        <span class="hljs-type">uint32_t</span> Volt=(<span class="hljs-number">3300</span>*val)&gt;&gt;<span class="hljs-number">12</span>;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;val:%d, Volt:%d\r\n&quot;</span>,val,Volt);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>在主函数中启动DAC输出，并设置默认的DAC输出值，然后启动定时器和ADC采集，并在主循环中实现按下按键KEY2将DAC输出值增加500，按下按键KEY0将DAC输出值减少500，具体代码如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/16.19.png" width=700></div><p>源代码如下所示</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">/*主循环外代码*/</span><br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Reset\r\n&quot;</span>);<br>HAL_DAC_Start(&amp;hdac,DAC_CHANNEL_1);<br><span class="hljs-type">uint32_t</span> DacValue=<span class="hljs-number">1000</span>;<br>HAL_DAC_SetValue(&amp;hdac,DAC_CHANNEL_1,DAC_ALIGN_12B_R,DacValue);<br>HAL_ADC_Start_IT(&amp;hadc1);<br>HAL_TIM_Base_Start(&amp;htim3);<br><br><br><span class="hljs-comment">/*主循环中代码*/</span><br><span class="hljs-comment">/*按键KEY2被按下*/</span><br><span class="hljs-keyword">if</span>(HAL_GPIO_ReadPin(KEY2_GPIO_Port,KEY2_Pin) == GPIO_PIN_RESET)<br>&#123;<br>    HAL_Delay(<span class="hljs-number">50</span>);<br>    <span class="hljs-keyword">if</span>(HAL_GPIO_ReadPin(KEY2_GPIO_Port,KEY2_Pin) == GPIO_PIN_RESET)<br>    &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;---now DacValue is: %d---\r\n&quot;</span>, DacValue);<br>        DacValue += <span class="hljs-number">500</span>;<br>        <span class="hljs-keyword">if</span>(DacValue&gt;<span class="hljs-number">4095</span>) DacValue=<span class="hljs-number">4095</span>;<br>        HAL_DAC_SetValue(&amp;hdac,DAC_CHANNEL_1,DAC_ALIGN_12B_R,DacValue);<br>        <span class="hljs-keyword">while</span>(!HAL_GPIO_ReadPin(KEY2_GPIO_Port,KEY2_Pin));<br>    &#125;<br>&#125;<br><br><br><span class="hljs-comment">/*按键KEY0被按下*/</span><br><span class="hljs-keyword">if</span>(HAL_GPIO_ReadPin(KEY0_GPIO_Port,KEY0_Pin) == GPIO_PIN_RESET)<br>&#123;<br>    HAL_Delay(<span class="hljs-number">50</span>);<br>    <span class="hljs-keyword">if</span>(HAL_GPIO_ReadPin(KEY0_GPIO_Port,KEY0_Pin) == GPIO_PIN_RESET)<br>    &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;---now DacValue is: %d---\r\n&quot;</span>, DacValue);<br>        DacValue -= <span class="hljs-number">500</span>;<br>        HAL_DAC_SetValue(&amp;hdac,DAC_CHANNEL_1,DAC_ALIGN_12B_R,DacValue);<br>        <span class="hljs-keyword">while</span>(!HAL_GPIO_ReadPin(KEY0_GPIO_Port,KEY0_Pin));<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><font color="#fe2c24"><strong>值得提醒的是本实验使用DAC1_IN5（PA5）采集DAC OUT1（PA4）输出值，需要使用跳线帽&#x2F;杜邦线将PA5和PA4两个引脚短接</strong></font></p><h1 id="4、常用函数"><a href="#4、常用函数" class="headerlink" title="4、常用函数"></a>4、常用函数</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">/*DAC软件启动输出函数*/</span><br>HAL_StatusTypeDef <span class="hljs-title function_">HAL_DAC_Start</span><span class="hljs-params">(DAC_HandleTypeDef *hdac, <span class="hljs-type">uint32_t</span> Channel)</span><br><br><span class="hljs-comment">/*DAC软件停止输出函数*/</span><br>HAL_StatusTypeDef <span class="hljs-title function_">HAL_DAC_Stop</span><span class="hljs-params">(DAC_HandleTypeDef *hdac, <span class="hljs-type">uint32_t</span> Channel)</span><br><br><span class="hljs-comment">/*DAC输出值设置*/</span><br>HAL_StatusTypeDef <span class="hljs-title function_">HAL_DAC_SetValue</span><span class="hljs-params">(DAC_HandleTypeDef *hdac, <span class="hljs-type">uint32_t</span> Channel, <span class="hljs-type">uint32_t</span> Alignment, <span class="hljs-type">uint32_t</span> Data)</span><br></code></pre></td></tr></table></figure><h1 id="5、烧录验证"><a href="#5、烧录验证" class="headerlink" title="5、烧录验证"></a>5、烧录验证</h1><p>烧录程序，开发板上电后打开串口助手，可以看到间隔100ms输出一次采集到的DAC OU1输出值，默认输出值为1000，按下KEY2按键后输出值增加500，按下KEY0按键后输出值减少500，可以从串口输出信息看到采集到的值和我们预想的效果一致，如下图所示为整个过程串口输出信息</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/16.20.gif"></div><h1 id="6、注释详解"><a href="#6、注释详解" class="headerlink" title="6、注释详解"></a>6、注释详解</h1><p><em>注释1</em>：图片来源STM32F4xx 中文参考手册</p>]]></content>
    
    
    
    <tags>
      
      <tag>STM32CubeMX</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>STM32CubeMX教程15 ADC - 多重ADC转换</title>
    <link href="/2024/01/26/STM32CubeMX%E6%95%99%E7%A8%8B15-ADC-%E5%A4%9A%E9%87%8DADC%E8%BD%AC%E6%8D%A2/"/>
    <url>/2024/01/26/STM32CubeMX%E6%95%99%E7%A8%8B15-ADC-%E5%A4%9A%E9%87%8DADC%E8%BD%AC%E6%8D%A2/</url>
    
    <content type="html"><![CDATA[<h1 id="1、准备材料"><a href="#1、准备材料" class="headerlink" title="1、准备材料"></a>1、准备材料</h1><p>开发板（<a href="http://47.111.11.73/docs/boards/stm32/zdyz_stm32f407_explorerV3.html">正点原子stm32f407探索者开发板V2.4</a>）</p><p>STM32CubeMX软件（<a href="https://www.st.com/en/development-tools/stm32cubemx.html">Version 6.10.0</a>）</p><p>keil µVision5 IDE（<a href="https://www.keil.com/download/product/">MDK-Arm</a>）</p><p><a href="https://www.st.com/zh/development-tools/stsw-link009.html">ST-LINK&#x2F;V2驱动</a></p><p><a href="https://doc.embedfire.com/stm32_products/must_read/zh/latest/doc/quickstart/DAP/DAP.html">野火DAP仿真器</a></p><p><a href="http://www.openedv.com/docs/tool/ruanjian/ATK-XCOM.html">XCOM V2.6串口助手</a></p><p>3个滑动变阻器</p><h1 id="2、实验目标"><a href="#2、实验目标" class="headerlink" title="2、实验目标"></a>2、实验目标</h1><p>使用STM32CubeMX软件配置STM32F407开发板的<font color="#fe2c24"><strong>ADC实现多重ADC采集</strong></font>，具体为使用ADC1_IN5、ADC2_IN6实现二重ADC采集，使用ADC1_IN5、ADC2_IN6和ADC3_IN5实现三重ADC采集</p><h1 id="3、二重ADC转换"><a href="#3、二重ADC转换" class="headerlink" title="3、二重ADC转换"></a>3、二重ADC转换</h1><h2 id="3-0、前提知识"><a href="#3-0、前提知识" class="headerlink" title="3.0、前提知识"></a>3.0、前提知识</h2><p><font color="#fe2c24"><strong>STM32F407的三个ADC可以组合实现多重ADC采集</strong></font>，当仅仅开启一个ADC时，该ADC只能工作在独立模式；当同时启动ADC1和ADC2，则以ADC1为主器件，ADC2为从器件可以工作在双重ADC采集模式下；当同时启动ADC1&#x2F;2&#x2F;3，则以ADC1为主器件，ADC2&#x2F;3为从器件可以工作在三重ADC采集模式下；</p><p>在多重 ADC 模式下可实现以下6种模式</p><ol><li>二&#x2F;三重注入同时模式 + 规则同时模式</li><li>二&#x2F;三重规则同时模式 + 交替触发模式</li><li>二&#x2F;三重注入同时模式</li><li>二&#x2F;三重规则同时模式</li><li>二&#x2F;三重交替模式</li><li>二&#x2F;三重交替触发模式</li></ol><p><font color="#fe2c24"><strong>本实验我们只介绍二&#x2F;三重规则同时模式</strong></font>，如下图所示为CubeMX配置中可选的所有模式</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/15.1.png"></div><p><font color="#fe2c24"><strong>工作在多重ADC模式下的DMA请求拥有三种DMA模式，这里只介绍DMA access mode 1&#x2F;2，不会涉及DMA access mode 3</strong></font></p><p>二重规则同时模式ADC采集时只能选择DMA access mode 2，三重规则同时模式ADC采集时只能选择DMA access mode 1</p><p><font color="#fe2c24"><strong>下面请读者重点理解采集完成的数据是如何通过DMA存入用户定义好的数组中的！</strong></font></p><p><font color="#fe2c24"><strong>当ADC工作在二重规则同时模式下</strong></font>，此时DMA模式为DMA access mode 2，在ADC1或ADC2转换事件结束时，会生成一个32位DMA传输请求，此请求会将存储在 ADC_CDR 32 位寄存器高位半字中的 ADC2 转换数据传输到SRAM，然后将存储在ADC_CCR低位半字中的ADC1转换数据传输到 SRAM，<font color="#fe2c24"><strong>也就是说我们只需定义一个包含一个元素的uint32_t DataBuffer[1]数组，以DMA方式启动ADC转换后，只需每次从高16位读取ADC2采集的数据，从低16位读取ADC1采集的数据即可</strong></font></p><p><font color="#fe2c24"><strong>当ADC工作在三重规则同时模式下</strong></font>，此时DMA模式为DMA access mode 1，在ADC1、ADC2或ADC3转换事件结束时，会生成三个32位DMA传输请求，之后会发生三次从 ADC_CDR 32 位寄存器到SRAM的传输：首先传输 ADC1 转换数据，然后是 ADC2 转换数据，最后是 ADC3 转换数据，<font color="#fe2c24"><strong>也就是说我们需定义一个包含三个元素的uint32_t DataBuffer[3]数组，其中第一个元素DataBuffer[0]表示ADC1采集的数据，第二个元素DataBuffer[1]表示ADC2采集的数据，第三个元素DataBuffer[2]表示ADC3采集的数据</strong></font></p><p>上述描述如下图所示 <em>（注释1）</em></p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/15.2.png" width=700></div><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/15.3.png" width=700></div><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/15.4.png" width=700></div><p>如下图所示为多重ADC框图，当工作在二重ADC时不存在ADC3，ADC1&#x2F;2&#x2F;3三个ADC只有ADC1为主ADC，<font color="#fe2c24"><strong>当以多重ADC工作时，只需要配置主ADC的DMA传输，从ADC无需设置，在启动多重ADC采集时也只能以DMA方式启动主ADC，从ADC以普通方式启动即可</strong></font>，不能将从ADC也以DMA方式启动，多重ADC采集的数据均会存入32位的通用规则数据寄存器中</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/15.5.png" width=700></div><h2 id="3-1、CubeMX相关配置"><a href="#3-1、CubeMX相关配置" class="headerlink" title="3.1、CubeMX相关配置"></a>3.1、CubeMX相关配置</h2><h3 id="3-1-0、工程基本配置"><a href="#3-1-0、工程基本配置" class="headerlink" title="3.1.0、工程基本配置"></a>3.1.0、工程基本配置</h3><p>打开STM32CubeMX软件，单击ACCESS TO MCU SELECTOR选择开发板MCU（选择你使用开发板的主控MCU型号），选中MCU型号后单击页面右上角Start Project开始工程，具体如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/15.6.png" width=700></div><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/15.7.png" width=700></div><p>开始工程之后在配置主页面System Core&#x2F;RCC中配置HSE&#x2F;LSE晶振，在System Core&#x2F;SYS中配置Debug模式，具体如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/15.8.png" width=700></div><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/15.9.png" width=700></div><p>详细工程建立内容读者可以阅读“<a href="https://www.cnblogs.com/lc-guo/p/17937268">STM32CubeMX教程1 工程建立</a>”</p><h3 id="3-1-1、时钟树配置"><a href="#3-1-1、时钟树配置" class="headerlink" title="3.1.1、时钟树配置"></a>3.1.1、时钟树配置</h3><p>系统时钟使用8MHz外部高速时钟HSE，HCLK、PCLK1和PCLK2均设置为STM32F407能达到的最高时钟频率，具体如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/15.10.png" width=700></div><h3 id="3-1-2、外设参数配置"><a href="#3-1-2、外设参数配置" class="headerlink" title="3.1.2、外设参数配置"></a>3.1.2、外设参数配置</h3><p>本实验需要需要初始化USART1作为输出信息渠道，具体配置步骤请阅读“<a href="https://www.cnblogs.com/lc-guo/p/17950348">STM32CubeMX教程9 USART&#x2F;UART 异步通信</a>”</p><p>设置TIM3通用定时器溢出时间100ms，外部触发事件选择更新事件，参数详解请阅读“<a href="https://www.cnblogs.com/lc-guo/p/17945268">STM32CubeMX教程6 TIM 通用定时器 - 生成PWM波</a>”实验，具体配置如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/15.11.png" width=700></div><p>在Pinout ＆ Configuration页面左边功能分类栏目<font color="#fe2c24"><strong>Analog中单击其中ADC1，勾选IN5通道</strong></font></p><p><font color="#be191c" style="background: #fef2f0"> Mode </font>（ADC模式）：修改为Dual regular simultaneous mode only（需要启用ADC2通道才可以选择二重ADC采集模式）</p><p><font color="#be191c" style="background: #fef2f0"> DMA Access Mode </font>（DMA模式）：选择DMA access mode 2</p><p><font color="#be191c" style="background: #fef2f0"> DMA Continuous Requests </font>（DMA连续转化请求）：使能（需要先增加DMA请求才可以使能）</p><p>其他参数与“<a href="https://www.cnblogs.com/lc-guo/p/17958496">STM32CubeMX教程13 ADC - 单通道转换</a>”实验均保持一致，具体配置如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/15.12.png" width=700></div><p>单击Configuration中的DMA Settings选项卡对ADC1的DMA请求进行设置，所有配置均与“<a href="https://www.cnblogs.com/lc-guo/p/17962970">STM32CubeMX教程14 ADC - 多通道DMA转换</a>”实验保持一致，具体配置如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/15.13.png" width=700></div><p>在Pinout ＆ Configuration页面左边功能分类栏目<font color="#fe2c24"><strong>Analog中单击其中ADC2，勾选IN6通道</strong></font>，注意除<font color="#be191c" style="background: #fef2f0"> Rank </font>和<font color="#be191c" style="background: #fef2f0"> DMA Continuous Requests  </font>参数外所有参数配置必须与ADC1保持一致，否则ADC采集将出现错误，具体配置如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/15.14.png" width=700></div><h3 id="3-1-3、外设中断配置"><a href="#3-1-3、外设中断配置" class="headerlink" title="3.1.3、外设中断配置"></a>3.1.3、外设中断配置</h3><p>在Pinout &amp; Configuration页面左边System Core&#x2F;NVIC中<font color="#fe2c24"><strong>勾选DMA2 Stream0 全局中断</strong></font>，然后选择合适的中断优先级即可，具体配置如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/15.15.png" width=700></div><h2 id="3-2、生成代码"><a href="#3-2、生成代码" class="headerlink" title="3.2、生成代码"></a>3.2、生成代码</h2><h3 id="3-2-0、配置Project-Manager页面"><a href="#3-2-0、配置Project-Manager页面" class="headerlink" title="3.2.0、配置Project Manager页面"></a>3.2.0、配置Project Manager页面</h3><p>单击进入Project Manager页面，在左边Project分栏中修改工程名称、工程目录和工具链，然后在Code Generator中勾选“Gnerate peripheral initialization as a pair of ‘c&#x2F;h’ files per peripheral”，最后单击页面右上角GENERATE CODE生成工程，具体如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/15.16.png" width=700></div><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/15.17.png" width=700></div><p>详细Project Manager配置内容读者可以阅读“<a href="https://www.cnblogs.com/lc-guo/p/17937268">STM32CubeMX教程1 工程建立</a>”实验3.4.3小节</p><h3 id="3-2-1、外设初始化调用流程"><a href="#3-2-1、外设初始化调用流程" class="headerlink" title="3.2.1、外设初始化调用流程"></a>3.2.1、外设初始化调用流程</h3><p>请阅读“<a href="https://www.cnblogs.com/lc-guo/p/17962970">STM32CubeMX教程14 ADC - 多通道DMA转换</a>”实验“3.2.1、外设初始化调用流程”小节</p><h3 id="3-2-2、外设中断调用流程"><a href="#3-2-2、外设中断调用流程" class="headerlink" title="3.2.2、外设中断调用流程"></a>3.2.2、外设中断调用流程</h3><p>请阅读“<a href="https://www.cnblogs.com/lc-guo/p/17962970">STM32CubeMX教程14 ADC - 多通道DMA转换</a>”实验“3.2.2、外设中断调用流程”小节</p><h3 id="3-2-3、添加其他必要代码"><a href="#3-2-3、添加其他必要代码" class="headerlink" title="3.2.3、添加其他必要代码"></a>3.2.3、添加其他必要代码</h3><p><font color="#fe2c24"><strong>在adc.c中重新实现ADC转换完成回调函数HAL_ADC_ConvCpltCallback()</strong></font>，具体代码如下所示</p><p>源代码如下</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-type">void</span> <span class="hljs-title function_">HAL_ADC_ConvCpltCallback</span><span class="hljs-params">(ADC_HandleTypeDef *hadc)</span><br>&#123;<br>    <span class="hljs-comment">/*定时器中断启动DMA二重ADC转换*/</span><br>    <span class="hljs-type">uint32_t</span> Volt1,Volt2;<br>    <span class="hljs-type">uint32_t</span> adcValue=DataBuffer[<span class="hljs-number">0</span>];<br><br>    <span class="hljs-comment">/*从低16位取出ADC1采集数据*/</span><br>    <span class="hljs-type">uint32_t</span> ADC1_val=adcValue &amp; <span class="hljs-number">0x0000FFFF</span>;<br>    Volt1=<span class="hljs-number">3300</span>*ADC1_val;<br>    Volt1=Volt1&gt;&gt;<span class="hljs-number">12</span>;<br>    <br>    <span class="hljs-comment">/*从高16位取出ADC2采集数据*/</span><br>    <span class="hljs-type">uint32_t</span> ADC2_val=adcValue &amp; <span class="hljs-number">0xFFFF0000</span>;<br>    ADC2_val= ADC2_val&gt;&gt;<span class="hljs-number">16</span>;<br>    Volt2=<span class="hljs-number">3300</span>*ADC2_val;<br>    Volt2=Volt2&gt;&gt;<span class="hljs-number">12</span>;<br>    <br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Volt1:%d, Volt2:%d\r\n&quot;</span>,Volt1,Volt2);<br>&#125;<br></code></pre></td></tr></table></figure><p>在主函数main中启动二重ADC转化，一些全局变量定义及启动源代码如下</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">/*main.c全局变量定义*/</span><br><span class="hljs-type">uint32_t</span> DataBuffer[BATCH_DATA_LEN];<br><br><span class="hljs-comment">/*main.h变量声明*/</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> BATCH_DATA_LEN 1</span><br><span class="hljs-keyword">extern</span> <span class="hljs-type">uint32_t</span> DataBuffer[BATCH_DATA_LEN];<br><br><span class="hljs-comment">/*ADC启动代码*/</span><br>HAL_ADC_Start(&amp;hadc2);<br>HAL_ADCEx_MultiModeStart_DMA(&amp;hadc1,DataBuffer,BATCH_DATA_LEN);<br>HAL_TIM_Base_Start(&amp;htim3);<br></code></pre></td></tr></table></figure><p><font color="#fe2c24"><strong>为什么二重ADC转化下DMA要将数据传输到uint32 DataBuffer[1]？</strong></font></p><p>二重ADC转化下DMA模式为DMA access mode 2，在该模式下ADC1转换完成的数据会传输到32位的 DataBuffer[0] 的低16位，而ADC2转换完成的数据会传输到32位的 DataBuffer[0] 的高16位</p><h1 id="4、常用函数"><a href="#4、常用函数" class="headerlink" title="4、常用函数"></a>4、常用函数</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">/*多重ADC以DMA方式启动*/</span><br>HAL_StatusTypeDef <span class="hljs-title function_">HAL_ADCEx_MultiModeStart_DMA</span><span class="hljs-params">(ADC_HandleTypeDef *hadc, <span class="hljs-type">uint32_t</span> *pData, <span class="hljs-type">uint32_t</span> Length)</span><br></code></pre></td></tr></table></figure><h1 id="5、烧录验证"><a href="#5、烧录验证" class="headerlink" title="5、烧录验证"></a>5、烧录验证</h1><p>烧录程序，单片机上电之后，串口不断的输出ADC1_IN5、ADC2_IN6的采集值转化为的电压值，笔者将两个滑动变阻器按照ADC1_IN5、ADC2_IN6的顺序，分别从一端缓慢拧到另一端，可以从串口输出的数据看到，三个通道采集到的电压值从最小值0慢慢变到最大3300</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/15.18.gif" ></div><h1 id="6、三重ADC转换"><a href="#6、三重ADC转换" class="headerlink" title="6、三重ADC转换"></a>6、三重ADC转换</h1><h2 id="6-1、CubeMX相关配置"><a href="#6-1、CubeMX相关配置" class="headerlink" title="6.1、CubeMX相关配置"></a>6.1、CubeMX相关配置</h2><p>在Pinout ＆ Configuration页面左边功能分类栏目<font color="#fe2c24"><strong>Analog中单击其中ADC3，勾选IN5通道，所有参数与二重ADC转换ADC2参数一致</strong></font>，在配置ADC1为三重ADC规则通道采集时ADC3的触发源参数会消失，因此无需理会，具体ADC3参数配置如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/15.19.png" width=700></div><p>在Pinout ＆ Configuration页面左边功能分类栏目<font color="#fe2c24"><strong>Analog中单击其中ADC1，将其模式修改为Triple regular simultaneous mode only，DMA模式修改为DMA access mode 1</strong></font></p><p>ADC1的其他参数与二重ADC转换时的参数一致，ADC2的配置、ADC1 DMA的配置和NVIC的设置均与二重ADC采集一致，具体ADC1参数配置如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/15.20.png" width=700></div><h2 id="6-2、添加其他必要代码"><a href="#6-2、添加其他必要代码" class="headerlink" title="6.2、添加其他必要代码"></a>6.2、添加其他必要代码</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">/*main.c全局变量定义*/</span><br><span class="hljs-type">uint32_t</span> DataBuffer[BATCH_DATA_LEN];<br><br><span class="hljs-comment">/*main.h变量声明*/</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> BATCH_DATA_LEN 3</span><br><span class="hljs-keyword">extern</span> <span class="hljs-type">uint32_t</span> DataBuffer[BATCH_DATA_LEN];<br><br><span class="hljs-comment">/*主函数中ADC启动代码*/</span><br>HAL_ADC_Start(&amp;hadc2);<br>HAL_ADC_Start(&amp;hadc3);<br>HAL_ADCEx_MultiModeStart_DMA(&amp;hadc1,DataBuffer,BATCH_DATA_LEN);<br>HAL_TIM_Base_Start(&amp;htim3);<br><br><span class="hljs-comment">/*adc.c中重新实现转换完成中断回调*/</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">HAL_ADC_ConvCpltCallback</span><span class="hljs-params">(ADC_HandleTypeDef *hadc)</span><br>&#123;<br>    <span class="hljs-comment">/*定时器中断启动DMA三重ADC转换*/</span><br>    <span class="hljs-type">uint32_t</span> val=<span class="hljs-number">0</span>,Volt=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">uint8_t</span> i=<span class="hljs-number">0</span>;i&lt;BATCH_DATA_LEN;i++)<br>    &#123;<br>        val=DataBuffer[i];<br>        Volt=(<span class="hljs-number">3300</span>*val)&gt;&gt;<span class="hljs-number">12</span>;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;ADC%d, val:%d, Volt:%d\r\n&quot;</span>,i,val,Volt);<br>    &#125;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\r\n&quot;</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p><font color="#fe2c24"><strong>为什么三重ADC转化下DMA要将数据传输到uint32 DataBuffer[3]？</strong></font></p><p>二重ADC转化下DMA模式为DMA access mode 1，在该模式下ADC1转换完成的数据会传输到32位的 DataBuffer[0]，ADC2转换完成的数据会传输到32位的 DataBuffer[1]，ADC3转换完成的数据会传输到32位的 DataBuffer[2]</p><h2 id="6-3、实验现象"><a href="#6-3、实验现象" class="headerlink" title="6.3、实验现象"></a>6.3、实验现象</h2><p>烧录程序，单片机上电之后，串口不断的输出ADC1_IN5、ADC2_IN6和ADC3_IN5的采集值，笔者将三个滑动变阻器按照ADC1_IN5、ADC2_IN6和ADC3_IN5的顺序，分别从一端缓慢拧到另一端，可以从串口输出的数据看到，三个通道采集到的ADC数据从最小值0慢慢变到最大4095</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/15.21.gif" ></div><h1 id="7、注释详解"><a href="#7、注释详解" class="headerlink" title="7、注释详解"></a>7、注释详解</h1><p><em>注释1</em>：图片来源STM32F4xx中文参考手册</p><h1 id="8、参考资料"><a href="#8、参考资料" class="headerlink" title="8、参考资料"></a>8、参考资料</h1><p>主要参考<a href="https://www.epubit.com/bookDetails?id=UB77e58e05a5ea9">STM32Cube高效开发教程（基础篇）</a>320页14.6小节实验</p><p>笔者认为该章节提到一个BUG其实是错误的，从ADC不应该以DMA方式启动，也无需在STM32CubeMX生成的工程代码中手动修改DMAContinuousRequests为ENABLE</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/15.22.png" width=700></div><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/15.23.png" width=700></div>]]></content>
    
    
    
    <tags>
      
      <tag>STM32CubeMX</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>STM32CubeMX教程14 ADC - 多通道DMA转换</title>
    <link href="/2024/01/26/STM32CubeMX%E6%95%99%E7%A8%8B14-ADC-%E5%A4%9A%E9%80%9A%E9%81%93DMA%E8%BD%AC%E6%8D%A2/"/>
    <url>/2024/01/26/STM32CubeMX%E6%95%99%E7%A8%8B14-ADC-%E5%A4%9A%E9%80%9A%E9%81%93DMA%E8%BD%AC%E6%8D%A2/</url>
    
    <content type="html"><![CDATA[<h1 id="1、准备材料"><a href="#1、准备材料" class="headerlink" title="1、准备材料"></a>1、准备材料</h1><p>开发板（<a href="http://47.111.11.73/docs/boards/stm32/zdyz_stm32f407_explorerV3.html">正点原子stm32f407探索者开发板V2.4</a>）</p><p>STM32CubeMX软件（<a href="https://www.st.com/en/development-tools/stm32cubemx.html">Version 6.10.0</a>）</p><p>keil µVision5 IDE（<a href="https://www.keil.com/download/product/">MDK-Arm</a>）</p><p><a href="https://www.st.com/zh/development-tools/stsw-link009.html">ST-LINK&#x2F;V2驱动</a></p><p><a href="https://doc.embedfire.com/stm32_products/must_read/zh/latest/doc/quickstart/DAP/DAP.html">野火DAP仿真器</a></p><p><a href="http://www.openedv.com/docs/tool/ruanjian/ATK-XCOM.html">XCOM V2.6串口助手</a></p><p>3个滑动变阻器</p><h1 id="2、实验目标"><a href="#2、实验目标" class="headerlink" title="2、实验目标"></a>2、实验目标</h1><p>使用STM32CubeMX软件配置STM32F407开发板的<font color="#fe2c24"><strong>ADC实现ADC多通道DMA采集</strong></font>，具体为使用ADC_IN5&#x2F;6&#x2F;7三个通道进行DMA连续ADC转换</p><h1 id="3、实验流程"><a href="#3、实验流程" class="headerlink" title="3、实验流程"></a>3、实验流程</h1><h2 id="3-0、前提知识"><a href="#3-0、前提知识" class="headerlink" title="3.0、前提知识"></a>3.0、前提知识</h2><p>“<a href="https://www.cnblogs.com/lc-guo/p/17958496">STM32CubeMX教程13 ADC - 单通道转换</a>”实验中提到过，规则通道只有一个16位的数据寄存器，<font color="#fe2c24"><strong>因此规则通道同时只能转换一个ADC通道</strong></font>，而且每次转化完一个ADC通道就需要及时从数据寄存器中取出转化的数据，否则会被后面转化完毕的通道数据覆盖</p><p>这个时间非常短，<font color="#fe2c24"><strong>一般不采用像单通道转化中使用中断提取处理每个单通道数据的方法，而是采用DMA连续转化的方法</strong></font>，将多通道转化完毕之后，在DMA的数据存储中将采集到的所有通道的数据一起处理 </p><p>ADC是利用片上的模数转换器将外部的模拟量转化为数字量存储到内存中，<font color="#fe2c24"><strong>数据传输方向应该只有从外设到内存这一种方向</strong></font>，因此可知ADC的DMA方向也只有外设到内存一种</p><p>从“<a href="https://www.cnblogs.com/lc-guo/p/17957875">STM32CubeMX教程12 DMA 直接内存读取</a>”实验中<font color="#fe2c24"><strong>可知ADC1的DMA通道有DMA2_Stream0 CH0 和 DMA2_Stream4 CH0 两个通道</strong></font></p><p><font color="#fe2c24"><strong>ADC的DMA请求模式一般选择循环模式</strong></font>，在多通道ADC采集时，配合使能扫描转化模式，这样就可以连续转化多通道而不停止</p><p>由于ADC采集后的数据一般需要存储在内存中，<font color="#fe2c24"><strong>因此在选择地址递增时，ADC外设地址不增加，内存地址选择递增</strong></font></p><p>使用HAL_ADC_Start_DMA()以DMA方式启动ADC采集时需要指定存储的内存首地址，从函数的定义可知其为uint32_t*类型，<font color="#fe2c24"><strong>因此在DMA配置时我们需要选择的数据宽度为字Word</strong></font></p><h2 id="3-1、CubeMX相关配置"><a href="#3-1、CubeMX相关配置" class="headerlink" title="3.1、CubeMX相关配置"></a>3.1、CubeMX相关配置</h2><h3 id="3-1-0、工程基本配置"><a href="#3-1-0、工程基本配置" class="headerlink" title="3.1.0、工程基本配置"></a>3.1.0、工程基本配置</h3><p>打开STM32CubeMX软件，单击ACCESS TO MCU SELECTOR选择开发板MCU（选择你使用开发板的主控MCU型号），选中MCU型号后单击页面右上角Start Project开始工程，具体如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/14.1.png" width = "700"></div><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/14.2.png" width = "700"></div><p>开始工程之后在配置主页面System Core&#x2F;RCC中配置HSE&#x2F;LSE晶振，在System Core&#x2F;SYS中配置Debug模式，具体如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/14.3.png" width = "700"></div><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/14.4.png" width = "700"></div><p>详细工程建立内容读者可以阅读“<a href="https://www.cnblogs.com/lc-guo/p/17937268">STM32CubeMX教程1 工程建立</a>”</p><h3 id="3-1-1、时钟树配置"><a href="#3-1-1、时钟树配置" class="headerlink" title="3.1.1、时钟树配置"></a>3.1.1、时钟树配置</h3><p>系统时钟使用8MHz外部高速时钟HSE，HCLK、PCLK1和PCLK2均设置为STM32F407能达到的最高时钟频率，具体如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/14.5.png" width = "700"></div><h3 id="3-1-2、外设参数配置"><a href="#3-1-2、外设参数配置" class="headerlink" title="3.1.2、外设参数配置"></a>3.1.2、外设参数配置</h3><p>本实验需要需要初始化USART1作为输出信息渠道，具体配置步骤请阅读“<a href="https://www.cnblogs.com/lc-guo/p/17950348">STM32CubeMX教程9 USART&#x2F;UART 异步通信</a>”</p><p>设置TIM3通用定时器溢出时间100ms，外部触发事件选择更新事件，参数详解请阅读“<a href="https://www.cnblogs.com/lc-guo/p/17945268">STM32CubeMX教程6 TIM 通用定时器 - 生成PWM波</a>”实验，具体配置如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/14.6.png" width = "700"></div><p>在Pinout ＆ Configuration页面左边功能分类栏目<font color="#fe2c24"><strong>Analog中单击其中ADC1，勾选IN5&#x2F;6&#x2F;7三个通道</strong></font>，在下方的参数设置中以ADC - 单通道转换实验为模板修改部分参数</p><p><font color="#be191c" style="background: #fef2f0"> Scan Conversion Mode </font>：<font color="#fe2c24"><strong>使能扫描转换模式</strong></font>，因此现在需要转换5&#x2F;6&#x2F;7三个通道，因此使能该模式之后，在规则通道转换为其中一个通道后就会接收转换下一个通道</p><p><font color="#be191c" style="background: #fef2f0"> DMA Continuous Requests  </font>：<font color="#fe2c24"><strong>使能DMA连续转换请求</strong></font>，该参数的使能需要在配置完DMA请求之后才可选，配合参数<font color="#be191c" style="background: #fef2f0"> Scan Conversion Mode </font>可以实现连续不间断的对三个通道数据进行采集</p><p><font color="#be191c" style="background: #fef2f0"> End Of Conversion Selection </font>：<font color="#fe2c24"><strong>选择EOC flag at the end of all conversions</strong></font>，该参数表示当转换完毕一组ADC中的所有通道之后再产生EOC标志，进入中断</p><p><font color="#be191c" style="background: #fef2f0"> Number Of Conversion </font>：<font color="#fe2c24"><strong>规则通道转换数量现在为3</strong></font>，对应三个不同的通道，通道转换顺序及每个通道的采样时间由Rank及其下参数决定</p><p>具体参数配置如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/14.7.png" width = "700"></div><p>单击Configuration中的DMA Settings选项卡对ADC1的DMA请求进行设置，单击ADD按键增加DMA请求，这里可选的只有一个ADC1</p><p>选择想要使用的DMA Stream，并设置优先级，将DMA请求模式设置为循环模式，外设地址不增加，内存地址递增，数据宽度选择字Word</p><p><font color="#fe2c24"><strong>为何如此配置?</strong></font></p><p>请阅读本实验“3.0、前提知识”</p><p>如下图所示为ADC1的DMA请求具体设置</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/14.8.png" width = "700"></div><h3 id="3-1-3、外设中断配置"><a href="#3-1-3、外设中断配置" class="headerlink" title="3.1.3、外设中断配置"></a>3.1.3、外设中断配置</h3><p>在Pinout &amp; Configuration页面左边System Core&#x2F;NVIC中<font color="#fe2c24"><strong>勾选DMA2 Stream0 全局中断</strong></font>，然后选择合适的中断优先级即可</p><p>注意这里没有勾选ADC1&#x2F;2&#x2F;3的全局中断，因为外设DMA中断使用的回调函数和外设本身中断的回调函数一般是同一个回调函数（为什么？请阅读本实验3.2.2小节），<font color="#fe2c24"><strong>如果同时开始两者中断可能会导致重复进入中断函数</strong></font></p><p>但是有些外设使用DMA时必须开启自身的中断，不同外设情况不一样</p><p><font color="#fe2c24"><strong>建议在外设使用DMA时，尽量不开启外设全局中断，必须开启的可以禁用外设主要事件源产生的硬件中断</strong></font> <em>（注释1）</em></p><p>上述步骤如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/14.9.png" width = "700"></div><h2 id="3-2、生成代码"><a href="#3-2、生成代码" class="headerlink" title="3.2、生成代码"></a>3.2、生成代码</h2><h3 id="3-2-0、配置Project-Manager页面"><a href="#3-2-0、配置Project-Manager页面" class="headerlink" title="3.2.0、配置Project Manager页面"></a>3.2.0、配置Project Manager页面</h3><p>单击进入Project Manager页面，在左边Project分栏中修改工程名称、工程目录和工具链，然后在Code Generator中勾选“Gnerate peripheral initialization as a pair of ‘c&#x2F;h’ files per peripheral”，最后单击页面右上角GENERATE CODE生成工程，具体如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/14.10.png" width = "700"></div><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/14.11.png" width = "700"></div><p>详细Project Manager配置内容读者可以阅读“<a href="https://www.cnblogs.com/lc-guo/p/17937268">STM32CubeMX教程1 工程建立</a>”实验3.4.3小节</p><h3 id="3-2-1、外设初始化调用流程"><a href="#3-2-1、外设初始化调用流程" class="headerlink" title="3.2.1、外设初始化调用流程"></a>3.2.1、外设初始化调用流程</h3><p>首先在生成的工程主函数main()中调用MX_DMA_Init()函数对ADC1用到的DMA时钟及其流的中断进行了配置</p><p>然后调用MX_ADC1_Init()函数对ADC1的基本参数、通道和通道参数进行了配置，并调用了HAL_ADC_Init()使用配置的参数初始化了ADC1</p><p>在初始化函数HAL_ADC_Init()中又调用了HAL_ADC_MspInit()函数，在该函数中使能了ADC1&#x2F;GPIOA的时钟，对ADC1_IN5&#x2F;6&#x2F;7的输入引脚做了复用设置，然后对ADC1的DMA参数配置并进行了初始化，最后调用了__HAL_LINKDMA(adcHandle,DMA_Handle,hdma_adc1)将adc1外设与DMA流对象关联</p><p>具体的ADC DMA初始化调用流程如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/14.12.png" width = "700"></div><h3 id="3-2-2、外设中断调用流程"><a href="#3-2-2、外设中断调用流程" class="headerlink" title="3.2.2、外设中断调用流程"></a>3.2.2、外设中断调用流程</h3><p>CubeMX中勾选DMA2_Stream0的全局中断后，会在stm32f4xx_it.c中增加DMA的中断服务函数DMA2_Stream0_IRQHandler()</p><p>在中断服务函数DMA2_Stream0_IRQHandler()中调用了HAL库的DMA全局中断处理函数，该函数中根据各种标志判断DMA传输完成&#x2F;失败&#x2F;一半完成等事件，然后根据不同的事件调用不同的回调函数，这里DMA传输完成之后调用了hdma-&gt;-&gt;XferCpltCal1back()</p><p>上述过程如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/14.13.png" width = "700"></div><p>这个函数指针在以DMA方式启动ADC采集时被指向DMA传输完成回调ADC_DMAConvCplt()函数</p><p>在该DMA传输完成回调ADC_DMAConvCplt()函数中<font color="#fe2c24"><strong>最终调用了ADC采集完成回调HAL_ADC_ConvCpltCallback()函数</strong></font>，该函数上一个实验我们重新实现过</p><p>上述过程如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/14.14.png" width = "700"></div><p>之前所有的外设回调函数都是直接调用了HAL库提前准备好的虚函数，比如ADC的采集完成回调函数HAL_ADC_ConvCpltCallback()，用户直接实现该虚函数即可</p><p><font color="#fe2c24"><strong>但是DMA不是一个外设，而是数据传输手段，大多数外设都可以使用，因此DMA的各种事件回调函数不是一个真正的函数，而是一个函数指针</strong></font></p><p>当我们以DMA传输的方式启动某个外设的时候，就会将该外设对应事件的中断服务函数地址赋值给对应事件DMA中断回调函数指针</p><h3 id="3-2-3、添加其他必要代码"><a href="#3-2-3、添加其他必要代码" class="headerlink" title="3.2.3、添加其他必要代码"></a>3.2.3、添加其他必要代码</h3><p><font color="#fe2c24"><strong>在主函数中以DMA的方式启动ADC采集传输，然后启动ADC1的触发源TIM3定时器</strong></font>，具体代码如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/14.15.png" ></div><p><font color="#fe2c24"><strong>在adc.c中重新实现DMA传输完成回调函数</strong></font>，在该函数中取出ADC转换完成的三通道采集值，然后处理并通过串口输出，具体代码如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/14.16.png" ></div><p>一些定义及函数源代码如下</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">/*main.c中的全局变量定义*/</span><br><span class="hljs-type">uint32_t</span> DataBuffer[BATCH_DATA_LEN];<br><br><span class="hljs-comment">/*main.h中的变量外扩及宏定义*/</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> BATCH_DATA_LEN 3</span><br><span class="hljs-keyword">extern</span> <span class="hljs-type">uint32_t</span> DataBuffer[BATCH_DATA_LEN];<br><br><span class="hljs-comment">/*DMA转换完成中断回调*/</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">HAL_ADC_ConvCpltCallback</span><span class="hljs-params">(ADC_HandleTypeDef *hadc)</span><br>&#123;<br>    <span class="hljs-comment">/*定时器DMA启动多通道转换*/</span><br>    <span class="hljs-type">uint32_t</span> val=<span class="hljs-number">0</span>,Volt=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">uint8_t</span> i=<span class="hljs-number">0</span>;i&lt;BATCH_DATA_LEN;i++)<br>    &#123;<br>        val=DataBuffer[i];<br>        Volt=(<span class="hljs-number">3300</span>*val)&gt;&gt;<span class="hljs-number">12</span>;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;ADC_IN%d, val:%d, Volt:%d\r\n&quot;</span>,i+<span class="hljs-number">5</span>,val,Volt);<br>    &#125;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\r\n&quot;</span>);<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="4、常用函数"><a href="#4、常用函数" class="headerlink" title="4、常用函数"></a>4、常用函数</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">/*以DMA方式启动ADC采集*/</span><br>HAL_StatusTypeDef <span class="hljs-title function_">HAL_ADC_Start_DMA</span><span class="hljs-params">(ADC_HandleTypeDef *hadc, <span class="hljs-type">uint32_t</span> *pData, <span class="hljs-type">uint32_t</span> Length)</span><br><br><span class="hljs-comment">/*结束以DMA方式启动的ADC采集*/</span><br>HAL_StatusTypeDef <span class="hljs-title function_">HAL_ADC_Stop_DMA</span><span class="hljs-params">(ADC_HandleTypeDef *hadc)</span><br></code></pre></td></tr></table></figure><h1 id="5、烧录验证"><a href="#5、烧录验证" class="headerlink" title="5、烧录验证"></a>5、烧录验证</h1><p>烧录程序，单片机上电之后，串口不断的输出三个通道的ADC采集值，笔者将三个滑动变阻器按照通道5、通道6和通道7的顺序，分别从一端缓慢拧到另一端，串口数据如下图所示，通道5&#x2F;6&#x2F;7三个通道采集到的ADC数据从最大4095慢慢变到最小值0</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/14.17.gif"></div><h1 id="6、注释详解"><a href="#6、注释详解" class="headerlink" title="6、注释详解"></a>6、注释详解</h1><p><em>注释1</em>：详细内容请阅读<a href="https://www.epubit.com/bookDetails?id=UB77e58e05a5ea9">STM32Cube高效开发教程（基础篇）</a>14.5.1小节内容</p>]]></content>
    
    
    
    <tags>
      
      <tag>STM32CubeMX</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>STM32CubeMX教程13 ADC - 单通道转换</title>
    <link href="/2024/01/26/STM32CubeMX%E6%95%99%E7%A8%8B13-ADC-%E5%8D%95%E9%80%9A%E9%81%93%E8%BD%AC%E6%8D%A2/"/>
    <url>/2024/01/26/STM32CubeMX%E6%95%99%E7%A8%8B13-ADC-%E5%8D%95%E9%80%9A%E9%81%93%E8%BD%AC%E6%8D%A2/</url>
    
    <content type="html"><![CDATA[<h1 id="1、准备材料"><a href="#1、准备材料" class="headerlink" title="1、准备材料"></a>1、准备材料</h1><p>开发板（<a href="http://47.111.11.73/docs/boards/stm32/zdyz_stm32f407_explorerV3.html">正点原子stm32f407探索者开发板V2.4</a>）</p><p>STM32CubeMX软件（<a href="https://www.st.com/en/development-tools/stm32cubemx.html">Version 6.10.0</a>）</p><p>keil µVision5 IDE（<a href="https://www.keil.com/download/product/">MDK-Arm</a>）</p><p><a href="https://www.st.com/zh/development-tools/stsw-link009.html">ST-LINK&#x2F;V2驱动</a></p><p><a href="https://doc.embedfire.com/stm32_products/must_read/zh/latest/doc/quickstart/DAP/DAP.html">野火DAP仿真器</a></p><p><a href="http://www.openedv.com/docs/tool/ruanjian/ATK-XCOM.html">XCOM V2.6串口助手</a></p><p>1个滑动变阻器</p><h1 id="2、实验目标"><a href="#2、实验目标" class="headerlink" title="2、实验目标"></a>2、实验目标</h1><p>使用STM32CubeMX软件配置STM32F407开发板的<font color="#fe2c24"><strong>ADC实现单通道ADC采集</strong></font>，具体为使用ADC1_IN5通道通过软件&#x2F;定时器触发采集滑动变阻器上的分压</p><h1 id="3、ADC概述"><a href="#3、ADC概述" class="headerlink" title="3、ADC概述"></a>3、ADC概述</h1><p>ADC即模拟数字转换，是将模拟电压量转换为数字量的一种手段，如下图所示为STM32F407单个ADC的结构框图 <em>（注释1）</em>，<font color="#fe2c24"><strong>其主要包括5个部分，分别为 ① ADC电源引脚、② ADC输入引脚、③ ADC触发源、④ ADC转换规则和⑤ ADC中断触发</strong></font>，下面从这五个方面分别介绍STM32F407的ADC</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/13.1.png" width = "700"></div><p>① ADC电源引脚有VDDA、VSSA、VREF+和VREF-四个引脚，STM32的ADC采集范围为VREF- ≤ VIN ≤ VREF+，一般将ADC的负端参考电压与VSSA短接然后接地，将ADC的正端参考电压接VDDA即3.3V，<font color="#fe2c24"><strong>这样ADC的采集范围就设置为0~3.3V，对于12位分辨率的ADC，其采集数字量范围为0-4095，这样就可以将0-3.3V的电压映射到0-4095的数字量</strong></font>，使其可以相互转化，ADC电源即参考电压引脚具体描述如下图所示 <em>（注释1）</em></p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/13.2.png" width = "700"></div><p><font color="#fe2c24"><strong>② STM32F407有三个ADC可供使用，每个ADC又拥有16个通道ADCx_IN[15:0]</strong></font>，其中ADC1还拥有Temperature Sensor Channel、Vrefint Channel和Vbat Channel三个内部通道</p><ol><li><p>Temperature Sensor Channel通道用于测量芯片内部温度，范围为-40℃~125℃，精度为±1.5℃</p></li><li><p>Vrefint Channel用于测量内部参考电压</p></li><li><p>Vbat Channel用于测量备用电源电压的一半</p></li></ol><p>ADC的转换主要依靠12位分辨率的片上模数转换器</p><p><font color="#fe2c24"><strong>③ 注入通道和规则通道均有16个触发源</strong></font>，可以选择定时器外部源触发&#x2F;定时器比较捕获触发&#x2F;软件常规触发，具体参看上图ADC框架中的紫色框框</p><p>④ ADC启动转换时需要按照一定通道顺序转化，该顺序由规则通道和注入通道两者共同决定，<font color="#fe2c24"><strong>其中注入通道其数据寄存器为4*16位，因此可以同时转换四个通道</strong></font></p><p><font color="#fe2c24"><strong>但是规则通道的数据寄存器只有一个16位的寄存器，因此必须一个通道一个通道的转换</strong></font>，每转换完一个通道，就需要及时将转换完成的结果从规则通道数据寄存器中读出去</p><p>其中注入通道类似ADC通道转换过程的中断，如下图所示 <em>（注释2）</em></p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/13.3.png" width = "700"></div><p><font color="#fe2c24"><strong>⑤ ADC的中断事件有DMA溢出、ADC转换结束、注入转换结束和模拟看门狗事件共四个事件</strong></font>，前三个中断和其名字表述类似，当转换结束&#x2F;溢出时就会产生中断，模拟看门狗可以设置ADC转换值的上限和下限，当超出限制之后就会产生中断，可以用于警报，如下表所示 <em>（注释1）</em></p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/13.4.png" width = "700"></div><p><font color="#fe2c24"><strong>ADC有独立模式、二重和三重采集模式</strong></font>，当只有ADC1启动时只能使用独立模式，当ADC1&#x2F;2启动时可以使用二重采集模式，当ADC1&#x2F;2&#x2F;3&#x2F;全部启动时可以使用三重采集模式，<font color="#fe2c24"><strong>本实验只介绍独立模式</strong></font></p><h1 id="4、实验流程"><a href="#4、实验流程" class="headerlink" title="4、实验流程"></a>4、实验流程</h1><h2 id="4-0、前提知识"><a href="#4-0、前提知识" class="headerlink" title="4.0、前提知识"></a>4.0、前提知识</h2><p>本实验为ADC独立模式单通道单次转换模式，主要利用ADC1_IN5通道由软件&#x2F;定时器启动ADC转换，如果是软件手动启动的ADC转换则在单次转换模式下每次转换完成一次之后均需要再次手动启动ADC转换，另外需要注意ADC在开始精确转换之前需要一段稳定时间tSTAB，如下图所示为ADC转化所经过的路径</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/13.5.png" width = "700"></div><h2 id="4-1、CubeMX相关配置"><a href="#4-1、CubeMX相关配置" class="headerlink" title="4.1、CubeMX相关配置"></a>4.1、CubeMX相关配置</h2><h3 id="4-1-0、工程基本配置"><a href="#4-1-0、工程基本配置" class="headerlink" title="4.1.0、工程基本配置"></a>4.1.0、工程基本配置</h3><p>打开STM32CubeMX软件，单击ACCESS TO MCU SELECTOR选择开发板MCU（选择你使用开发板的主控MCU型号），选中MCU型号后单击页面右上角Start Project开始工程，具体如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/13.6.png" width = "700"></div><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/13.7.png" width = "700"></div><p>开始工程之后在配置主页面System Core&#x2F;RCC中配置HSE&#x2F;LSE晶振，在System Core&#x2F;SYS中配置Debug模式，具体如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/13.8.png" width = "700"></div><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/13.9.png" width = "700"></div><p>详细工程建立内容读者可以阅读“<a href="https://www.cnblogs.com/lc-guo/p/17937268">STM32CubeMX教程1 工程建立</a>”</p><h3 id="4-1-1、时钟树配置"><a href="#4-1-1、时钟树配置" class="headerlink" title="4.1.1、时钟树配置"></a>4.1.1、时钟树配置</h3><p>系统时钟使用8MHz外部高速时钟HSE，HCLK、PCLK1和PCLK2均设置为STM32F407能达到的最高时钟频率，具体如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/13.10.png" width = "700"></div><h3 id="4-1-2、外设参数配置"><a href="#4-1-2、外设参数配置" class="headerlink" title="4.1.2、外设参数配置"></a>4.1.2、外设参数配置</h3><p>本实验需要需要初始化USART1作为输出信息渠道，具体配置步骤请阅读“<a href="https://www.cnblogs.com/lc-guo/p/17950348">STM32CubeMX教程9 USART&#x2F;UART 异步通信</a>”</p><p>设置TIM3通用定时器溢出时间100ms，外部触发事件选择更新事件，参数详解请阅读“<a href="https://www.cnblogs.com/lc-guo/p/17945268">STM32CubeMX教程6 TIM 通用定时器 - 生成PWM波</a>”实验，具体配置如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/13.11.png" width = "700"></div><p>在Pinout ＆ Configuration页面左边功能分类栏目Analog中单击其中ADC1，在Mode中勾选需要使用的输入通道，<font color="#fe2c24"><strong>本实验为单通道转换实验，因此任意勾选IN0~IN15之间的任一通道均可，笔者勾选了IN5</strong></font></p><p>在Configuration中对ADC1_IN5的转换参数进行配置，下面介绍一些比较重要的参数</p><p>——————————————- ADCs_Common_Settings ———————————————</p><p> <font color="#be191c" style="background: #fef2f0"> Mode </font>（模式）：只启动一个ADC时只能选择独立模式，当同时启用了ADC1&#x2F;2或ADC1&#x2F;2&#x2F;3时这里会出现多重ADC采集的模式可选</p><p>————————————————– ADC_Settings ————————————————–</p><p><font color="#be191c" style="background: #fef2f0"> Clock Prescaler </font>（时钟分频）：决定ADC转换的频率，分频越少ADC转换的频率越高，最少2分频，一个通道一次ADC转换的总时间为N+12个ADC时钟周期，其中N为设置的采样次数Cycles</p><p><font color="#be191c" style="background: #fef2f0"> Resolution </font>（ADC转换精度）：可以选择12&#x2F;10&#x2F;8&#x2F;6位精度的转换值，精度选择不同需要的转换时钟周期也不同</p><p><font color="#be191c" style="background: #fef2f0"> Data Alignment </font>（数据对齐）：由于规则数据寄存器为16位，但是最高转换精度为12位，因此数据可以选择以右对齐&#x2F;左对齐的方式放入寄存器</p><p><font color="#be191c" style="background: #fef2f0"> Scan Conversion Mode </font>（扫描转换模式）：规则通道同时只能转换一个通道，启用该参数后，当规则通道中有多个通道等待转换时其转换完当前通道会自动转换组内的下一个通道</p><p><font color="#be191c" style="background: #fef2f0"> Continuous Conversion Mode </font>（连续转换模式）：启用该参数，ADC结束一个转换立即开始一个新的转换，与参数 Scan Conversion Mode 共同启用，则组内最后一个通道转换完毕后会立即切换到第一个通道继续转换</p><p><font color="#be191c" style="background: #fef2f0"> DMA Continuous Requests </font>（DMA请求）：需要在DMA Settings中添加DMA请求后，该参数才可以使能</p><p><font color="#be191c" style="background: #fef2f0"> End Of Conversion Selection </font>（结束转换标志）：选择一个通道转换完就产生EOC标志，还是一个组内所有通道全部转换完才产生EOC标志</p><p>—————————————– ADC_Regular_ConversionMode—————————————-</p><p><font color="#be191c" style="background: #fef2f0"> Number Of Conversion </font>（转换通道数量）：常规规则通道希望转换的通道数量，此处为单通道，因此为1</p><p><font color="#be191c" style="background: #fef2f0"> External Trigger Conversion Source </font>（外部触发转换源）：ADC启动转换需要的触发源设置，本实验使用TIM3 100ms更新事件作为ADC的触发源</p><p><font color="#be191c" style="background: #fef2f0"> External Trigger Conversion Edge </font>（外部触发转换边沿）：当TIM3 100ms更新事件触发时会产生一个上升沿，因此这里选择上升沿</p><p><font color="#be191c" style="background: #fef2f0"> Rank </font>（规则通道排序）：对常规规则通道内的所有通道ADC转换排序</p><p>—————————————– ADC_Injected_ConversionMode—————————————-</p><p><font color="#be191c" style="background: #fef2f0"> Number Of Conversion </font>（注入通道转换模式通道数量）：注入通道希望转换的通道数量，这里不启用注入通道，因此为0</p><p>具体参数配置如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/13.12.png" width = "700"></div><h3 id="4-1-3、外设中断配置"><a href="#4-1-3、外设中断配置" class="headerlink" title="4.1.3、外设中断配置"></a>4.1.3、外设中断配置</h3><p>在Pinout &amp; Configuration页面左边System Core&#x2F;NVIC中<font color="#fe2c24"><strong>勾选ADC1&#x2F;2&#x2F;3全局中断</strong></font>，然后选择合适的中断优先级即可，步骤如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/13.13.png" width = "700"></div><h2 id="4-2、生成代码"><a href="#4-2、生成代码" class="headerlink" title="4.2、生成代码"></a>4.2、生成代码</h2><h3 id="4-2-0、配置Project-Manager页面"><a href="#4-2-0、配置Project-Manager页面" class="headerlink" title="4.2.0、配置Project Manager页面"></a>4.2.0、配置Project Manager页面</h3><p>单击进入Project Manager页面，在左边Project分栏中修改工程名称、工程目录和工具链，然后在Code Generator中勾选“Gnerate peripheral initialization as a pair of ‘c&#x2F;h’ files per peripheral”，最后单击页面右上角GENERATE CODE生成工程，具体如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/13.14.png" width = "700"></div><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/13.15.png" width = "700"></div><p>详细Project Manager配置内容读者可以阅读“<a href="https://www.cnblogs.com/lc-guo/p/17937268">STM32CubeMX教程1 工程建立</a>”实验3.4.3小节</p><h3 id="4-2-1、外设初始化调用流程"><a href="#4-2-1、外设初始化调用流程" class="headerlink" title="4.2.1、外设初始化调用流程"></a>4.2.1、外设初始化调用流程</h3><p>在生成的工程代码主函数main()中调用了MX_ADC1_Init()函数完成了对ADC1基本参数的配置，ADC常规规则通道&#x2F;注入通道等参数配置</p><p>然后在ADC初始化函数HAL_ADC_Init()函数中调用了HAL_ADC_MspInit()函数对ADC1时钟和中断进行了使能，对中断优先级进行了配置，对ADC1_IN5输入引脚做了复用操作</p><p>如下图所示为ADC1单通道初始化的具体函数调用流程</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/13.16.png" width = "700"></div><h3 id="4-2-2、外设中断调用流程"><a href="#4-2-2、外设中断调用流程" class="headerlink" title="4.2.2、外设中断调用流程"></a>4.2.2、外设中断调用流程</h3><p>使能ADC1&#x2F;2&#x2F;3全局中断后在stm32f4xx_it.c中自动生成了TIM4的中断处理函数ADC_IRQHandler()</p><p>ADC_IRQHandler()调用了HAL库的ADC中断处理函数HAL_ADC_IRQHandler()，该函数处理所有的ADC中断事件</p><p><font color="#fe2c24"><strong>在ADC转换完成之后最终调用了ADC转换完成中断回调函数HAL_ADC_ConvCpltCallback()，该函数为虚函数</strong></font></p><p>如下图所示为ADC1单通道转换中断回调的具体函数调用流程</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/13.17.png" width = "700"></div><h3 id="4-2-3、添加其他必要代码"><a href="#4-2-3、添加其他必要代码" class="headerlink" title="4.2.3、添加其他必要代码"></a>4.2.3、添加其他必要代码</h3><p><font color="#fe2c24"><strong>在adc.c中重新实现ADC转换完成中断回调函数HAL_ADC_ConvCpltCallback()</strong></font>，在该函数中获取ADC的转换值，然后将其计算为电压值*1000，并将这两个值通过串口输出，具体代码如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/13.18.png"></div><p>源代码如下</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">/*转换完成中断回调*/</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">HAL_ADC_ConvCpltCallback</span><span class="hljs-params">(ADC_HandleTypeDef *hadc)</span><br>&#123;<br>    <span class="hljs-comment">/*定时器中断启动单通道转换*/</span><br>    <span class="hljs-keyword">if</span>(hadc-&gt;Instance == ADC1)<br>    &#123;<br>        <span class="hljs-type">uint32_t</span> val=HAL_ADC_GetValue(&amp;hadc1);<br>        <span class="hljs-type">uint32_t</span> Volt=(<span class="hljs-number">3300</span>*val)&gt;&gt;<span class="hljs-number">12</span>;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;val:%d, Volt:%d\r\n&quot;</span>,val,Volt);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>在主函数中以中断方式启动ADC转换，然后启动ADC的触发源TIM3定时器，具体代码如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/13.19.png" ></div><h1 id="5、常用函数"><a href="#5、常用函数" class="headerlink" title="5、常用函数"></a>5、常用函数</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">/*启动ADC转换*/</span><br>HAL_StatusTypeDef <span class="hljs-title function_">HAL_ADC_Start</span><span class="hljs-params">(ADC_HandleTypeDef *hadc)</span><br> <br><span class="hljs-comment">/*停止ADC转换*/</span><br>HAL_StatusTypeDef <span class="hljs-title function_">HAL_ADC_Stop</span><span class="hljs-params">(ADC_HandleTypeDef *hadc)</span><br> <br><span class="hljs-comment">/*以中断方式启动ADC转换*/</span><br>HAL_StatusTypeDef <span class="hljs-title function_">HAL_ADC_Start_IT</span><span class="hljs-params">(ADC_HandleTypeDef *hadc)</span><br> <br><span class="hljs-comment">/*停止ADC转换*/</span><br>HAL_StatusTypeDef <span class="hljs-title function_">HAL_ADC_Stop_IT</span><span class="hljs-params">(ADC_HandleTypeDef *hadc)</span><br> <br><span class="hljs-comment">/*轮询ADC是否转换完毕*/</span><br>HAL_StatusTypeDef <span class="hljs-title function_">HAL_ADC_PollForConversion</span><span class="hljs-params">(ADC_HandleTypeDef *hadc, <span class="hljs-type">uint32_t</span> Timeout)</span><br> <br><span class="hljs-comment">/*获取ADC转换值*/</span><br><span class="hljs-type">uint32_t</span> <span class="hljs-title function_">HAL_ADC_GetValue</span><span class="hljs-params">(ADC_HandleTypeDef *hadc)</span><br> <br><span class="hljs-comment">/*ADC转换完成中断回调函数*/</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">HAL_ADC_ConvCpltCallback</span><span class="hljs-params">(ADC_HandleTypeDef *hadc)</span><br></code></pre></td></tr></table></figure><h1 id="6、烧录验证"><a href="#6、烧录验证" class="headerlink" title="6、烧录验证"></a>6、烧录验证</h1><p>烧录程序，上电后打开串口，串口会每100ms传来一次ADC采集的数据，旋转滑动变阻器从一端到另一端，可以看到ADC采集到的值从0逐渐变为最大值4095</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/13.20.gif"></div><h1 id="7、软件触发ADC采集"><a href="#7、软件触发ADC采集" class="headerlink" title="7、软件触发ADC采集"></a>7、软件触发ADC采集</h1><p><font color="#fe2c24"><strong>如果你希望不采用定时器触发中断采集的方式，而是想使用软件手动触发轮询采集的方式</strong></font>，需要先将ADC规则转换模式中触发源修改为软件触发，然后按照下述步骤操作</p><ol><li>使用HAL_ADC_Start()启动转换</li><li>使用HAL_ADC_PollForConversion()轮询检测是否转换完成</li><li>转换完成后使用可以HAL_ADC_GetValue()获取转换后的ADC值</li></ol><p>具体参考如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/13.22.png" width = "700"></div><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/13.21.png" ></div><p>源代码如下</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs c">HAL_ADC_Start(&amp;hadc1);<br><span class="hljs-keyword">if</span>(HAL_ADC_PollForConversion(&amp;hadc1,<span class="hljs-number">200</span>)==HAL_OK)<br>&#123;<br>    <span class="hljs-type">uint32_t</span> val=HAL_ADC_GetValue(&amp;hadc1);<br>    <span class="hljs-type">uint32_t</span> Volt=(<span class="hljs-number">3300</span>*val)&gt;&gt;<span class="hljs-number">12</span>;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;val:%d, Volt:%d\r\n&quot;</span>,val,Volt);<br>&#125;<br>HAL_Delay(<span class="hljs-number">500</span>);<br></code></pre></td></tr></table></figure><h1 id="8、注释详解"><a href="#8、注释详解" class="headerlink" title="8、注释详解"></a>8、注释详解</h1><p><em>注释1</em>：图片来自STM32F4xx中文参考手册 RM0090</p><p><em>注释2</em>：图片来自<a href="https://blog.csdn.net/as480133937/article/details/99627062" title="【STM32】HAL库 STM32CubeMX教程九---ADC_cubemx adc-CSDN博客">【STM32】HAL库 STM32CubeMX教程九—ADC_cubemx adc-CSDN博客</a></p><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p><a href="https://www.epubit.com/bookDetails?id=UB77e58e05a5ea9">STM32Cube高效开发教程（基础篇）</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>STM32CubeMX</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>STM32CubeMX教程12 DMA 直接内存读取</title>
    <link href="/2024/01/26/STM32CubeMX%E6%95%99%E7%A8%8B12-DMA-%E7%9B%B4%E6%8E%A5%E5%86%85%E5%AD%98%E8%AF%BB%E5%8F%96/"/>
    <url>/2024/01/26/STM32CubeMX%E6%95%99%E7%A8%8B12-DMA-%E7%9B%B4%E6%8E%A5%E5%86%85%E5%AD%98%E8%AF%BB%E5%8F%96/</url>
    
    <content type="html"><![CDATA[<h1 id="1、准备材料"><a href="#1、准备材料" class="headerlink" title="1、准备材料"></a>1、准备材料</h1><p>开发板（<a href="http://47.111.11.73/docs/boards/stm32/zdyz_stm32f407_explorerV3.html">正点原子stm32f407探索者开发板V2.4</a>）</p><p>STM32CubeMX软件（<a href="https://www.st.com/en/development-tools/stm32cubemx.html">Version 6.10.0</a>）</p><p>keil µVision5 IDE（<a href="https://www.keil.com/download/product/">MDK-Arm</a>）</p><p><a href="https://www.st.com/zh/development-tools/stsw-link009.html">ST-LINK&#x2F;V2驱动</a></p><p><a href="https://doc.embedfire.com/stm32_products/must_read/zh/latest/doc/quickstart/DAP/DAP.html">野火DAP仿真器</a></p><p><a href="http://www.openedv.com/docs/tool/ruanjian/ATK-XCOM.html">XCOM V2.6串口助手</a></p><h1 id="2、实验目标"><a href="#2、实验目标" class="headerlink" title="2、实验目标"></a>2、实验目标</h1><p>使用STM32CubeMX软件配置STM32F407开发板上<font color="#fe2c24"><strong>串口USART1以DMA方式传输数据</strong></font>，然后实现与实验“<a href="https://www.cnblogs.com/lc-guo/p/17950348">STM32CubeMX教程9 USART&#x2F;UART 异步通信</a>”相同的目标</p><h1 id="3、实验流程"><a href="#3、实验流程" class="headerlink" title="3、实验流程"></a>3、实验流程</h1><h2 id="3-0、前提知识"><a href="#3-0、前提知识" class="headerlink" title="3.0、前提知识"></a>3.0、前提知识</h2><p>直接存储器访问（DMA）是实现存储器与外设、存储器与存储器之间高效传输数据的一种方法，<font color="#fe2c24"><strong>其拥有① 从外设到存储器、② 从存储器到外设和③ 从存储器到存储器 三种传输模式</strong></font></p><p>STM32F407有DMA1和DMA2两个DMA控制器，<font color="#fe2c24"><strong>其中DMA2可以实现上述三种传输模式，DMA1仅可以实现前两种传输模式</strong></font></p><p><font color="#fe2c24"><strong>每个DMA均有8个流（stream），每个流又有8个通道，但是每个流只能同时使用8个通道中的一个</strong></font>，支持DMA的外设一般可以选择8个流共64个通道中的某2个通道发起DMA请求</p><p><font color="#fe2c24"><strong>当多个流共同发起DMA请求时，由DMA仲裁器来决定谁先发送</strong></font>（软件可以配置DMA流的优先级），如下图所示为STM32F407的DMA1&#x2F;2具体的外设请求映射表 <em>（注释1）</em></p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/12.1.png" width = "700"></div><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/12.2.png" width = "700"></div><p><font color="#fe2c24"><strong>以USART1_TX为例举个例子</strong></font></p><p>当使用USART1_TX发起DMA请求时，USART1_TX可以选择的DMA通道只有DMA2 Stream7 CH4，因此DMA请求从DMA2 Stream7 CH4发起，然后经过仲裁器到存储器端口处取要发送的数据，然后经过FIFO（可以配置不使用），最后将数据送到外设端口USART1，上述描述如下图中黄色标注所示 <em>（注释1）</em></p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/12.3.png" width = "700"></div><p><font color="#fe2c24"><strong>在使用DMA传输数据时一般需要设置① DMA请求和② DMA流两个主要参数</strong></font>，其中DMA请求就是存储器或者外设发起的传输需求，而DMA流就是进行DMA传输的数据链路（上图黄色链路）</p><p>使用某个外设的DMA传输时，一般流程为“添加外设具体的DMA请求 -&gt; 选择该DMA请求的流Stream -&gt;设置DMA优先级 -&gt; 设置DMA请求模式 -&gt; 设置地址递增（一般为外设地址不变，内存地址递增） -&gt; 配置FIFO -&gt; 配置传输数据的数据宽度 -&gt; 启动DMA流全局中断 -&gt; 在程序中以DMA方式启动外设”</p><p><font color="#fe2c24"><strong>先入先出（FIFO）可以想象成一个缓存区</strong></font>，启用FIFO之后，可以将输出暂存在该缓存区中，然后当数据量一旦达到了FIFO设置的阈值才会从缓存区中取出来发送出去，<font color="#fe2c24"><strong>当DMA传输的源和目标的数据宽度不同时，FIFO将变得非常有用（可以在FIFO中改变传输数据的宽度）</strong></font></p><h2 id="3-1、CubeMX相关配置"><a href="#3-1、CubeMX相关配置" class="headerlink" title="3.1、CubeMX相关配置"></a>3.1、CubeMX相关配置</h2><h3 id="3-1-0、工程基本配置"><a href="#3-1-0、工程基本配置" class="headerlink" title="3.1.0、工程基本配置"></a>3.1.0、工程基本配置</h3><p>打开STM32CubeMX软件，单击ACCESS TO MCU SELECTOR选择开发板MCU（选择你使用开发板的主控MCU型号），选中MCU型号后单击页面右上角Start Project开始工程，具体如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/12.4.png" width = "700"></div><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/12.5.png" width = "700"></div><p>开始工程之后在配置主页面System Core&#x2F;RCC中配置HSE&#x2F;LSE晶振，在System Core&#x2F;SYS中配置Debug模式，具体如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/12.6.png" width = "700"></div><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/12.7.png" width = "700"></div><p>详细工程建立内容读者可以阅读“<a href="https://www.cnblogs.com/lc-guo/p/17937268">STM32CubeMX教程1 工程建立</a>”</p><h3 id="3-1-1、时钟树配置"><a href="#3-1-1、时钟树配置" class="headerlink" title="3.1.1、时钟树配置"></a>3.1.1、时钟树配置</h3><p>系统时钟使用8MHz外部高速时钟HSE，HCLK、PCLK1和PCLK2均设置为STM32F407能达到的最高时钟频率，具体如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/12.8.png" width = "700"></div><h3 id="3-1-2、外设参数配置"><a href="#3-1-2、外设参数配置" class="headerlink" title="3.1.2、外设参数配置"></a>3.1.2、外设参数配置</h3><p>以下标号与USART1 DMA配置图片中的标号对应</p><p>① 在Pinout ＆ Configuration页面左边功能分类栏目Connectivity中单击其中USART1，配置串口模式及参数，具体的USART1基本参数配置与实验“<a href="https://www.cnblogs.com/lc-guo/p/17950348">STM32CubeMX教程9 USART&#x2F;UART 异步通信</a>”相同，在页面下方的参数配置栏上面会有很多标签，当前处于的位置为Parameter Settings（参数设置）</p><p><font color="#fe2c24"><strong>② 单击DMA Settings进入USART1的DMA Settings（DMA配置）页面</strong></font>，支持DMA功能的外设在这里都会有DMA Settings页面</p><p><font color="#fe2c24"><strong>③ 单击ADD按键来增加外设的DMA</strong></font>，如果有可以使用的DMA流则会以列表形式供用户选择，这里可以选择发送TX和接收RX两个串口的DMA请求</p><p>④ 选择可用的DMA流，DMA的方向会根据用户选择的DMA请求自动推断，一般只有一个选项，接着选择DMA流的优先级（注意与DMA中断优先级区分）</p><p><font color="#fe2c24"><strong>⑤ USART1_RX DMA请求</strong></font><font color="#be191c" style="background: #fef2f0"> Mode </font><font color="#fe2c24"><strong>（模式）设置为循环模式，并设置内存地址递增</strong></font>，由于外设USART1的地址固定，因此不需要地址递增，而接收的数据存储到内存里需要地址递增</p><p><font color="#fe2c24"><strong>⑦ USART1_TX DMA请求</strong></font> <font color="#be191c" style="background: #fef2f0"> Mode </font> <font color="#fe2c24"><strong>（模式）设置为普通模式</strong></font>，其他参数与USART1_RX DMA请求一致‘</p><p>还以一些未标号的其他参数如下配置</p><p><font color="#be191c" style="background: #fef2f0"> Use Fifo </font>（使用FIFO配置）：如果使用则需要配置阈值 Threshold </p><p><font color="#be191c" style="background: #fef2f0"> Data Width </font>（传输数据宽度）：用于配置外设和内存的数据宽度，由于串口传输和存储数据均是以字节方式传输，因此这里均选择Byte</p><p><font color="#be191c" style="background: #fef2f0"> Burst Size </font>（突发传输设置）：当不使用FIFO时只能为单次传输，而当使用FIFO时，突发传输可以配置为4、8或16增量突发传输</p><p>具体配置如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/12.9.png" width = "700"></div><h3 id="3-1-3、外设中断配置"><a href="#3-1-3、外设中断配置" class="headerlink" title="3.1.3、外设中断配置"></a>3.1.3、外设中断配置</h3><p>在Pinout &amp; Configuration页面左边System Core&#x2F;NVIC中<font color="#fe2c24"><strong>勾选USART1和DMA2 stream2&#x2F;7全局中断</strong></font>，然后选择合适的中断优先级即可，步骤如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/12.10.png" width = "700"></div><h2 id="3-2、生成代码"><a href="#3-2、生成代码" class="headerlink" title="3.2、生成代码"></a>3.2、生成代码</h2><h3 id="3-2-0、配置Project-Manager页面"><a href="#3-2-0、配置Project-Manager页面" class="headerlink" title="3.2.0、配置Project Manager页面"></a>3.2.0、配置Project Manager页面</h3><p>单击进入Project Manager页面，在左边Project分栏中修改工程名称、工程目录和工具链，然后在Code Generator中勾选“Gnerate peripheral initialization as a pair of ‘c&#x2F;h’ files per peripheral”，最后单击页面右上角GENERATE CODE生成工程，具体如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/12.11.png" width = "700"></div><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/12.12.png" width = "700"></div><p>详细Project Manager配置内容读者可以阅读“<a href="https://www.cnblogs.com/lc-guo/p/17937268">STM32CubeMX教程1 工程建立</a>”实验3.4.3小节</p><h3 id="3-2-1、外设初始化调用流程"><a href="#3-2-1、外设初始化调用流程" class="headerlink" title="3.2.1、外设初始化调用流程"></a>3.2.1、外设初始化调用流程</h3><p>在生成的工程主函数main()中调用MX_DMA_Init()函数对USART1 RX&#x2F;TX用到的DMA时钟及其流的中断进行了配置</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/12.13.png" width = "700"></div><p>在MX_USART1_UART_Init()函数中相比较于“<a href="https://www.cnblogs.com/lc-guo/p/17950348">STM32CubeMX教程9 USART&#x2F;UART 异步通信</a>”实验增加了USART1 RX&#x2F;TX DMA相关的参数配置及初始化</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/12.14.png" width = "700"></div><h3 id="3-2-2、外设中断调用流程"><a href="#3-2-2、外设中断调用流程" class="headerlink" title="3.2.2、外设中断调用流程"></a>3.2.2、外设中断调用流程</h3><p>勾选DMA2 stream2&#x2F;7全局中断后，会在生成的工程文件stm32f4xx_it.c中新增全局中断函数DMA2_Stream2_IRQHandler()和DMA2_Stream7_IRQHandler()</p><p>这两个中断服务函数均调用了HAL库的DMA中断统一管理函数HAL_DMA_IRQHandler()，该函数中根据各种标志判断DMA传输完成&#x2F;失败&#x2F;一半完成等事件，然后根据不同的事件调用不同的回调函数，<font color="#fe2c24"><strong>这里DMA传输完成之后调用了hdma-&gt;-&gt;XferCpltCal1back()，这是个函数指针</strong></font></p><p>上述过程如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/12.15.png" width = "700"></div><p>这个函数指针在以DMA方式启动USART1发送或者接收数据时被指向DMA传输完成回调UART_DMATransmitCpl()函数</p><p>在该DMA传输完成回调UART_DMATransmitCplt()函数中最终调用了USART1_TX传输完成回调HAL_UART_TxCpltCallback()函数，该函数在串口实验中我们重新实现过，<font color="#fe2c24"><strong>也就是说DMA最终的传输完成中断回调函数使用了外设的中断回调函数</strong></font></p><p>其他的中断事件回调流程类似，上述过程如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/12.16.png" width = "700"></div><h3 id="3-2-3、添加其他必要代码"><a href="#3-2-3、添加其他必要代码" class="headerlink" title="3.2.3、添加其他必要代码"></a>3.2.3、添加其他必要代码</h3><p>本实验与 “<a href="https://www.cnblogs.com/lc-guo/p/17950348">STM32CubeMX教程9 USART&#x2F;UART 异步通信</a>”实验代码一致，除以下三个方面需要修改</p><ol><li>将主函数开始的以中断方式启动的串口接收函数修改为以DMA方式启动的HAL_UART_Receive_DMA()函数</li><li>主循环中将以中断方式启动的串口发送函数修改为以DMA方式启动的HAL_UART_Transmit_DMA()函数</li><li>删除空闲回调函数中的再次启动串口接收函数HAL_UART_Receive_IT()</li></ol><p>其他所有代码无需修改，具体修改后的代码如下所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/12.17.png" width = "700"></div><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/12.18.png" width = "700"></div><p><font color="#fe2c24"><strong>为什么删除再次启动串口接收中断的函数？</strong></font></p><p><font color="#fe2c24"><strong>在串口章节的实验中，我们提到当以中断方式启动串口接收之后，串口接收完毕一次就不能自动接收第二次了</strong></font>，用户必须手动再次调用中断接收函数才可以重新接收，因此我们才在串口空闲回调函数里重新启用，以此来实现无限次的自动接收</p><p><font color="#fe2c24"><strong>但是在本实验中，我们已经配置了串口USART1的DMA接收模式为循环模式，在该模式下其接收完毕一次之后能够继续接收</strong></font>，因此不需要我们在空闲回调函数中重新启用</p><p>如果将串口USART1的DMA发送模式配置为循环模式，当按下按键触发时，会出现一直发送的情况，读者可以尝试尝试，这显然不符合我们的预想，因此串口USART1_TX的DMA请求模式配置为了普通模式</p><h1 id="4、常用函数"><a href="#4、常用函数" class="headerlink" title="4、常用函数"></a>4、常用函数</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">/*以DMA方式启动USART接收*/</span><br>HAL_StatusTypeDef <span class="hljs-title function_">HAL_UART_Receive_DMA</span><span class="hljs-params">(UART_HandleTypeDef *huart, <span class="hljs-type">uint8_t</span> *pData, <span class="hljs-type">uint16_t</span> Size)</span><br> <br><span class="hljs-comment">/*以DMA方式启动USART传输*/</span><br>HAL_StatusTypeDef <span class="hljs-title function_">HAL_UART_Transmit_DMA</span><span class="hljs-params">(UART_HandleTypeDef *huart, <span class="hljs-type">const</span> <span class="hljs-type">uint8_t</span> *pData, <span class="hljs-type">uint16_t</span> Size)</span><br></code></pre></td></tr></table></figure><h1 id="5、烧录验证"><a href="#5、烧录验证" class="headerlink" title="5、烧录验证"></a>5、烧录验证</h1><p>实验现象与“<a href="https://www.cnblogs.com/lc-guo/p/17950348">STM32CubeMX教程9 USART&#x2F;UART 异步通信</a>”实验现象一致</p><h1 id="6、注释详解"><a href="#6、注释详解" class="headerlink" title="6、注释详解"></a>6、注释详解</h1><p><em>注释1</em>：图片来自STM32F4xx中文参考手册 RM0090</p><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p><a href="https://www.epubit.com/bookDetails?id=UB77e58e05a5ea9">STM32Cube高效开发教程（基础篇）</a></p><p><strong>更多内容请浏览</strong> <a href="https://blog.csdn.net/lc_guo/article/details/135349375?spm=1001.2014.3001.5502">STM32CubeMX+STM32F4系列教程文章汇总贴</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>STM32CubeMX</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>STM32CubeMX教程11 RTC 实时时钟 - 入侵检测和时间戳</title>
    <link href="/2024/01/26/STM32CubeMX%E6%95%99%E7%A8%8B11-RTC-%E5%AE%9E%E6%97%B6%E6%97%B6%E9%92%9F-%E5%85%A5%E4%BE%B5%E6%A3%80%E6%B5%8B%E5%92%8C%E6%97%B6%E9%97%B4%E6%88%B3/"/>
    <url>/2024/01/26/STM32CubeMX%E6%95%99%E7%A8%8B11-RTC-%E5%AE%9E%E6%97%B6%E6%97%B6%E9%92%9F-%E5%85%A5%E4%BE%B5%E6%A3%80%E6%B5%8B%E5%92%8C%E6%97%B6%E9%97%B4%E6%88%B3/</url>
    
    <content type="html"><![CDATA[<h1 id="1、准备材料"><a href="#1、准备材料" class="headerlink" title="1、准备材料"></a>1、准备材料</h1><p>开发板（<a href="http://47.111.11.73/docs/boards/stm32/zdyz_stm32f407_explorerV3.html">正点原子stm32f407探索者开发板V2.4</a>）</p><p><a href="https://doc.embedfire.com/stm32_products/must_read/zh/latest/doc/quickstart/DAP/DAP.html">野火DAP仿真器</a></p><p><a href="http://www.openedv.com/docs/tool/ruanjian/ATK-XCOM.html">XCOM V2.6串口助手</a></p><p>STM32CubeMX软件（<a href="https://www.st.com/en/development-tools/stm32cubemx.html">Version 6.10.0</a>）</p><p>keil µVision5 IDE（<a href="https://www.keil.com/download/product/">MDK-Arm</a>）</p><p><a href="https://www.st.com/zh/development-tools/stsw-link009.html">ST-LINK&#x2F;V2驱动</a></p><p>杜邦线一根</p><h1 id="2、实验目标"><a href="#2、实验目标" class="headerlink" title="2、实验目标"></a>2、实验目标</h1><p>使用STM32CubeMX软件配置STM32F407开发板<font color="#fe2c24"><strong>RTC实现入侵检测和时间戳功能</strong></font>，具体为周期唤醒回调中使用串口输出当前RTC时间，按键WK_UP存储当前RTC时间到备份寄存器，按键KEY_2从备份寄存器中读取上次存储的时间，按键KEY_1负责产生入侵事件</p><h1 id="3、实验流程"><a href="#3、实验流程" class="headerlink" title="3、实验流程"></a>3、实验流程</h1><h2 id="3-0、前提知识"><a href="#3-0、前提知识" class="headerlink" title="3.0、前提知识"></a>3.0、前提知识</h2><p><font color="#fe2c24"><strong>STM32F407的RTC上有两个入侵检测模块</strong></font>，但是笔者使用的LQFP144封装的STM32F407ZGT6只有一个入侵检测模块，<font color="#fe2c24"><strong>只有一个入侵检测模块的STM32F407单片机是利用RTC_AF1（PC13）引脚来进行触发的</strong></font>，和按键外部中断类似，如果设置入侵检测触发为低电平触发，那么当PC13为低电平时就会进入Tampere1事件回调函数，<font color="#fe2c24"><strong>当发生入侵事件时，RTC的20个备份寄存器中的值会全部丢失</strong></font></p><p>由于开发板上PC13引脚并没有按键控制，不方便实现其电平的翻转变化操作，<font color="#fe2c24"><strong>因此本实验需要一根杜邦线，将按键KEY_1所使用的PE3引脚与PC13引脚短接，相当于使用按键KEY_1来间接控制PC13的电平变化</strong></font></p><p>如下图所示，当按键KEY_1松开时，此时PE3&#x2F;PC13状态应该由外部上&#x2F;下拉决定，而当按键KEY_1按下时，PE3&#x2F;PC13的状态应该为低电平，通过设置PC13外部上拉，就可以实现KEY_1按键松开时为高电平，按下为低电平</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/11.1.png"></div><h2 id="3-1、CubeMX相关配置"><a href="#3-1、CubeMX相关配置" class="headerlink" title="3.1、CubeMX相关配置"></a>3.1、CubeMX相关配置</h2><h3 id="3-1-0、工程基本配置"><a href="#3-1-0、工程基本配置" class="headerlink" title="3.1.0、工程基本配置"></a>3.1.0、工程基本配置</h3><p>打开STM32CubeMX软件，单击ACCESS TO MCU SELECTOR选择开发板MCU（选择你使用开发板的主控MCU型号），选中MCU型号后单击页面右上角Start Project开始工程，具体如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/11.2.png" width = "700"></div><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/11.3.png" width = "700"></div><p>开始工程之后在配置主页面System Core&#x2F;RCC中配置HSE&#x2F;LSE晶振，在System Core&#x2F;SYS中配置Debug模式，具体如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/11.4.png" width = "700"></div><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/11.5.png" width = "700"></div><p>详细工程建立内容读者可以阅读“<a href="https://www.cnblogs.com/lc-guo/p/17937268">STM32CubeMX教程1 工程建立</a>”</p><h3 id="3-1-1、时钟树配置"><a href="#3-1-1、时钟树配置" class="headerlink" title="3.1.1、时钟树配置"></a>3.1.1、时钟树配置</h3><p>系统时钟树配置与上一实验一致，均设置为STM32F407总线能达到的最高时钟频率，配置LSE，RTC时钟频率为32.768kHz，具体如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/11.6.png" width = "700"></div><h3 id="3-1-2、外设参数配置"><a href="#3-1-2、外设参数配置" class="headerlink" title="3.1.2、外设参数配置"></a>3.1.2、外设参数配置</h3><p>本实验需要需要初始化USART1作为输出信息渠道，具体配置步骤请阅读“<a href="https://www.cnblogs.com/lc-guo/p/17950348">STM32CubeMX教程9 USART&#x2F;UART 异步通信</a>”</p><p>单击Pinout &amp; Configuration页面左边Timers&#x2F;RTC，<font color="#fe2c24"><strong>在页面中间激活日历，周期唤醒WakeUp采用内部模式，勾选入侵检测1将其输入复用到引脚RTC_AF1（PC13）</strong></font>，则此后PC13引脚便作为入侵检测引脚，具体配置如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/11.7.png" width = "700"></div><p>对于参数配置，RTC通用参数、日历时间、日历日期和周期唤醒参数均上一实验类似，这里不再过多解释，下面主要介绍下入侵检测的相关参数</p><p><font color="#be191c" style="background: #fef2f0"> Filter </font>（滤波设置）：如果不滤波则入侵检测的触发方式只能选择边沿触发，而如果选择滤波，则触发方式只能选择电平触发，这里由于使用的机械按键存在抖动，因此对输入滤波</p><p><font color="#be191c" style="background: #fef2f0"> Tamper Pull Up </font>（入侵引脚是否上拉）：如上述3.0小节所述，我们需要PE3&#x2F;PC13外部上拉才能实现目标，因此此处选择上拉</p><p><font color="#be191c" style="background: #fef2f0"> Time Stamp On Tamper Detection </font>（入侵检测时间戳）：保存了入侵时间戳就可以在Tampere1事件回调函数中使用HAL_RTCEx_GetTimeStamp获取入侵时间戳，反之则无法获取</p><p><font color="#be191c" style="background: #fef2f0"> Tamper 1 Trigger </font>（入侵检测触发方式）：由于按键按下为低电平，因此这里选择低电平</p><p>其他两个<font color="#be191c" style="background: #fef2f0"> Sampling Frequency </font>和 <font color="#be191c" style="background: #fef2f0"> Precharge Duration </font>两个参数按照下图设置即可，下图所示为具体参数配置</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/11.8.png" width = "700"></div><h3 id="3-1-3、外设中断配置"><a href="#3-1-3、外设中断配置" class="headerlink" title="3.1.3、外设中断配置"></a>3.1.3、外设中断配置</h3><p>在Pinout &amp; Configuration页面左边System Core&#x2F;NVIC中勾选入侵检测及周期唤醒中断，然后选择合适的中断优先级即可</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/11.9.png" width = "700"></div><h2 id="3-2、生成代码"><a href="#3-2、生成代码" class="headerlink" title="3.2、生成代码"></a>3.2、生成代码</h2><h3 id="3-2-0、配置Project-Manager页面"><a href="#3-2-0、配置Project-Manager页面" class="headerlink" title="3.2.0、配置Project Manager页面"></a>3.2.0、配置Project Manager页面</h3><p>单击进入Project Manager页面，在左边Project分栏中修改工程名称、工程目录和工具链，然后在Code Generator中勾选“Gnerate peripheral initialization as a pair of ‘c&#x2F;h’ files per peripheral”，最后单击页面右上角GENERATE CODE生成工程，具体如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/11.10.png" width = "700"></div><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/11.11.png" width = "700"></div><p>详细Project Manager配置内容读者可以阅读“<a href="https://www.cnblogs.com/lc-guo/p/17937268">STM32CubeMX教程1 工程建立</a>”实验3.4.3小节</p><h3 id="3-2-1、外设初始化调用流程"><a href="#3-2-1、外设初始化调用流程" class="headerlink" title="3.2.1、外设初始化调用流程"></a>3.2.1、外设初始化调用流程</h3><p>与上一小节RTC初始化函数MX_RTC_Init对比，可以发现本小节的初始化函数中减少了闹钟A&#x2F;B的初始化，但是新增加了入侵检测的初始化，如下图所示，也即我们在CubeMX中设置的参数，类似的中断相关的初始化设置仍然在HAL_RTC_MspInit函数中</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/11.12.png" width = "700"></div><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/11.13.png" width = "700"></div><h3 id="3-2-2、外设中断调用流程"><a href="#3-2-2、外设中断调用流程" class="headerlink" title="3.2.2、外设中断调用流程"></a>3.2.2、外设中断调用流程</h3><p>在CubeMX中勾选RTC入侵检测启动中断后，在stm32f4xx_it.c中均会生成对应的中断服务函数TAMP_STAMP_IRQHandler()</p><p>在该TAMP_STAMP_IRQHandler()中断服务函数中调用了HAL库HAL_RTCEx_TamperTimeStampIRQHandler()函数统一处理时间戳&#x2F;入侵事件</p><p>最终根据发生的事件来源调用了以下几个函数</p><ol><li><font color="#fe2c24"><strong>时间戳事件回调函数 HAL_RTCEx_TimeStampEventCallback()</strong></font></li><li><font color="#fe2c24"><strong>入侵检测1事件回调函数 HAL_RTCEx_Tamper1EventCallback()</strong></font></li><li><font color="#fe2c24"><strong>入侵检测2事件回调函数 HAL_RTCEx_Tamper2EventCallback()</strong></font></li></ol><p>具体流程如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/11.14.png" width = "700"></div><h3 id="3-2-3、添加其他必要代码"><a href="#3-2-3、添加其他必要代码" class="headerlink" title="3.2.3、添加其他必要代码"></a>3.2.3、添加其他必要代码</h3><p>由于无入侵检测2，故只实现了入侵检测1事件回调函数HAL_RTCEx_Tamper1EventCallback()，将其实现在了rtc.c中</p><p>另外周期唤醒回调函数内容与上一小结内容一致，这里不再赘述，入侵检测1事件回调函数具体代码如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/11.15.png" width = "700"></div><p>源代码如下</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">/*Tampere1事件回调函数*/</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">HAL_RTCEx_Tamper1EventCallback</span><span class="hljs-params">(RTC_HandleTypeDef *hrtc)</span><br>&#123;<br>    RTC_TimeTypeDef sTime;<br>    RTC_DateTypeDef sDate;<br>    <span class="hljs-keyword">if</span>(HAL_RTCEx_GetTimeStamp(hrtc, &amp;sTime, &amp;sDate, RTC_FORMAT_BIN) == HAL_OK)<br>    &#123;<br>        <span class="hljs-type">char</span> str[<span class="hljs-number">24</span>];<br>        <span class="hljs-built_in">sprintf</span>(str,<span class="hljs-string">&quot;TimeStamp = %2d:%2d:%2d\r\n&quot;</span>,sTime.Hours,sTime.Minutes,sTime.Seconds);<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Tampere1 Event Happend, %s&quot;</span>, str);<br>    &#125;<br>    HAL_GPIO_TogglePin(GREEN_LED_GPIO_Port,GREEN_LED_Pin);<br>&#125;<br></code></pre></td></tr></table></figure><p>经过了上述的过程之后目前还缺少两个操作，利用按键WK_UP存储当前RTC时间到备份寄存器，按键KEY_2从备份寄存器中读取上次存储的时间，其代码实现在了主函数主循环中，简单采用轮询的方式处理按键，如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/11.16.png" width = "700"></div><p>源代码如下</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">/*按下WK_UP按键将当前时间存储到备份寄存器*/</span><br><span class="hljs-keyword">if</span>(HAL_GPIO_ReadPin(WK_UP_GPIO_Port,WK_UP_Pin) == GPIO_PIN_SET)<br>&#123;<br>    HAL_Delay(<span class="hljs-number">50</span>);<br>    <span class="hljs-keyword">if</span>(HAL_GPIO_ReadPin(WK_UP_GPIO_Port,WK_UP_Pin) == GPIO_PIN_SET)<br>    &#123;<br>        RTC_TimeTypeDef sTime;<br>        RTC_DateTypeDef sDate;<br>        <span class="hljs-keyword">if</span>(HAL_RTC_GetTime(&amp;hrtc, &amp;sTime,  RTC_FORMAT_BIN) == HAL_OK)<br>        &#123;<br>            HAL_RTC_GetDate(&amp;hrtc, &amp;sDate,  RTC_FORMAT_BIN);<br>            HAL_RTCEx_BKUPWrite(&amp;hrtc,RTC_BKP_DR2, sTime.Hours);<br>            HAL_RTCEx_BKUPWrite(&amp;hrtc,RTC_BKP_DR3, sTime.Minutes);<br>            HAL_RTCEx_BKUPWrite(&amp;hrtc,RTC_BKP_DR4, sTime.Seconds);<br>            <span class="hljs-type">char</span> timeStr[<span class="hljs-number">30</span>];<br>            <span class="hljs-built_in">sprintf</span>(timeStr,<span class="hljs-string">&quot;%2d:%2d:%2d&quot;</span>,sTime.Hours,sTime.Minutes,sTime.Seconds);<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Store %s to the backup register\r\n&quot;</span>, timeStr);<br>            <span class="hljs-keyword">while</span>(HAL_GPIO_ReadPin(WK_UP_GPIO_Port,WK_UP_Pin));<br>        &#125;<br>    &#125;<br>&#125;<br> <br><span class="hljs-comment">/*按下KEY2按键将存储到备份寄存器的时间利用串口输出*/</span><br><span class="hljs-keyword">if</span>(HAL_GPIO_ReadPin(KEY_2_GPIO_Port,KEY_2_Pin) == GPIO_PIN_RESET)<br>&#123;<br>    HAL_Delay(<span class="hljs-number">50</span>);<br>    <span class="hljs-keyword">if</span>(HAL_GPIO_ReadPin(KEY_2_GPIO_Port,KEY_2_Pin) == GPIO_PIN_RESET)<br>    &#123;<br>        <span class="hljs-type">uint32_t</span>  sHour,sMinute,sSecond;<br>        sHour = HAL_RTCEx_BKUPRead(&amp;hrtc, RTC_BKP_DR2);<span class="hljs-comment">//Hour</span><br>        sMinute = HAL_RTCEx_BKUPRead(&amp;hrtc, RTC_BKP_DR3);<span class="hljs-comment">//Minute</span><br>        sSecond = HAL_RTCEx_BKUPRead(&amp;hrtc, RTC_BKP_DR4);<span class="hljs-comment">//Second</span><br>        <span class="hljs-type">char</span> timeStr[<span class="hljs-number">30</span>];<br>        <span class="hljs-built_in">sprintf</span>(timeStr,<span class="hljs-string">&quot;%u:%u:%u&quot;</span>,sHour,sMinute,sSecond);<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Read out %s from the backup register\r\n&quot;</span>, timeStr);<br>        <span class="hljs-keyword">while</span>(!HAL_GPIO_ReadPin(KEY_2_GPIO_Port,KEY_2_Pin));<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="4、常用函数"><a href="#4、常用函数" class="headerlink" title="4、常用函数"></a>4、常用函数</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">/*时间戳回调函数*/</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">HAL_RTCEx_TimeStampEventCallback</span><span class="hljs-params">(RTC_HandleTypeDef *hrtc)</span><br> <br><span class="hljs-comment">/*Tampere1事件回调函数*/</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">HAL_RTCEx_Tamper1EventCallback</span><span class="hljs-params">(RTC_HandleTypeDef *hrtc)</span><br> <br><span class="hljs-comment">/*Tampere2事件回调函数*/</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">HAL_RTCEx_Tamper2EventCallback</span><span class="hljs-params">(RTC_HandleTypeDef *hrtc)</span><br> <br><span class="hljs-comment">/*获取RTC时间戳*/</span><br>HAL_StatusTypeDef <span class="hljs-title function_">HAL_RTCEx_GetTimeStamp</span><span class="hljs-params">(RTC_HandleTypeDef *hrtc, RTC_TimeTypeDef *sTimeStamp, RTC_DateTypeDef *sTimeStampDate, <span class="hljs-type">uint32_t</span> Format)</span><br></code></pre></td></tr></table></figure><h1 id="5、烧录验证"><a href="#5、烧录验证" class="headerlink" title="5、烧录验证"></a>5、烧录验证</h1><p>烧录程序，利用杜邦线短接PE3和PC13，当开发板上电后，会在周期唤醒回调函数中不断地输出当前RTC的时间，另外开发板上的红色LED灯也会不断地闪烁</p><p>当按下开发板上的WK_UP按键之后会将当前RTC日历的时间存储到备份寄存器RTC_BKP_DR2~4中，按下开发板上的KEY_2按键可以从备份寄存器中将上次存储的时间读出来</p><p>然后当按下按键KEY_1的时候，会发生入侵事件，此时入侵被检测到，会触发Tampere1事件回调函数通过串口输出入侵事件的信息，并且如果再去通过KEY_2按键读取备份寄存器中存储的时间会发现由于入侵的发生，备份寄存器中的值已经被清空</p><p>上述整个流程串口输出信息如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/11.17.png"></div><h1 id="6、奇怪的现象"><a href="#6、奇怪的现象" class="headerlink" title="6、奇怪的现象"></a>6、奇怪的现象</h1><p>有时候会出现写备份寄存器写不进去的情况，如果你也遇到了，可以尝试将开发板完全断电（电源线、USB串口和调试器接口），然后重新上电复位再向备份寄存器中写入试试</p><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p><a href="https://www.epubit.com/bookDetails?id=UB77e58e05a5ea9">STM32Cube高效开发教程（基础篇）</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>STM32CubeMX</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>STM32CubeMX教程10 RTC 实时时钟 - 周期唤醒、闹钟AB事件和备份寄存器</title>
    <link href="/2024/01/26/STM32CubeMX%E6%95%99%E7%A8%8B10-RTC-%E5%AE%9E%E6%97%B6%E6%97%B6%E9%92%9F-%E5%91%A8%E6%9C%9F%E5%94%A4%E9%86%92%E3%80%81%E9%97%B9%E9%92%9FAB%E4%BA%8B%E4%BB%B6%E5%92%8C%E5%A4%87%E4%BB%BD%E5%AF%84%E5%AD%98%E5%99%A8/"/>
    <url>/2024/01/26/STM32CubeMX%E6%95%99%E7%A8%8B10-RTC-%E5%AE%9E%E6%97%B6%E6%97%B6%E9%92%9F-%E5%91%A8%E6%9C%9F%E5%94%A4%E9%86%92%E3%80%81%E9%97%B9%E9%92%9FAB%E4%BA%8B%E4%BB%B6%E5%92%8C%E5%A4%87%E4%BB%BD%E5%AF%84%E5%AD%98%E5%99%A8/</url>
    
    <content type="html"><![CDATA[<h1 id="1、准备材料"><a href="#1、准备材料" class="headerlink" title="1、准备材料"></a>1、准备材料</h1><p>开发板（<a href="http://47.111.11.73/docs/boards/stm32/zdyz_stm32f407_explorerV3.html">正点原子stm32f407探索者开发板V2.4</a>）</p><p>STM32CubeMX软件（<a href="https://www.st.com/en/development-tools/stm32cubemx.html">Version 6.10.0</a>）</p><p>keil µVision5 IDE（<a href="https://www.keil.com/download/product/">MDK-Arm</a>）</p><p><a href="https://www.st.com/zh/development-tools/stsw-link009.html">ST-LINK&#x2F;V2驱动</a></p><p><a href="https://doc.embedfire.com/stm32_products/must_read/zh/latest/doc/quickstart/DAP/DAP.html">野火DAP仿真器</a></p><p><a href="http://www.openedv.com/docs/tool/ruanjian/ATK-XCOM.html">XCOM V2.6串口助手</a></p><h1 id="2、实验目标"><a href="#2、实验目标" class="headerlink" title="2、实验目标"></a>2、实验目标</h1><p>使用STM32CubeMX软件配置STM32F407开发板<font color="#fe2c24"><strong>实现RTC周期唤醒、闹钟A&#x2F;B事件功能</strong></font>，具体为在周期唤醒时利用串口输出当前RTC记录时间，当闹钟A&#x2F;B事件发生时利用串口输出闹钟A&#x2F;B事件发生提示</p><h1 id="3、实验流程"><a href="#3、实验流程" class="headerlink" title="3、实验流程"></a>3、实验流程</h1><h2 id="3-0、前提知识"><a href="#3-0、前提知识" class="headerlink" title="3.0、前提知识"></a>3.0、前提知识</h2><p>RTC的时钟可以由外部低速时钟LSE、外部高速时钟HSE经过2-31分频和内部RC振荡LSI三种时钟来源提供，<font color="#fe2c24"><strong>但是一般我们都选择使用32.768kHz的LSE作为RTC的时钟源，因为32.768kHz的时钟频率可以经过128次分频，然后再经过256次分频得到一个较为精确的1Hz信号</strong></font>，此信号1s脉动一次，可以方便的用于更新日历，如下图所示 <em>（注释1）</em></p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/10.1.png" width = "700"></div><p><font color="#fe2c24"><strong>另外RTC还有两个可编程的闹钟A&#x2F;B</strong></font>，如果设置了闹钟A&#x2F;B的时间，则闹钟A&#x2F;B设定时间会和当前日历时间对比，如果时间相等，会产生ALRA&#x2F;BF事件</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/10.2.png" width = "700"></div><p>周期唤醒可以使用RTC内部一个16位唤醒自动重载寄存器来实现，周期唤醒的时钟信号可以来自于更新日历的1Hz（ck_spre）信号，也可以使用RTC时钟的2&#x2F;4&#x2F;8&#x2F;16分频后的时钟，设置该自动重载寄存器的值，<font color="#fe2c24"><strong>根据时钟频率向上计数，当计数溢出时发生周期唤醒事件</strong></font></p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/10.3.png" width = "700"></div><p><font color="#fe2c24"><strong>闹钟A&#x2F;B，周期唤醒产生的 ALRAF、 ALRBF和WUTF事件均可以输出到复用引脚RTC_AF1（PC13）</strong></font></p><p><font color="#fe2c24"><strong>STM32F407的RTC还有20个32位的备份寄存器，其名字从RTC_BKP_DR0到RTC_BKP_DR19</strong></font>，定义在stm32f4xx_hal_rtc_ex.h文件中，RTC和备份寄存器均由单片机的备用电源VBAT提供，主电源VDD&#x2F;VDDA断开不影响备份寄存器内容存储及RTC的正常运行</p><h2 id="3-1、CubeMX相关配置"><a href="#3-1、CubeMX相关配置" class="headerlink" title="3.1、CubeMX相关配置"></a>3.1、CubeMX相关配置</h2><h3 id="3-1-0、工程基本配置"><a href="#3-1-0、工程基本配置" class="headerlink" title="3.1.0、工程基本配置"></a>3.1.0、工程基本配置</h3><p>打开STM32CubeMX软件，单击ACCESS TO MCU SELECTOR选择开发板MCU（选择你使用开发板的主控MCU型号），选中MCU型号后单击页面右上角Start Project开始工程，具体如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/10.4.png" width = "700"></div><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/10.5.png" width = "700"></div><p>开始工程之后在配置主页面System Core&#x2F;RCC中配置HSE&#x2F;LSE晶振，在System Core&#x2F;SYS中配置Debug模式，具体如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/10.6.png" width = "700"></div><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/10.7.png" width = "700"></div><p>详细工程建立内容读者可以阅读“<a href="https://www.cnblogs.com/lc-guo/p/17937268">STM32CubeMX教程1 工程建立</a>”</p><h3 id="3-1-1-、时钟树配置"><a href="#3-1-1-、时钟树配置" class="headerlink" title="3.1.1 、时钟树配置"></a>3.1.1 、时钟树配置</h3><p><font color="#fe2c24"><strong>本文实验中RTC时钟信号源选择为外部32.768kHz的低速时钟LSE</strong></font>，首先需要在Pinout &amp; Configuration页面左边System Core&#x2F;RCC中将原来Disable状态的Low Speed Clock(LSE)选择为Crystal&#x2F;Ceramic Resonator，表示外部低速时钟LSE由32.768kHz的晶振提供，如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/10.8.png" width = "700"></div><p>然后还是在这个页面，<font color="#fe2c24"><strong>在Timers&#x2F;RTC中单击Activate Clock Source</strong></font>，激活时钟源之后才可以对Clock Configuration页面的时钟修改，如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/10.9.png" width = "700"></div><p>最后<font color="#fe2c24"><strong>在Clock Configuration页面将输出到RTC时钟的时钟源选择为LSE</strong></font>，此时就已经配置好了RTC的输入时钟为32.768kHz的LSE，如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/10.10.png" width = "700"></div><h3 id="3-1-2、外设参数配置"><a href="#3-1-2、外设参数配置" class="headerlink" title="3.1.2、外设参数配置"></a>3.1.2、外设参数配置</h3><p>本实验需要需要初始化USART1作为信息输出渠道，具体配置步骤请阅读“<a href="https://www.cnblogs.com/lc-guo/p/17950348">STM32CubeMX教程9 USART&#x2F;UART 异步通信</a>”</p><p>单击Pinout &amp; Configuration页面左边<font color="#fe2c24"><strong>Timers&#x2F;RTC，在该页面中间单击Activate Calendar激活日历</strong></font></p><p>这里Alarm A、Alarm B和WakeUp均有Disable、Internal Alarm&#x2F;WakeUp 和 Routed to AF1三个选项，分别表示不使用、单纯内部使用和输出到复用引脚AF1（PC13）</p><p><font color="#fe2c24"><strong>注意由于AF1只有一个所以一旦某一个选择输出到了复用引脚AF1，其他便不可以设置</strong></font>，具体配置如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/10.11.png" width = "700"></div><p>然后对启用的日历、Alarm A、Alarm B和WakeUp参数做不同的配置，这里比较通俗易懂，具体配置请看下图</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/10.12.png" width = "700"></div><h3 id="3-1-3-、外设中断配置"><a href="#3-1-3-、外设中断配置" class="headerlink" title="3.1.3 、外设中断配置"></a>3.1.3 、外设中断配置</h3><p>在Pinout &amp; Configuration页面左边System Core&#x2F;NVIC中<font color="#fe2c24"><strong>勾选闹钟A&#x2F;B中断及周期唤醒中断</strong></font>，然后选择合适的中断优先级即可，另外串口中断可以不打开，本节实验输出采用阻塞传输数据的方式输出RTC时间</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/10.13.png" width = "700"></div><h2 id="3-2、生成代码"><a href="#3-2、生成代码" class="headerlink" title="3.2、生成代码"></a>3.2、生成代码</h2><h3 id="3-2-0、配置Project-Manager页面"><a href="#3-2-0、配置Project-Manager页面" class="headerlink" title="3.2.0、配置Project Manager页面"></a>3.2.0、配置Project Manager页面</h3><p>单击进入Project Manager页面，在左边Project分栏中修改工程名称、工程目录和工具链，然后在Code Generator中勾选“Gnerate peripheral initialization as a pair of ‘c&#x2F;h’ files per peripheral”，最后单击页面右上角GENERATE CODE生成工程，具体如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/10.14.png" width = "700"></div><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/10.15.png" width = "700"></div><p>详细Project Manager配置内容读者可以阅读“<a href="https://www.cnblogs.com/lc-guo/p/17937268">STM32CubeMX教程1 工程建立</a>”实验3.4.3小节</p><h3 id="3-2-1、外设初始化函数调用流程"><a href="#3-2-1、外设初始化函数调用流程" class="headerlink" title="3.2.1、外设初始化函数调用流程"></a>3.2.1、外设初始化函数调用流程</h3><p>主函数中调用MX_RTC_Init()函数对RTC基本参数及日历时间、日历日期、闹钟A定时时间、闹钟B定时时间和周期唤醒等参数初始化&#x2F;使能</p><p>在初始化RTC的函数HAL_RTC_Init()中调用了HAL_RTC_MspInit()函数完成了对RTC时钟使能，NVIC使能，NVIC优先级设置</p><p>如下图所示为上述的函数调用流程</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/10.16.png" width = "700"></div><h3 id="3-2-2、外设中断函数调用流程"><a href="#3-2-2、外设中断函数调用流程" class="headerlink" title="3.2.2、外设中断函数调用流程"></a>3.2.2、外设中断函数调用流程</h3><p>在stm32f4xx_it.c文件中新增了周期唤醒中断服务函数RTC_WKUP_IRQHandler()</p><p>在该RTC_WKUP_IRQHandler()函数中调用了HAL_RTCEx_WakeUpTimerIRQHandler()函数处理周期回调事件</p><p><font color="#fe2c24"><strong>最终调用了虚函数HAL_RTCEx_WakeUpTimerEventCallback()，该函数需要用户重新实现</strong></font></p><p>如下图所示为周期唤醒中断函数调用流程</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/10.17.png" width = "700"></div><p>同时在stm32f4xx_it.c文件中新增了RTC闹钟A&#x2F;B事件中断服务函数RTC_Alarm_IRQHandler()</p><p>在该RTC_Alarm_IRQHandler()函数中调用了HAL_RTC_AlarmIRQHandler()函数处理闹钟A&#x2F;B事件</p><p><font color="#fe2c24"><strong>最后在该函数中调用了虚函数HAL_RTC_AlarmAEventCallback()处理闹钟A事件，调用虚函数HAL_RTCEx_AlarmBEventCallback()处理闹钟B事件</strong></font></p><p>如下图所示为RTC闹钟A&#x2F;B事件中断函数调用流程</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/10.18.png" width = "700"></div><h3 id="3-2-3、添加其他必要代码"><a href="#3-2-3、添加其他必要代码" class="headerlink" title="3.2.3、添加其他必要代码"></a>3.2.3、添加其他必要代码</h3><p>重新实现周期唤醒中断回调函数HAL_RTCEx_WakeUpTimerEventCallback()在rtc.c中，具体实现代码如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/10.19.png" width = "700"></div><p>源代码如下</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">/*周期唤醒回调函数*/</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">HAL_RTCEx_WakeUpTimerEventCallback</span><span class="hljs-params">(RTC_HandleTypeDef *hrtc)</span><br>&#123;<br>    RTC_TimeTypeDef sTime;<br>    RTC_DateTypeDef sDate;<br>    <span class="hljs-keyword">if</span>(HAL_RTC_GetTime(hrtc, &amp;sTime, RTC_FORMAT_BIN) == HAL_OK)<br>    &#123;<br>        HAL_RTC_GetDate(hrtc, &amp;sDate,  RTC_FORMAT_BIN);<br>        <span class="hljs-type">char</span> str[<span class="hljs-number">22</span>];<br>        <span class="hljs-built_in">sprintf</span>(str,<span class="hljs-string">&quot;RTC Time= %2d:%2d:%2d\r\n&quot;</span>,sTime.Hours,sTime.Minutes,sTime.Seconds);<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%s&quot;</span>, str);<br>    &#125;<br>    HAL_GPIO_TogglePin(RED_LED_GPIO_Port,RED_LED_Pin);<br>&#125;<br></code></pre></td></tr></table></figure><p>重新实现闹钟A&#x2F;B事件中断回调函数HAL_RTC_AlarmAEventCallback()和HAL_RTCEx_AlarmBEventCallback()在rtc.c中，具体代码如下所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/10.20.png" ></div><p>源代码如下</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">/*闹钟A事件回调函数*/</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">HAL_RTC_AlarmAEventCallback</span><span class="hljs-params">(RTC_HandleTypeDef *hrtc)</span><br>&#123;<br>    <span class="hljs-type">char</span> infoA[]=<span class="hljs-string">&quot;Alarm A(xx:xx:15) trigger: \r\n&quot;</span>;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%s&quot;</span>, infoA);<br>    HAL_GPIO_TogglePin(GREEN_LED_GPIO_Port,GREEN_LED_Pin);<br>&#125;<br> <br><span class="hljs-comment">/*闹钟B事件回调函数*/</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">HAL_RTCEx_AlarmBEventCallback</span><span class="hljs-params">(RTC_HandleTypeDef *hrtc)</span><br>&#123;<br>    <span class="hljs-type">char</span> infoB[]=<span class="hljs-string">&quot;Alarm B(xx:0:30) trigger: \r\n&quot;</span>;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%s&quot;</span>, infoB);<br>    HAL_GPIO_TogglePin(GREEN_LED_GPIO_Port,GREEN_LED_Pin);<br>&#125;<br></code></pre></td></tr></table></figure><p>此时的代码可以正常运行，<font color="#fe2c24"><strong>但存在一个问题，复位后重新执行RTC初始化函数会对RTC时间强制初始化为0：0：0，日期也会强制初始化</strong></font>，而我们想要设定的是当我们需要其初始化时就初始化，当一次初始化完毕之后，我不希望每次单片机复位时重新初始化</p><p><font color="#fe2c24"><strong>因此我们可以通过上述介绍的备份寄存器修复此BUG</strong></font>，我们在RTC通用初始化结束之后，RTC日期和时间初始化之前处，添加判断RTC备份寄存器是否已被写入1来决定是否需要初始化时间和日期，如果已被写入1，则表示之前已完成日期和时间初始化，不需要再次重新初始化，因此启动周期唤醒后直接退出函数，如下图代码所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/10.21.png" width = "700"></div><p>源代码如下</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">//读取备份寄存R0</span><br><span class="hljs-type">uint32_t</span> iniRTC=HAL_RTCEx_BKUPRead(&amp;hrtc, RTC_BKP_DR0);<br><span class="hljs-comment">//非零</span><br><span class="hljs-keyword">if</span>((iniRTC &amp; <span class="hljs-number">0x01</span>))  <br>&#123;<br>    <span class="hljs-comment">//使能周期唤醒</span><br>    <span class="hljs-keyword">if</span>(HAL_RTCEx_SetWakeUpTimer_IT(&amp;hrtc, <span class="hljs-number">0</span>, RTC_WAKEUPCLOCK_CK_SPRE_16BITS) != HAL_OK)<br>        Error_Handler();<br> <br>    <span class="hljs-comment">//提前退出函数,不初始化时间和日期</span><br>    <span class="hljs-keyword">return</span>;  <br>&#125;<br></code></pre></td></tr></table></figure><p><font color="#fe2c24"><strong>何时改变&#x2F;写入RTC备份寄存器中的值呢？</strong></font></p><p>这里笔者使用按键来控制，当按下WK_UP按键时，就翻转备份寄存器RTC_BKP_DR0中存储的值，也就是说按下一次WK_UP按键，备份寄存器RTC_BKP_DR0中的值会在0&#x2F;1之间改变，如下图所示为主循环中的按键扫描程序</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/10.22.png" width = "700"></div><p>源代码如下</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-type">uint32_t</span> iniRTC = HAL_RTCEx_BKUPRead(&amp;hrtc,RTC_BKP_DR0);<br>iniRTC = !iniRTC;<br> <br><span class="hljs-keyword">if</span>(HAL_GPIO_ReadPin(WK_UP_GPIO_Port,WK_UP_Pin) == <span class="hljs-number">1</span>)<br>&#123;<br>    HAL_Delay(<span class="hljs-number">50</span>);<br>    <span class="hljs-keyword">if</span>(HAL_GPIO_ReadPin(WK_UP_GPIO_Port,WK_UP_Pin) == <span class="hljs-number">1</span>)<br>    &#123;<br>        HAL_RTCEx_BKUPWrite(&amp;hrtc,RTC_BKP_DR0, iniRTC);<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Write RTC_BKP_DR0 %d\r\n&quot;</span>, iniRTC);<br>        <span class="hljs-keyword">while</span>(HAL_GPIO_ReadPin(WK_UP_GPIO_Port,WK_UP_Pin));<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="4、常用函数"><a href="#4、常用函数" class="headerlink" title="4、常用函数"></a>4、常用函数</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">/*RTC周期回调中断服务函数*/</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">HAL_RTCEx_WakeUpTimerEventCallback</span><span class="hljs-params">(RTC_HandleTypeDef *hrtc)</span><br> <br><span class="hljs-comment">/*RTC闹钟A中断服务函数*/</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">HAL_RTC_AlarmAEventCallback</span><span class="hljs-params">(RTC_HandleTypeDef *hrtc)</span><br> <br><span class="hljs-comment">/*RTC闹钟B中断服务函数*/</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">HAL_RTCEx_AlarmBEventCallback</span><span class="hljs-params">(RTC_HandleTypeDef *hrtc)</span><br> <br><span class="hljs-comment">/*查询RTC时间*/</span><br>HAL_StatusTypeDef <span class="hljs-title function_">HAL_RTC_GetTime</span><span class="hljs-params">(RTC_HandleTypeDef *hrtc, RTC_TimeTypeDef *sTime, <span class="hljs-type">uint32_t</span> Format)</span><br> <br><span class="hljs-comment">/*查询RTC日期*/</span><br>HAL_StatusTypeDef <span class="hljs-title function_">HAL_RTC_GetDate</span><span class="hljs-params">(RTC_HandleTypeDef *hrtc, RTC_DateTypeDef *sDate, <span class="hljs-type">uint32_t</span> Format)</span><br> <br><span class="hljs-comment">/*读RTC备份寄存器的值*/</span><br><span class="hljs-type">uint32_t</span> <span class="hljs-title function_">HAL_RTCEx_BKUPRead</span><span class="hljs-params">(RTC_HandleTypeDef *hrtc, <span class="hljs-type">uint32_t</span> BackupRegister)</span><br> <br><span class="hljs-comment">/*写RTC备份寄存器的值*/</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">HAL_RTCEx_BKUPWrite</span><span class="hljs-params">(RTC_HandleTypeDef *hrtc, <span class="hljs-type">uint32_t</span> BackupRegister, <span class="hljs-type">uint32_t</span> Data)</span><br></code></pre></td></tr></table></figure><h1 id="5、烧录验证"><a href="#5、烧录验证" class="headerlink" title="5、烧录验证"></a>5、烧录验证</h1><p>烧录程序，通过串口助手观察串口输出信息，每隔1秒，串口助手收到开发板传来的RTC时间信息，并且红色LED每一秒状态翻转一次</p><p>当时间到达0：0：15时，闹钟A触发，此时绿色LED灯状态翻转被点亮</p><p>随着时间继续流逝，当时间到达0：0：30时，闹钟B触发，此时此时绿色LED灯状态翻转被熄灭</p><p>此后每分钟的第15秒闹钟A会触发一次，每小时的0分30秒闹钟B会触发一次，具体串口输出信息如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/10.23.png"></div><p>按下WK_UP按键可以翻转备份寄存器RTC_BKP_DR0内存储的值，当备份寄存器RTC_BKP_DR0的值为1时，复位之后RTC的时间不会重置为0；</p><p>而当备份寄存器RTC_BKP_DR0的值为0时，复位之后RTC的时间会被重新初始化为0：0：0，串口输出信息如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/10.24.png"></div><p><font color="#fe2c24"><strong>为什么上图中RTC时间为0：0：15时刻的闹钟A没有响应？</strong></font></p><p>这是因为备份寄存器RTC_BKP_DR0的值为1时，我们在MX_RTC_Init初始化函数中初始化完毕RTC之后直接启动了周期唤醒然后整个函数就退出了，并没有对RTC的闹钟A&#x2F;B进行初始化，如果你想兼顾两者功能，也可以编写程序不直接退出，而是绕过RTC时间和日期赋初值的代码，然后执行RTC的闹钟A&#x2F;B的初始化</p><h1 id="6、注释详解"><a href="#6、注释详解" class="headerlink" title="6、注释详解"></a>6、注释详解</h1><p><em>注释1</em>：图片来源STM32F4xx中文参考手册 RM0090</p><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p><a href="https://www.epubit.com/bookDetails?id=UB77e58e05a5ea9">STM32Cube高效开发教程（基础篇）</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>STM32CubeMX</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>STM32CubeMX教程9 USART UART 异步通信</title>
    <link href="/2024/01/26/STM32CubeMX%E6%95%99%E7%A8%8B9-USART-UART-%E5%BC%82%E6%AD%A5%E9%80%9A%E4%BF%A1/"/>
    <url>/2024/01/26/STM32CubeMX%E6%95%99%E7%A8%8B9-USART-UART-%E5%BC%82%E6%AD%A5%E9%80%9A%E4%BF%A1/</url>
    
    <content type="html"><![CDATA[<h1 id="1、准备材料"><a href="#1、准备材料" class="headerlink" title="1、准备材料"></a>1、准备材料</h1><p>开发板（<a href="http://47.111.11.73/docs/boards/stm32/zdyz_stm32f407_explorerV3.html">正点原子stm32f407探索者开发板V2.4</a>）</p><p>STM32CubeMX软件（<a href="https://www.st.com/en/development-tools/stm32cubemx.html">Version 6.10.0</a>）</p><p>keil µVision5 IDE（<a href="https://www.keil.com/download/product/">MDK-Arm</a>）</p><p><a href="https://www.st.com/zh/development-tools/stsw-link009.html">ST-LINK&#x2F;V2驱动</a></p><p>逻辑分析仪<a href="https://github.com/wuxx/nanoDLA">nanoDLA</a></p><p><a href="https://doc.embedfire.com/stm32_products/must_read/zh/latest/doc/quickstart/DAP/DAP.html">野火DAP仿真器</a></p><p><a href="http://www.openedv.com/docs/tool/ruanjian/ATK-XCOM.html">XCOM V2.6串口助手</a></p><h1 id="2、实验目标"><a href="#2、实验目标" class="headerlink" title="2、实验目标"></a>2、实验目标</h1><p>使用STM32CubeMX软件配置STM32F407开发板<font color="#fe2c24"><strong>USART1与PC进行异步通信（阻塞传输方式、中断传输方式）</strong></font>，具体为 使用WK_UP按键触发串口输出，每按下一次WK_UP按键就以中断方式发送一次数据，并在串口传输完成中断回调函数中输出提示信息和翻转RED_LED灯的状态，同时使用串口中断接收回调函数完成对用户发来的命令解析，发送命令“#1;”则点亮GREEN_LED，发送命令“#0;”则熄灭GREEN_LED。</p><h1 id="3、实验流程"><a href="#3、实验流程" class="headerlink" title="3、实验流程"></a>3、实验流程</h1><h2 id="3-0、前提知识"><a href="#3-0、前提知识" class="headerlink" title="3.0、前提知识"></a>3.0、前提知识</h2><p>USART为通用同步异步收发器，是一种串行通信接口，类似的通信协议还有USB、RS232和RS485等，他们之间电平不同因此不可以直接通信，但是可以通过转换芯片进行逻辑电平的相互转换，从而实现在不同的串行通信方式下的信息传输</p><p>对于STM32F4系列来说，USART的高电平1表示的电压范围为2.0V~3.3V（通常VDD电源电压的大约70-100%），低电平0的电压范围为0V~0.3V；<font color="#fe2c24"><strong>USART通信中一般需要设置波特率、数据字长、校验位和停止位四个参数</strong></font>，如下图所示位串行数据发送时序图</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/9.1.png" width = "700"></div><p><font color="#be191c" style="background: #fef2f0"> Baud Rate </font>（波特率）：由于本实验的串口工作在异步通信模式，因此需要规定一个特定的传输速率，这样收发双方都以该速率解析发送的内容，才能不出错的进行通信，常见波特率9600&#x2F;115200等，当然也可自定义波特率</p><p><font color="#be191c" style="background: #fef2f0"> Word Length </font>（数据字长）：可选8&#x2F;9位，即一帧数据中传输的数据位数，由于一字节为8位，因此该参数默认为8位</p><p><font color="#be191c" style="background: #fef2f0"> Parity </font>（校验位）：可选无&#x2F;奇&#x2F;偶校验</p><p><font color="#be191c" style="background: #fef2f0"> Stop Bits </font>（停止位）：可选1&#x2F;2个停止位，一般选择1个停止位</p><p>设置波特率为115200，8位字长，无校验位，1个停止位，利用单片机串口发送“Reset\r\n”信息，然后利用逻辑分析仪对TX引脚电平进行捕获，如下图所示为TX引脚捕获电平波形图</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/9.2.png" width = "700"></div><p>STM32F407ZGT6一共有6组串口，包括4组通用同步&#x2F;异步收发器USART1、2、3、6和2组通用异步收发器UART4、5</p><p>通用异步收发器可以工作在异步通信、单线半双工、多处理器通信、红外和局域互连网络（LIN）等模式</p><p>通用同步&#x2F;异步收发器除可以工作在上述模式外还具有同步通信和智能卡等工作模式，<font color="#fe2c24"><strong>本文只介绍这6组串口的异步通信模式（最常用的模式），其他模式均不涉及</strong></font>，如下图示为USART1可选工作模式列表</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/9.3.png"></div><p>单片机的串口并不能直接和电脑的USB端口通信，因而需要在单片机和电脑之间利用串口芯片搭建沟通的桥梁，常用的串口芯片有CH34XX和CP210X，对于串口芯片一般需要安装驱动程序，请自行查看开发板串口所示用的串口芯片，然后下载对应驱动程序</p><p>一般来说能够实现电脑和单片机正常串口通信需要满足“电脑USB接口 ⇔ 开发板USB接口 ⇔ 串口芯片 ⇔ 单片机串口RX&#x2F;TX引脚”的物理连接 <em>（注释1）</em>，当其他的一切均正常使用USB线连接电脑与开发板，在Windows的设备管理器页面，端口栏目下会出现对应串口芯片识别成功的端口号，如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/9.4.png" width = "700"></div><p>如下图所示为正点原子stm32f407探索者开发板V2.4开发板上使用串口的硬件原理图，开发板上的USB接口经过串口芯片CH340G然后利用跳线帽将TXD&#x2F;RXD与单片机上的PA9&#x2F;10连接了起来，<font color="#fe2c24"><strong>读者在开发时应注意检查开发板上USART1的两个引脚是否利用跳线帽与TXD&#x2F;RXD进行了短接</strong></font></p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/9.23_add.png" width = "700"></div><p><font color="#fe2c24"><strong>串口通信中数据传输一般可以分为阻塞式数据传输和非阻塞式数据传输两种</strong></font>，而阻塞模式也即轮询模式，在此模式下，串口发送或者接收数据都会产生阻塞，单片机只能一直等待接收&#x2F;发送完成或者达到设定的超时时间；非阻塞模式是使用中断或者DMA的方式来传输数据，顾名思义，不会产生阻塞现象，发送&#x2F;接收数据的同时单片机还可以处理其他任务。<font color="#fe2c24"><strong>本文不涉及DMA，因此非阻塞模式仅仅介绍使用中断的传输方式</strong></font></p><h2 id="3-1、CubeMX相关配置"><a href="#3-1、CubeMX相关配置" class="headerlink" title="3.1、CubeMX相关配置"></a>3.1、CubeMX相关配置</h2><h3 id="3-1-0、工程基本配置"><a href="#3-1-0、工程基本配置" class="headerlink" title="3.1.0、工程基本配置"></a>3.1.0、工程基本配置</h3><p>打开STM32CubeMX软件，单击ACCESS TO MCU SELECTOR选择开发板MCU，（选择你使用开发板的主控MCU型号），选中MCU型号后单击页面右上角Start Project开始工程，具体如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/9.5.png" width = "700"></div><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/9.6.png" width = "700"></div><p>开始工程之后在配置主页面System Core&#x2F;RCC中配置HSE&#x2F;LSE晶振，在System Core&#x2F;SYS中配置Debug模式，具体如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/9.7.png" width = "700"></div><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/9.8.png" width = "700"></div><p>详细工程建立内容读者可以阅读“<a href="https://www.cnblogs.com/lc-guo/p/17937268">STM32CubeMX教程1 工程建立</a>”</p><h3 id="3-1-1、时钟树配置"><a href="#3-1-1、时钟树配置" class="headerlink" title="3.1.1、时钟树配置"></a>3.1.1、时钟树配置</h3><p>系统时钟使用8MHz外部高速时钟HSE，HCLK、PCLK1和PCLK2均设置为STM32F407能达到的最高时钟频率，具体如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/9.9.png" width = "700"></div><h3 id="3-1-2、外设参数配置"><a href="#3-1-2、外设参数配置" class="headerlink" title="3.1.2、外设参数配置"></a>3.1.2、外设参数配置</h3><p>在Pinout ＆ Configuration页面左边功能分类栏目Connectivity中<font color="#fe2c24"><strong>单击其中USART1</strong></font></p><p>页面中间USART1 Mode and Configuration中<font color="#fe2c24"><strong>将串口模式设置为异步通信工作模式，无硬件流控制</strong></font></p><p>然后在Configuration页面中设置USART1的相关参数，主要有波特率、字长、奇偶校验位、停止位、数据方向和过采样率6个参数，一般采用默认即可，但要确保接收端设置与发送端一致</p><p>其他5个串口在异步通信模式下与USART1一致，唯一区别在于RX&#x2F;TX引脚不同，具体参数解释可以阅读本实验“3.0、前提知识”小节</p><p>具体设置如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/9.10.png" width = "700"></div><h3 id="3-1-3、外设中断配置"><a href="#3-1-3、外设中断配置" class="headerlink" title="3.1.3、外设中断配置"></a>3.1.3、外设中断配置</h3><p>在页面左边功能分类栏目中单击System Core&#x2F;NVIC，<font color="#fe2c24"><strong>勾选USART1全局中断</strong></font>，并设置合适的中断优先级</p><p><font color="#fe2c24"><strong>如果在串口中断中会使用到HAL库的延时函数，注意不要与滴答定时器优先级一致</strong></font> <em>（注释2）</em></p><p>具体设置如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/9.11.png" width = "700"></div><h2 id="3-2、生成代码"><a href="#3-2、生成代码" class="headerlink" title="3.2、生成代码"></a>3.2、生成代码</h2><h3 id="3-2-0、配置Project-Manager页面"><a href="#3-2-0、配置Project-Manager页面" class="headerlink" title="3.2.0、配置Project Manager页面"></a>3.2.0、配置Project Manager页面</h3><p>单击进入Project Manager页面，在左边Project分栏中修改工程名称、工程目录和工具链，然后在Code Generator中勾选“Gnerate peripheral initialization as a pair of ‘c&#x2F;h’ files per peripheral”，最后单击页面右上角GENERATE CODE生成工程，具体如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/9.12.png" width = "700"></div><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/9.13.png" width = "700"></div><p>详细Project Manager配置内容读者可以阅读“<a href="https://www.cnblogs.com/lc-guo/p/17937268">STM32CubeMX教程1 工程建立</a>”实验3.4.3小节</p><h3 id="3-2-1、外设初始化函数调用流程"><a href="#3-2-1、外设初始化函数调用流程" class="headerlink" title="3.2.1、外设初始化函数调用流程"></a>3.2.1、外设初始化函数调用流程</h3><p>在工程代码主函数main()中调用MX_USART1_UART_Init()函数对串口1相关参数进行了配置</p><p>在该MX_USART1_UART_Init()函数中调用了HAL_UART_Init()函数对串口1进行了初始化</p><p>在该初始化HAL_UART_Init()函数中又调用了HAL_UART_MspInit()函数对串口1时钟，中断，引脚复用做了相关配置</p><p>如下图所示为具体的USART1初始化调用流程</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/9.14.png" width = "700"></div><p>此时我们就可以让串口工作在阻塞模式下，通过如下所示的两个函数阻塞式的发送或接收数据</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">/*串口阻塞发送数据*/</span><br>HAL_UART_Transmit(UART_HandleTypeDef *huart, <span class="hljs-type">const</span> <span class="hljs-type">uint8_t</span> *pData, <span class="hljs-type">uint16_t</span> Size, <span class="hljs-type">uint32_t</span> Timeout)<br><span class="hljs-comment">/*串口阻塞接收数据*/</span><br>HAL_UART_Receive(UART_HandleTypeDef *huart, <span class="hljs-type">uint8_t</span> *pData, <span class="hljs-type">uint16_t</span> Size, <span class="hljs-type">uint32_t</span> Timeout)<br></code></pre></td></tr></table></figure><h3 id="3-2-2、外设中断函数调用流程"><a href="#3-2-2、外设中断函数调用流程" class="headerlink" title="3.2.2、外设中断函数调用流程"></a>3.2.2、外设中断函数调用流程</h3><p>勾选USART1全局中断后，在工程文件stm32f4xx_it.c中生成了USART1全局中断服务函数USART1_IRQHandler()</p><p>该函数调用了HAL库的串口统一中断处理函数HAL_UART_IRQHandler()，在该函数中通过一系列的判断，最终根据不同的串口事件调用不同的回调函数</p><p>当串口以中断方式发送完成数据时会调用串口完成中断传输回调函数HAL_UART_TxCpltCallback()</p><p>当串口以中断方式接收完成数据时会调用串口中断接收完毕回调函数HAL_UART_RxCpltCallback()</p><p>如下图所示为具体的USART1串口Tx传输完成中断调用流程</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/9.15.png" width = "700"></div><p>同理，感兴趣的可以自己找一找中断接收完毕回调函数HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)的调用流程</p><p>读者只需记住经过上述3.1.2和3.1.3所做的配置生成的代码，重新实现以下两个函数即可</p><ol><li><p><font color="#fe2c24"><strong>HAL_UART_TxCpltCallback()：串口中断发送完毕回调函数，使用HAL_UART_Transmit_IT函数传输数据完毕之后就会进入该函数</strong></font></p></li><li><p><font color="#fe2c24"><strong>HAL_UART_RxCpltCallback()：串口中断接收完毕回调函数，使用HAL_UART_Receive_IT接收数据时，一旦数据接收完毕之后就会进入该函数</strong></font></p></li></ol><h3 id="3-2-3、添加其他必要代码"><a href="#3-2-3、添加其他必要代码" class="headerlink" title="3.2.3、添加其他必要代码"></a>3.2.3、添加其他必要代码</h3><p><font color="#fe2c24"><strong>需要提到一点是，使用中断的方式接收指定长度数据时，一旦接收一次完毕，第二次不会自动启动接收</strong></font>，此时需要用户手动调用以中断方式接收串口数据的函数HAL_UART_Receive_IT。而一个串口往往有三种状态，要么在发送数据，要么在接收数据，要么在偷懒处于空闲状态，因此在空闲状态时重新启动中断串口接收是比较正确的选择，<font color="#fe2c24"><strong>这里就需要我们自己设置一个串口的空闲中断回调函数on_UART_IDLE</strong></font>，当接受完一次数据后，将空闲中断使能，在空闲的时候进入空闲中断回调函数，处理刚刚接收到的数据并重新启动串口中断接收</p><p>接下来我们来实现串口的空闲中断回调函数，将其放在串口1的中断服务函数中，这样串口1的任何中断都会调用该函数，然后在usart.c中实现该函数，在该函数中首先判断是否是空闲中断，如果不判断则任何关于串口1的中断都会执行空闲中断回调函数函数体内容，然后清除空闲中断标志及禁用空闲中断，<font color="#fe2c24"><strong>保证空闲中断回调函数只在串口接收中断完成后才能被触发，接着对串口接收到的数据进行处理，具体处理函数为CMD_PROCESS函数，最后重新启动串口中断接收</strong></font>，具体函数代码如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/9.16.png" ></div><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/9.17.png" width = "700"></div><p>串口完成中断传输回调函数和中断接收完毕回调函数重新实现在usart.c中，每次接收完数据都会进入中断接收完毕回调函数，在该回调函数中启动了空闲中断，此时才可以执行空闲中断函数体内的代码，也就是处理命令、重新启动串口中断接收，<font color="#fe2c24"><strong>值得提醒的是在串口完成中断传输回调函数中使用的串口输出是阻塞的方式输出信息的，不可以使用中断的方式输出提示信息，否则将无限套娃</strong></font>，具体代码如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/9.18.png" width = "700"></div><p>源代码如下</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">/*串口结束传输中断*/</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">HAL_UART_TxCpltCallback</span><span class="hljs-params">(UART_HandleTypeDef *huart)</span><br>&#123;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Into HAL_UART_TxCpltCallback Function\r\n&quot;</span>);<br>    HAL_GPIO_TogglePin(RED_LED_GPIO_Port,RED_LED_Pin);<br>&#125;<br> <br><span class="hljs-comment">/*串口接收完成中断*/</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">HAL_UART_RxCpltCallback</span><span class="hljs-params">(UART_HandleTypeDef *huart)</span><br>&#123;<br>    <span class="hljs-keyword">if</span> (huart-&gt;Instance == USART1)<br>    &#123;<br>        <span class="hljs-comment">//接收到固定长度数据后使能UART_IT_IDLE中断，在UART_IT_IDLE中断里再次接收</span><br>        <span class="hljs-comment">//接收完成标志</span><br>        rxCompleted=SET;<br>        <span class="hljs-comment">//复制接收到的数据到缓冲区</span><br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">uint16_t</span> i=<span class="hljs-number">0</span>;i&lt;RX_CMD_LEN;i++)<br>            proBuffer[i] = rxBuffer[i];<br> <br>        <span class="hljs-comment">//接收到数据后才开启IDLE中断</span><br>        __HAL_UART_ENABLE_IT(huart, UART_IT_IDLE); <br>    &#125;<br>&#125;<br> <br><span class="hljs-comment">/*串口空闲回调函数*/</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">on_UART_IDLE</span><span class="hljs-params">(UART_HandleTypeDef *huart)</span><br>&#123;<br>    <span class="hljs-comment">//判断IDLE中断是否被开启</span><br>    <span class="hljs-keyword">if</span>(__HAL_UART_GET_IT_SOURCE(huart, UART_IT_IDLE) == RESET) <br>        <span class="hljs-keyword">return</span>;<br> <br>    <span class="hljs-comment">//清除IDLE标志</span><br>    __HAL_UART_CLEAR_IDLEFLAG(huart); <br>    <span class="hljs-comment">//禁止IDLE中断</span><br>    __HAL_UART_DISABLE_IT(huart, UART_IT_IDLE); <br>    <span class="hljs-comment">//接收完成</span><br>    <span class="hljs-keyword">if</span>(rxCompleted)<br>    &#123;<br>        <span class="hljs-comment">//上传接收到的指令</span><br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Receive CMD is %s\r\n&quot;</span>,proBuffer);<br>        <span class="hljs-comment">//处理指令</span><br>        CMD_PROCESS();<br>        <span class="hljs-comment">//再次接收</span><br>        rxCompleted = RESET;<br>        <span class="hljs-comment">//再次启动串口接收</span><br>        HAL_UART_Receive_IT(huart, rxBuffer, RX_CMD_LEN); <br>    &#125;<br>&#125;<br> <br><span class="hljs-comment">/*接收命令处理函数*/</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">CMD_PROCESS</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span><br>&#123;<br>    <span class="hljs-comment">//非法的命令格式</span><br>    <span class="hljs-keyword">if</span>(proBuffer[<span class="hljs-number">0</span>] != <span class="hljs-string">&#x27;#&#x27;</span> &amp;&amp; proBuffer[<span class="hljs-number">2</span>] != <span class="hljs-string">&#x27;;&#x27;</span>)<br>    &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Unlawful Orders\r\n&quot;</span>);<br>        <span class="hljs-keyword">return</span>;<br>    &#125;<br>    <span class="hljs-comment">//解析命令</span><br>    <span class="hljs-type">uint8_t</span>CMD = proBuffer[<span class="hljs-number">1</span>]<span class="hljs-number">-0x30</span>;<br>    <span class="hljs-comment">//控制GREEN_LED</span><br>    <span class="hljs-keyword">if</span>(CMD == <span class="hljs-number">1</span>)<br>    &#123;<br>        HAL_GPIO_WritePin(GREEN_LED_GPIO_Port, GREEN_LED_Pin, GPIO_PIN_RESET);<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;GREEN_LED ON\r\n&quot;</span>);<br>    &#125;<br>    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(CMD == <span class="hljs-number">0</span>) <br>    &#123;<br>        HAL_GPIO_WritePin(GREEN_LED_GPIO_Port, GREEN_LED_Pin, GPIO_PIN_SET);<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;GREEN_LED OFF\r\n&quot;</span>);<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>最后我们在主函数中以中断方式启动串口接收，然后编写WK_UP按键响应函数，每按下一次按键以中断方式发送一次数据，具体的代码如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/9.19.png" width = "700"></div><p>上述代码中的一些变量均定义&#x2F;声明在了usart.c&#x2F;usart.h中，具体源代码如下</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">/*usart.c中定义的变量*/</span><br><span class="hljs-type">uint8_t</span>rxBuffer[<span class="hljs-number">3</span>]=<span class="hljs-string">&quot;#0;&quot;</span>;<span class="hljs-comment">//数据接收缓冲区</span><br><span class="hljs-type">uint8_t</span> proBuffer[<span class="hljs-number">3</span>]=<span class="hljs-string">&quot;#1;&quot;</span>;<span class="hljs-comment">//数据处理缓冲区</span><br><span class="hljs-type">uint8_t</span>rxCompleted=RESET;<span class="hljs-comment">//数据接收完成标志</span><br> <br><span class="hljs-comment">/*usart.h中声明的变量*/</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> RX_CMD_LEN 3              <span class="hljs-comment">//数据接收长度</span></span><br><span class="hljs-keyword">extern</span> <span class="hljs-type">uint8_t</span> rxBuffer[];        <span class="hljs-comment">//外部声明</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">on_UART_IDLE</span><span class="hljs-params">(UART_HandleTypeDef *huart)</span>;     <span class="hljs-comment">//函数声明</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">CMD_PROCESS</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span>;                           <span class="hljs-comment">//函数声明</span><br> <br><span class="hljs-comment">/*main()函数按键WK_UP控制代码*/</span><br><span class="hljs-keyword">if</span>(HAL_GPIO_ReadPin(WK_UP_GPIO_Port,WK_UP_Pin) == GPIO_PIN_SET)<br>&#123;<br>    HAL_Delay(<span class="hljs-number">50</span>);<br>    <span class="hljs-keyword">if</span>(HAL_GPIO_ReadPin(WK_UP_GPIO_Port,WK_UP_Pin) == GPIO_PIN_SET)<br>    &#123;<br>        HAL_UART_Transmit_IT(&amp;huart1, (<span class="hljs-type">uint8_t</span> *)<span class="hljs-string">&quot;Key WK_UP Pressed!\r\n&quot;</span>, <span class="hljs-number">20</span>);<br>        <span class="hljs-keyword">while</span>(HAL_GPIO_ReadPin(WK_UP_GPIO_Port,WK_UP_Pin));<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="4、常用函数"><a href="#4、常用函数" class="headerlink" title="4、常用函数"></a>4、常用函数</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">/*串口阻塞接收数据*/</span><br>HAL_StatusTypeDef <span class="hljs-title function_">HAL_UART_Receive</span><span class="hljs-params">(UART_HandleTypeDef *huart, <span class="hljs-type">uint8_t</span> *pData, <span class="hljs-type">uint16_t</span> Size, <span class="hljs-type">uint32_t</span> Timeout)</span><br> <br><span class="hljs-comment">/*串口阻塞发送数据*/</span><br>HAL_StatusTypeDef <span class="hljs-title function_">HAL_UART_Transmit</span><span class="hljs-params">(UART_HandleTypeDef *huart, <span class="hljs-type">const</span> <span class="hljs-type">uint8_t</span> *pData, <span class="hljs-type">uint16_t</span> Size, <span class="hljs-type">uint32_t</span> Timeout)</span><br> <br><span class="hljs-comment">/*串口中断接收数据*/</span><br>HAL_StatusTypeDef <span class="hljs-title function_">HAL_UART_Receive_IT</span><span class="hljs-params">(UART_HandleTypeDef *huart, <span class="hljs-type">uint8_t</span> *pData, <span class="hljs-type">uint16_t</span> Size)</span><br> <br><span class="hljs-comment">/*串口中断发送数据*/</span><br>HAL_StatusTypeDef <span class="hljs-title function_">HAL_UART_Transmit_IT</span><span class="hljs-params">(UART_HandleTypeDef *huart, <span class="hljs-type">const</span> <span class="hljs-type">uint8_t</span> *pData, <span class="hljs-type">uint16_t</span> Size)</span><br> <br><span class="hljs-comment">/*串口中断接收数据完毕回调函数*/</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">HAL_UART_RxCpltCallback</span><span class="hljs-params">(UART_HandleTypeDef *huart)</span><br> <br><span class="hljs-comment">/*串口中断发送数据完毕回调函数*/</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">HAL_UART_TxCpltCallback</span><span class="hljs-params">(UART_HandleTypeDef *huart)</span><br></code></pre></td></tr></table></figure><h1 id="5、烧录验证"><a href="#5、烧录验证" class="headerlink" title="5、烧录验证"></a>5、烧录验证</h1><p>烧录程序，开发板上电，此时按键WK_UP被按下，串口会同时输出信息，输出完毕后进入串口结束传输中断回调函数，输出提示信息并将RED_LED状态翻转</p><p>PC发送 “#1;” 给MCU，串口输出接收到的信息，然后解析命令，打开GREEN_LED</p><p>PC发送 “#0;” 给MCU，串口输出接收到的信息，然后解析命令，熄灭GREEN_LED</p><p>按键WK_UP又被按下，串口输出信息，输出完毕后进入串口结束传输中断回调函数，输出提示信息并将RED_LED状态翻转 <em>（注释3）</em>，如下图所示为串口的详细输出信息</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/9.20.gif"></div><h1 id="6、串口printf重定向"><a href="#6、串口printf重定向" class="headerlink" title="6、串口printf重定向"></a>6、串口printf重定向</h1><p>用户阻塞式的发送一条数据时使用的HAL_UART_Transmit函数需要指定发送数据的字节数，非常的不方便，因此简单使用串口传输数据时有必要将其重定向到我们熟悉的printf函数，以下为具体步骤</p><p>首先需要<font color="#fe2c24"><strong>在工程设置页面勾选“Use MicroLIB”</strong></font>，如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/9.21.png" width = "700"></div><p>然后在工程main.c文件中<font color="#fe2c24"><strong>加入printf函数所需的头文件“#include &lt;stdio.h&gt; ”</strong></font>，并在主函数上方添加重定向函数，如下图所示，红框中的串口实例可以替换成任何正常的串口实例</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/9.22.png" width = "700"></div><p>源代码如下</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;stdio.h&quot;</span> </span><br> <br><span class="hljs-meta">#<span class="hljs-keyword">ifdef</span> __GNUC__</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> PUTCHAR_PROTOTYPE int __io_putchar(int ch)</span><br><span class="hljs-meta">#<span class="hljs-keyword">else</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> PUTCHAR_PROTOTYPE int fputc(int ch, FILE *f)</span><br><span class="hljs-meta">#<span class="hljs-keyword">endif</span></span><br>PUTCHAR_PROTOTYPE<br>&#123;<br>    HAL_UART_Transmit(&amp;huart1, (<span class="hljs-type">uint8_t</span> *)&amp;ch, <span class="hljs-number">1</span>, HAL_MAX_DELAY);<br>    <span class="hljs-keyword">return</span> ch;<br>&#125;<br></code></pre></td></tr></table></figure><p>之后在工程任何文件处均可使用printf函数用作串口函数阻塞输出从而替代HAL_UART_Transmit函数（在其它文件使用记得添加头文件#include &lt;stdio.h&gt;）</p><h1 id="7、注释详解"><a href="#7、注释详解" class="headerlink" title="7、注释详解"></a>7、注释详解</h1><p><em>注释1</em>：如果你觉得自己的一切配置都没有问题，但是串口就是没有任何字符输出，可以用串口模块尝试开发板上其他的串口引脚，因为有时候开发板的某一个串口引脚可能被其他外设使用，物理上造成了冲突，无法用软件解决，比如笔者之前使用的STM32F407G-DISC1开发板其USART1就不能正常使用</p><p><em>注释2</em>：<font color="#fe2c24">如果设置串口中断优先级与系统滴答定时器优先级一致，那么在串口中断服务函数中使用HAL库的延时函数HAL_Delay的话，系统滴答定时器不能抢占串口中断，因此会出现程序卡死在HAL_Delay函数的情况</font></p><p><em>注释3</em>：注意笔者此实验只是简单介绍每个功能的使用方法，这里的代码其实是有BUG的，如果用户不按照”#1;”&#x2F;“#0;”的命令格式发送数据，而是只发送1个字符，比如”q”，然后再按照”#1;”&#x2F;“#0;”的命令格式发送数据，那么程序接收到的命令将错乱，导致不能正常解析命令</p><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p><a href="https://www.epubit.com/bookDetails?id=UB77e58e05a5ea9">STM32Cube高效开发教程（基础篇）</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>STM32CubeMX</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>STM32CubeMX教程8 TIM 通用定时器 - 输出比较</title>
    <link href="/2024/01/26/STM32CubeMX%E6%95%99%E7%A8%8B8-TIM-%E9%80%9A%E7%94%A8%E5%AE%9A%E6%97%B6%E5%99%A8-%E8%BE%93%E5%87%BA%E6%AF%94%E8%BE%83/"/>
    <url>/2024/01/26/STM32CubeMX%E6%95%99%E7%A8%8B8-TIM-%E9%80%9A%E7%94%A8%E5%AE%9A%E6%97%B6%E5%99%A8-%E8%BE%93%E5%87%BA%E6%AF%94%E8%BE%83/</url>
    
    <content type="html"><![CDATA[<h1 id="1、准备材料"><a href="#1、准备材料" class="headerlink" title="1、准备材料"></a>1、准备材料</h1><p>开发板（<a href="https://www.st.com/en/evaluation-tools/stm32f4discovery.html">STM32F407G-DISC1</a>）</p><p>STM32CubeMX软件（<a href="https://www.st.com/en/development-tools/stm32cubemx.html">Version 6.10.0</a>）</p><p>keil µVision5 IDE（<a href="https://www.keil.com/download/product/">MDK-Arm</a>）</p><p><a href="https://www.st.com/zh/development-tools/stsw-link009.html">ST-LINK&#x2F;V2驱动</a></p><p>逻辑分析仪<a href="https://github.com/wuxx/nanoDLA">nanoDLA</a></p><h1 id="2、实验目标"><a href="#2、实验目标" class="headerlink" title="2、实验目标"></a>2、实验目标</h1><p>使用STM32CubeMX软件配置STM32F407<font color="#fe2c24"><strong>通用定时器的输出比较通道</strong></font>，并将其输出到四个LED灯引脚实现LED灯流水灯效果</p><h1 id="3、实验流程"><a href="#3、实验流程" class="headerlink" title="3、实验流程"></a>3、实验流程</h1><h2 id="3-0、前提知识"><a href="#3-0、前提知识" class="headerlink" title="3.0、前提知识"></a>3.0、前提知识</h2><p>STM32F407的定时器通道均可以实现输出比较功能，<font color="#fe2c24"><strong>输出比较功能是利用当前计数值CNT与捕获&#x2F;比较寄存器CRR的值作比较，如果值相等就会产生输出比较结果</strong></font>，此时也会产生输出比较完成中断或DMA请求</p><p>定时器产生的输出比较结果可以输出到比较通道的具体引脚上，也可以直接内部使用不输出到引脚，具体输出的电平由比较模式和输出极性共同决定</p><p>输出比较模式有<font color="#fe2c24"><strong>①冻结：保持当前电平、②匹配时输出有效电平、③匹配时输出无效电平、④匹配时翻转输出电平、⑤强制输出有效电平和⑥强制输出无效电平</strong></font> 六种模式</p><p>有效电平可以手动设置为高&#x2F;低电平</p><h2 id="3-1、CubeMX相关配置"><a href="#3-1、CubeMX相关配置" class="headerlink" title="3.1、CubeMX相关配置"></a>3.1、CubeMX相关配置</h2><h3 id="3-1-0、工程基本配置"><a href="#3-1-0、工程基本配置" class="headerlink" title="3.1.0、工程基本配置"></a>3.1.0、工程基本配置</h3><p>打开STM32CubeMX软件，单击ACCESS TO MCU SELECTOR选择开发板MCU（选择你使用开发板的主控MCU型号），选中MCU型号后单击页面右上角Start Project开始工程，具体如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/8.1.png" width = "700"></div><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/8.2.png" width = "700"></div><p>开始工程之后在配置主页面System Core&#x2F;RCC中配置HSE&#x2F;LSE晶振，在System Core&#x2F;SYS中配置Debug模式，具体如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/8.3.png" width = "700"></div><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/8.4.png" width = "700"></div><p>详细工程建立内容读者可以阅读“<a href="https://www.cnblogs.com/lc-guo/p/17937268">STM32CubeMX教程1 工程建立</a>”</p><h3 id="3-1-1、时钟树配置"><a href="#3-1-1、时钟树配置" class="headerlink" title="3.1.1、时钟树配置"></a>3.1.1、时钟树配置</h3><p>系统时钟使用8MHz外部高速时钟HSE，HCLK、PCLK1和PCLK2均设置为STM32F407能达到的最高时钟频率，具体如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/8.5.png" width = "700"></div><h3 id="3-1-2、外设参数配置"><a href="#3-1-2、外设参数配置" class="headerlink" title="3.1.2、外设参数配置"></a>3.1.2、外设参数配置</h3><p>在Pinout ＆ Configuration页面右边芯片引脚预览Pinout view中找到LED灯的<font color="#fe2c24"><strong>四个控制引脚PD12、PD13、PD14和PD15，依次左键单击并配置其功能为TIM4_CHx</strong></font></p><p>然后在页面左侧功能分类栏目中<font color="#fe2c24"><strong>点开Timers栏目，单击栏目下的TIM4，并将其Channel1~4全部配置为Output Compare CHx</strong></font></p><p>具体配置如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/8.6.png" width = "700"></div><p>然后对启用的TIM4定时器的四个通道参数进行设置，下面对重要参数介绍</p><p><font color="#be191c" style="background: #fef2f0"> Prescaler </font>、<font color="#be191c" style="background: #fef2f0"> Counter Mode </font>、<font color="#be191c" style="background: #fef2f0"> Counter Period </font>和<font color="#be191c" style="background: #fef2f0"> auto-reload preload </font>等计数器参数的设置与之前的实验讲解一致，这里不再赘述，<font color="#fe2c24"><strong>周期设为500ms，不分频不预装载</strong></font></p><p><font color="#be191c" style="background: #fef2f0">Output Compare Channel x &#x2F; Mode </font>（输出比较模式）<font color="#fe2c24"><strong>均选择了Toggle on match</strong></font>，即当比较寄存器CCR的值和当前定时器计数值CNT匹配时翻转通道引脚输出状态</p><p>四个通道从上到下其<font color="#be191c" style="background: #fef2f0"> Pulse </font>（比较寄存器的值CCR）依次为999、1999、2999和3999，<font color="#fe2c24"><strong>这表示在一个时钟500ms周期内，通道1、2、3和4分别在100ms、200ms、300ms和400ms的时候翻转其对应通道引脚的状态</strong></font></p><p>输出比较四个通道<font color="#be191c" style="background: #fef2f0"> Output compare preload </font>（输出比较预装载）均为Disable，<font color="#be191c" style="background: #fef2f0"> CH Polarity </font>（通道输出有效状态）均为高电平，输出比较的其他模式如其字面意思较为好理解，这里不再过多阐述，具体的参数配置如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/8.7.png" width = "700"></div><h3 id="3-1-3、外设中断配置"><a href="#3-1-3、外设中断配置" class="headerlink" title="3.1.3、外设中断配置"></a>3.1.3、外设中断配置</h3><p>在Pinout &amp; Configuration页面左边System Core&#x2F;NVIC中<font color="#fe2c24"><strong>勾选TIM4全局中断</strong></font>，然后选择合适的中断优先级即可</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/8.8.png" width = "700"></div><h2 id="3-2、生成代码"><a href="#3-2、生成代码" class="headerlink" title="3.2、生成代码"></a>3.2、生成代码</h2><h3 id="3-2-0、配置Project-Manager页面"><a href="#3-2-0、配置Project-Manager页面" class="headerlink" title="3.2.0、配置Project Manager页面"></a>3.2.0、配置Project Manager页面</h3><p>单击进入Project Manager页面，在左边Project分栏中修改工程名称、工程目录和工具链，然后在Code Generator中勾选“Gnerate peripheral initialization as a pair of ‘c&#x2F;h’ files per peripheral”，最后单击页面右上角GENERATE CODE生成工程，具体如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/8.9.png" width = "700"></div><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/8.10.png" width = "700"></div><p>详细Project Manager配置内容读者可以阅读“<a href="https://www.cnblogs.com/lc-guo/p/17937268">STM32CubeMX教程1 工程建立</a>”实验3.4.3小节</p><h3 id="3-2-1、外设初始化函数调用流程"><a href="#3-2-1、外设初始化函数调用流程" class="headerlink" title="3.2.1、外设初始化函数调用流程"></a>3.2.1、外设初始化函数调用流程</h3><p>在生成的工程代码主函数main()中调用了MX_TIM4_Init()函数完成了对TIM4基本定时器参数，输出比较通道1&#x2F;2&#x2F;3&#x2F;4参数的配置</p><p>然后在HAL_TIM_OC_Init()函数中调用了HAL_TIM_OC_MspInit()函数对TIM4时钟和中断进行了使能，并对中断优先级进行了配置</p><p>最后在MX_TIM4_Init()函数末尾调用了HAL_TIM_MspPostInit()函数对TIM4的四个输出比较通道引脚进行了复用设置，从而完成了整个初始化过程</p><p>如下图所示为TIM4输出比较初始化的具体函数调用流程</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/8.11.png" width = "700"></div><h3 id="3-2-2、外设中断函数调用流程"><a href="#3-2-2、外设中断函数调用流程" class="headerlink" title="3.2.2、外设中断函数调用流程"></a>3.2.2、外设中断函数调用流程</h3><p>再来看看输出比较中断回调函数流程，使能定时器全局中断后在stm32f4xx_it.c中自动生成了TIM4的中断处理函数TIM4_IRQHandler</p><p>TIM4_IRQHandler调用了HAL库的定时器中断处理函数HAL_TIM_IRQHandler，这个函数负责处理所有的定时器相关中断</p><p>通过判断中断来源及相关寄存器，<font color="#fe2c24"><strong>最终输出比较事件完成的回调函数为HAL_TIM_OC_DelayElapsedCallback()（或者是HAL_TIM_PWM_PulseFinishedCallback()）</strong></font> <em>（注释1）</em>，该函数为虚函数，需要用户重新实现</p><p>如下图所示为TIM4输出比较中断回调的具体函数调用流程</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/8.12.png" width = "700"></div><p>该实验目标不需要动态修改输出比较的参数，因此笔者这里没有重新在tim.c中重新实现该回调函数</p><p><font color="#fe2c24"><strong>需要提醒的是，输出比较事件完成时会同时进入HAL_TIM_OC_DelayElapsedCallback()和HAL_TIM_PWM_PulseFinishedCallback()两个回调函数中，因此请注意此实验确保注释掉PWM输出实验中HAL_TIM_PWM_PulseFinishedCallback函数体内动态修改占空比的代码，否则将达不到预期效果</strong></font></p><h3 id="3-2-3、添加其他必要代码"><a href="#3-2-3、添加其他必要代码" class="headerlink" title="3.2.3、添加其他必要代码"></a>3.2.3、添加其他必要代码</h3><p>最后只需要在主函数中启动定时器 <em>（注释2）</em>，启动输出比较通道就可以实现本实验目标，启动代码如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/8.13.png"></div><p>源代码如下</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs c">HAL_TIM_Base_Start(&amp;htim4);<br>HAL_TIM_OC_Start(&amp;htim4, TIM_CHANNEL_1);<br>HAL_TIM_OC_Start(&amp;htim4, TIM_CHANNEL_2);<br>HAL_TIM_OC_Start_IT(&amp;htim4, TIM_CHANNEL_3);<br>HAL_TIM_OC_Start_IT(&amp;htim4, TIM_CHANNEL_4);<br></code></pre></td></tr></table></figure><h1 id="4、常用函数"><a href="#4、常用函数" class="headerlink" title="4、常用函数"></a>4、常用函数</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">/*启动输出比较通道*/</span><br>HAL_StatusTypeDef <span class="hljs-title function_">HAL_TIM_OC_Start</span><span class="hljs-params">(TIM_HandleTypeDef *htim, <span class="hljs-type">uint32_t</span> Channel)</span><br> <br><span class="hljs-comment">/*停止输出比较通道*/</span><br>HAL_StatusTypeDef <span class="hljs-title function_">HAL_TIM_OC_Stop</span><span class="hljs-params">(TIM_HandleTypeDef *htim, <span class="hljs-type">uint32_t</span> Channel)</span><br> <br><span class="hljs-comment">/*以中断方式启动输出比较通道*/</span><br>HAL_StatusTypeDef <span class="hljs-title function_">HAL_TIM_OC_Start_IT</span><span class="hljs-params">(TIM_HandleTypeDef *htim, <span class="hljs-type">uint32_t</span> Channel)</span><br> <br><span class="hljs-comment">/*停止以中断方式启动的输出比较通道*/</span><br>HAL_StatusTypeDef <span class="hljs-title function_">HAL_TIM_OC_Stop_IT</span><span class="hljs-params">(TIM_HandleTypeDef *htim, <span class="hljs-type">uint32_t</span> Channel)</span><br> <br><span class="hljs-comment">/*输出比较通道完成回调函数*/</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">HAL_TIM_OC_DelayElapsedCallback</span><span class="hljs-params">(TIM_HandleTypeDef *htim)</span><br></code></pre></td></tr></table></figure><h1 id="5、烧录验证"><a href="#5、烧录验证" class="headerlink" title="5、烧录验证"></a>5、烧录验证</h1><p>烧录程序，上电单片机启动后会发现开发板上的四个LED灯，按照绿、橙、红和蓝的顺序依次点亮，然后不断循环，实际现象如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/8.14.gif"></div><p>使用逻辑分析仪监测TIM4的四个输出通道引脚，可以看出TIM4的四个通道输出的电平翻转周期均为500ms，并且4个通道间每个通道均间隔100ms相继翻转状态</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/8.15.png" width = "700"></div><h1 id="6、注释详解"><a href="#6、注释详解" class="headerlink" title="6、注释详解"></a>6、注释详解</h1><p><em>注释1</em>：在生成PWM波的实验中提到其使用的中断回调函数HAL_TIM_PWM_PulseFinishedCallback也可以换成输出比较完成的回调函数HAL_TIM_OC_DelayElapsedCallback，因为笔者发现在HAL库的定时器中断处理函数HAL_TIM_IRQHandler中，这两个函数是同时调用的，也就是说调用函数1，函数2也会跟着调用，所以笔者认为两个都可以使用</p><p><em>注释2</em>：笔者发现在启动输出比较&#x2F;输入捕获&#x2F;PWM输出时，可以不调用定时器启动函数，执行HAL_TIM_xx_Start&#x2F;HAL_TIM_xx_Start_IT函数时会自动启动定时器；另外HAL_TIM_OC_Start&#x2F;HAL_TIM_OC_Start_IT两个输出比较启动函数和HAL_TIM_PWM_Start&#x2F;HAL_TIM_PWM_Start_IT两个PWM输出启动函数，除了函数名和一些注释外其函数体内的代码一模一样</p>]]></content>
    
    
    
    <tags>
      
      <tag>STM32CubeMX</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>STM32CubeMX教程7 TIM 通用定时器 - 输入捕获</title>
    <link href="/2024/01/26/STM32CubeMX%E6%95%99%E7%A8%8B7-TIM-%E9%80%9A%E7%94%A8%E5%AE%9A%E6%97%B6%E5%99%A8-%E8%BE%93%E5%85%A5%E6%8D%95%E8%8E%B7/"/>
    <url>/2024/01/26/STM32CubeMX%E6%95%99%E7%A8%8B7-TIM-%E9%80%9A%E7%94%A8%E5%AE%9A%E6%97%B6%E5%99%A8-%E8%BE%93%E5%85%A5%E6%8D%95%E8%8E%B7/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>STM32CubeMX教程6 TIM 通用定时器 - 生成PWM波</title>
    <link href="/2024/01/26/STM32CubeMX%E6%95%99%E7%A8%8B6-TIM-%E9%80%9A%E7%94%A8%E5%AE%9A%E6%97%B6%E5%99%A8-%E7%94%9F%E6%88%90PWM%E6%B3%A2/"/>
    <url>/2024/01/26/STM32CubeMX%E6%95%99%E7%A8%8B6-TIM-%E9%80%9A%E7%94%A8%E5%AE%9A%E6%97%B6%E5%99%A8-%E7%94%9F%E6%88%90PWM%E6%B3%A2/</url>
    
    <content type="html"><![CDATA[<h1 id="1、准备材料"><a href="#1、准备材料" class="headerlink" title="1、准备材料"></a>1、准备材料</h1><p>开发板（<a href="https://www.st.com/en/evaluation-tools/stm32f4discovery.html">STM32F407G-DISC1</a>）</p><p>STM32CubeMX软件（<a href="https://www.st.com/en/development-tools/stm32cubemx.html">Version 6.10.0</a>）</p><p>keil µVision5 IDE（<a href="https://www.keil.com/download/product/">MDK-Arm</a>）</p><p><a href="https://www.st.com/zh/development-tools/stsw-link009.html">ST-LINK&#x2F;V2驱动</a></p><p>逻辑分析仪<a href="https://github.com/wuxx/nanoDLA">nanoDLA</a></p><h1 id="2、实验目标"><a href="#2、实验目标" class="headerlink" title="2、实验目标"></a>2、实验目标</h1><p>使用STM32CubeMX软件配置STM32F407<font color="#fe2c24"><strong>通用定时器生成可变占空比PWM波形，并将其输出到LED灯引脚实现呼吸灯效果</strong></font></p><h1 id="3、实验流程"><a href="#3、实验流程" class="headerlink" title="3、实验流程"></a>3、实验流程</h1><h2 id="3-0、前提知识"><a href="#3-0、前提知识" class="headerlink" title="3.0、前提知识"></a>3.0、前提知识</h2><p>STM32F407有10个通用定时器，其中TIM2、TIM3、TIM4和TIM5有4个捕获&#x2F;比较通道，TIM9、TIM12两个定时器有2个捕获&#x2F;比较通道，剩下的TIM10、TIM11、TIM13和TIM14只有一个捕获&#x2F;比较通道</p><p>只有一个捕获&#x2F;比较通道的通用定时器在CubeMX配置页面无“Slave Mode”和“Trigger Source”的选项，也不能联合通道，相较于拥有多个捕获&#x2F;比较通道的定时器较为简单，这10个通用定时器具体特性如下表所示 <em>（注释1）</em></p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/6.1.png" width = "700"></div><p><font color="#fe2c24"><strong>对于通用定时器来说，其每个通道均可以实现 ① 输入捕获、② 输出比较和 ③ PWM波生成三种功能</strong></font>，接下来我将分三个实验来分别介绍通用定时器的这三个功能，本小节只介绍通用定时器如何生成PWM波</p><p>在“<a href="https://www.cnblogs.com/lc-guo/p/17937704">STM32CubeMX教程2 GPIO输出 - 点亮LED灯</a>”实验中我们介绍了如何使用GPIO输出点亮开发板上的LED灯，从而知道了开发板上控制LED灯的四个引脚分别为PD12、PD13、PD14和PD15</p><p>这四个引脚刚好可以配置为通用定时器TIM4的四个输出通道，<font color="#fe2c24"><strong>因此接下来我们将配置这四个引脚为通用定时器TIM4的4个通道的PWM输出引脚</strong></font></p><h2 id="3-1、CubeMX相关配置"><a href="#3-1、CubeMX相关配置" class="headerlink" title="3.1、CubeMX相关配置"></a>3.1、CubeMX相关配置</h2><h3 id="3-1-0、工程基本配置"><a href="#3-1-0、工程基本配置" class="headerlink" title="3.1.0、工程基本配置"></a>3.1.0、工程基本配置</h3><p>打开STM32CubeMX软件，单击ACCESS TO MCU SELECTOR选择开发板MCU（选择你使用开发板的主控MCU型号）选中MCU型号后单击页面右上角Start Project开始工程，具体如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/6.2.png" width = "700"></div><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/6.3.png" width = "700"></div><p>开始工程之后在配置主页面System Core&#x2F;RCC中配置HSE&#x2F;LSE晶振，在System Core&#x2F;SYS中配置Debug模式，具体如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/6.4.png" width = "700"></div><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/6.5.png" width = "700"></div><p>详细工程建立内容读者可以阅读“<a href="https://www.cnblogs.com/lc-guo/p/17937268">STM32CubeMX教程1 工程建立</a>”</p><h3 id="3-1-1、时钟树配置"><a href="#3-1-1、时钟树配置" class="headerlink" title="3.1.1、时钟树配置"></a>3.1.1、时钟树配置</h3><p>系统时钟使用8MHz外部高速时钟HSE，HCLK、PCLK1和PCLK2均设置为STM32F407能达到的最高时钟频率，具体如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/6.6.png" width = "700"></div><h3 id="3-1-2、外设参数配置"><a href="#3-1-2、外设参数配置" class="headerlink" title="3.1.2、外设参数配置"></a>3.1.2、外设参数配置</h3><p>在Pinout ＆ Configuration页面右边芯片引脚预览Pinout view中找到LED灯的四个控制引脚PD12、PD13、PD14和PD15，<font color="#fe2c24"><strong>依次左键单击并配置其功能为TIM4_CHx</strong></font></p><p>然后在页面左侧功能分类栏目中点开Timers栏目，<font color="#fe2c24"><strong>单击栏目下的TIM4，并将其Channel1~4全部配置为PWM Generation CHx</strong></font></p><p>具体配置如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/6.7.png" width = "700"></div><p>然后对启用的TIM4定时器的四个通道参数进行设置，下面对重要参数简单介绍</p><p><font color="#be191c" style="background: #fef2f0"> Prescaler </font>：该参数为时钟源预分频系数，由于TIM4时钟来源为APB1 Timer clocks (MHz)，笔者这里为84MHz，因此经过8399+1&#x3D;8400次分频后的频率为10KHz；</p><p><font color="#be191c" style="background: #fef2f0"> Counter Mode </font>：计数模式，可以选择向上、向下、中心对齐等计数方式；</p><p><font color="#be191c" style="background: #fef2f0"> Counter Period </font>：自动重装寄存器ARR值，该参数决定了生成PWM的周期，这里设置为199，表示周期为20ms，注意这里周期不能太长 <em>（注释2）</em>；</p><p><font color="#be191c" style="background: #fef2f0"> auto-reload preload </font>：预装载自动重装，设置为Enable后，当修改ARR的值时会在下一个UEV事件生效，否则表示不适用预装载，修改其值会立即生效；</p><p><font color="#be191c" style="background: #fef2f0"> Mode </font>：可以选择模式1&#x2F;模式2，这两种模式区别为生成的PWM波形不一样，选择PWM模式1且向上计数时，当Pulse值&lt;计数值ARR时此时通道输出有效状态，否则为无效状态，当选择PWM模式2时刚好与模式1相反。如下面两个PWM波形中，上图为采用PWM模式1，通道极性为高电平时产生的PWM波，下图为采用PWM模式2，通道极性为高时产生的PWM波；</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/6.8.png" width = "700"></div><p><font color="#be191c" style="background: #fef2f0"> Pulse </font>：即捕获&#x2F;比较寄存器CRR的值，通过设置该参数可以决定PWM的脉冲宽度，这里设置为0，因为程序中可以动态修改该参数；</p><p><font color="#be191c" style="background: #fef2f0"> Output compare preload </font>：输出比较预装载，设置为Enable后，当修改Pulse的值时会在下一个UEV事件生效，否则会立即生效；</p><p><font color="#be191c" style="background: #fef2f0"> CH Polarity </font>：通道极性，设置通道有效状态；</p><p>如下图所示为具体参数设置</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/6.9.png" width = "700"></div><h3 id="3-1-3、外设中断配置"><a href="#3-1-3、外设中断配置" class="headerlink" title="3.1.3、外设中断配置"></a>3.1.3、外设中断配置</h3><p>在Pinout &amp; Configuration页面左边System Core&#x2F;NVIC中<font color="#fe2c24"><strong>勾选TIM4全局中断</strong></font>，然后选择合适的中断优先级即可</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/6.10.png" width = "700"></div><h2 id="3-2、生成代码"><a href="#3-2、生成代码" class="headerlink" title="3.2、生成代码"></a>3.2、生成代码</h2><h3 id="3-2-0、配置Project-Manager页面"><a href="#3-2-0、配置Project-Manager页面" class="headerlink" title="3.2.0、配置Project Manager页面"></a>3.2.0、配置Project Manager页面</h3><p>单击进入Project Manager页面，在左边Project分栏中修改工程名称、工程目录和工具链，然后在Code Generator中勾选“Gnerate peripheral initialization as a pair of ‘c&#x2F;h’ files per peripheral”，最后单击页面右上角GENERATE CODE生成工程，具体如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/6.11.png" width = "700"></div><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/6.12.png" width = "700"></div><p>详细Project Manager配置内容读者可以阅读“<a href="https://www.cnblogs.com/lc-guo/p/17937268">STM32CubeMX教程1 工程建立</a>”实验3.4.3小节</p><h3 id="3-2-1、外设初始化调用流程"><a href="#3-2-1、外设初始化调用流程" class="headerlink" title="3.2.1、外设初始化调用流程"></a>3.2.1、外设初始化调用流程</h3><p>在工程代码主函数main()中调用MX_TIM4_Init()函数对定时器TIM4计数器参数及四个 PWM通道参数进行了配置</p><p>在该MX_TIM4_Init()函数中调用了HAL_TIM_PWM_Init()对定时器PWM输出进行了初始化</p><p>然后在HAL_TIM_PWM_Init()函数中调用了HAL_TIM_PWM_MspInit()函数对TIM4时钟和中断设置&#x2F;使能</p><p>如下图所示为具体的TIM4四通道PWM输出初始化调用流程</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/6.13.png" width = "700"></div><h3 id="3-2-2、外设中断调用流程"><a href="#3-2-2、外设中断调用流程" class="headerlink" title="3.2.2、外设中断调用流程"></a>3.2.2、外设中断调用流程</h3><p>勾选了TIM4的全局中断之后，在工程文件stm32f4xx_it.c中生成了TIM4全局中断服务函数TIM4_IRQHandler()</p><p>该函数调用了HAL库的定时器中断统一处理函数HAL_TIM_IRQHandler()，<font color="#fe2c24"><strong>最终调用PWM脉宽调制完成回调函数 HAL_TIM_PWM_PulseFinishedCallback()，该函数为虚函数</strong></font></p><p>如下图所示为TIM4四通道PWM输出中断调用流程</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/6.14.png" width = "700"></div><h3 id="3-2-3、添加其他必要代码"><a href="#3-2-3、添加其他必要代码" class="headerlink" title="3.2.3、添加其他必要代码"></a>3.2.3、添加其他必要代码</h3><p>在tim.c中重新实现PWM脉宽调制完成回调函数HAL_TIM_PWM_PulseFinishedCallback()，在该回调函数中实现了对四个通道PWM的占空比重新调节的目的，即重新配置参数里的Pulse，实现了从最低占空比逐渐到最大占空比然后再逐渐减少至最低占空比的无限循环，具体代码如下所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/6.15.png" width = "700"></div><p>源代码如下</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-type">uint16_t</span> pulseWidth=<span class="hljs-number">0</span>;<br><span class="hljs-type">uint8_t</span> dirInc=<span class="hljs-number">1</span>;<br><span class="hljs-type">void</span> <span class="hljs-title function_">HAL_TIM_PWM_PulseFinishedCallback</span><span class="hljs-params">(TIM_HandleTypeDef *htim)</span><br>&#123;<br>    <span class="hljs-keyword">if</span>(htim-&gt;Instance != TIM4)<br>        <span class="hljs-keyword">return</span>;<br> <br>    <span class="hljs-keyword">if</span>(dirInc == <span class="hljs-number">1</span>)<br>    &#123;<br>        pulseWidth ++;<br>        <span class="hljs-keyword">if</span>(pulseWidth &gt;= <span class="hljs-number">195</span>)<br>        &#123;<br>            pulseWidth = <span class="hljs-number">195</span>;<br>            dirInc = <span class="hljs-number">0</span>;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">else</span><br>    &#123;<br>        pulseWidth --;<br>        <span class="hljs-keyword">if</span>(pulseWidth &lt;= <span class="hljs-number">5</span>)<br>        &#123;<br>            pulseWidth = <span class="hljs-number">5</span>;<br>            dirInc = <span class="hljs-number">1</span>;<br>        &#125;<br>    &#125;<br>    __HAL_TIM_SET_COMPARE(&amp;htim4, TIM_CHANNEL_1, pulseWidth);<br>    __HAL_TIM_SET_COMPARE(&amp;htim4, TIM_CHANNEL_2, pulseWidth);<br>    __HAL_TIM_SET_COMPARE(&amp;htim4, TIM_CHANNEL_3, pulseWidth);<br>    __HAL_TIM_SET_COMPARE(&amp;htim4, TIM_CHANNEL_4, pulseWidth);<br>&#125;<br></code></pre></td></tr></table></figure><p>最后在主函数中以中断方式启动生成PWM即可，如下所示为启动代码</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/6.16.png" width = "700"></div><h1 id="4、常用函数"><a href="#4、常用函数" class="headerlink" title="4、常用函数"></a>4、常用函数</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">/*启动定时器*/</span><br>HAL_StatusTypeDef <span class="hljs-title function_">HAL_TIM_Base_Start</span><span class="hljs-params">(TIM_HandleTypeDef *htim)</span><br> <br><span class="hljs-comment">/*停止定时器*/</span><br>HAL_StatusTypeDef <span class="hljs-title function_">HAL_TIM_Base_Stop</span><span class="hljs-params">(TIM_HandleTypeDef *htim)</span><br> <br><span class="hljs-comment">/*启动PWM输出*/</span><br>HAL_StatusTypeDef <span class="hljs-title function_">HAL_TIM_PWM_Start</span><span class="hljs-params">(TIM_HandleTypeDef *htim, <span class="hljs-type">uint32_t</span> Channel)</span><br> <br><span class="hljs-comment">/*停止PWM输出*/</span><br>HAL_StatusTypeDef <span class="hljs-title function_">HAL_TIM_PWM_Stop</span><span class="hljs-params">(TIM_HandleTypeDef *htim, <span class="hljs-type">uint32_t</span> Channel)</span><br> <br><span class="hljs-comment">/*以中断方式启动定时器*/</span><br>HAL_StatusTypeDef <span class="hljs-title function_">HAL_TIM_Base_Start_IT</span><span class="hljs-params">(TIM_HandleTypeDef *htim)</span><br> <br><span class="hljs-comment">/*以中断方式停止定时器*/</span><br>HAL_StatusTypeDef <span class="hljs-title function_">HAL_TIM_Base_Stop_IT</span><span class="hljs-params">(TIM_HandleTypeDef *htim)</span><br> <br><span class="hljs-comment">/*以中断方式启动PWM输出*/</span><br>HAL_StatusTypeDef <span class="hljs-title function_">HAL_TIM_PWM_Start_IT</span><span class="hljs-params">(TIM_HandleTypeDef *htim, <span class="hljs-type">uint32_t</span> Channel)</span><br> <br><span class="hljs-comment">/*以中断方式停止PWM输出*/</span><br>HAL_StatusTypeDef <span class="hljs-title function_">HAL_TIM_PWM_Stop_IT</span><span class="hljs-params">(TIM_HandleTypeDef *htim, <span class="hljs-type">uint32_t</span> Channel)</span><br> <br><span class="hljs-comment">/*PWM输出完毕回调函数*/</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">HAL_TIM_PWM_PulseFinishedCallback</span><span class="hljs-params">(TIM_HandleTypeDef *htim)</span><br> <br><span class="hljs-comment">/*设置PWM占空比函数*/</span><br>__<span class="hljs-title function_">HAL_TIM_SET_COMPARE</span><span class="hljs-params">(__HANDLE__, __CHANNEL__, __COMPARE__)</span><br></code></pre></td></tr></table></figure><h1 id="5、烧录验证"><a href="#5、烧录验证" class="headerlink" title="5、烧录验证"></a>5、烧录验证</h1><p>烧录程序，会发现开发板上电后四个LED灯亮度由最暗到最亮然后从最亮再到最暗循环往复，实现呼吸灯的效果</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/6.17.gif"></div><p>使用逻辑分析仪监测TIM4的四个通道输出引脚状态，可以看出TIM4的四个通道输出的PWM波型周期均为20ms，并且占空比不断地在发生变化</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/6.18.png" width = "700"></div><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/6.19.png" width = "700"></div><h1 id="6、注释详解"><a href="#6、注释详解" class="headerlink" title="6、注释详解"></a>6、注释详解</h1><p><em>注释1</em>：图片来源 <a href="https://www.epubit.com/bookDetails?id=UB77e58e05a5ea9">STM32Cube高效开发教程（基础篇）</a> 9.1小节</p><p><em>注释2</em>：这里的周期设置为20ms，也即频率为50Hz，人眼睛对于80Hz以上刷新频率完全没有闪烁感，因此如果你实现LED呼吸灯效果有闪烁情况的话，频率不能设置的太低</p>]]></content>
    
    
    
    <tags>
      
      <tag>STM32CubeMX</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>STM32CubeMX教程5 TIM 定时器概述及基本定时器</title>
    <link href="/2024/01/26/STM32CubeMX%E6%95%99%E7%A8%8B5-TIM-%E5%AE%9A%E6%97%B6%E5%99%A8%E6%A6%82%E8%BF%B0%E5%8F%8A%E5%9F%BA%E6%9C%AC%E5%AE%9A%E6%97%B6%E5%99%A8/"/>
    <url>/2024/01/26/STM32CubeMX%E6%95%99%E7%A8%8B5-TIM-%E5%AE%9A%E6%97%B6%E5%99%A8%E6%A6%82%E8%BF%B0%E5%8F%8A%E5%9F%BA%E6%9C%AC%E5%AE%9A%E6%97%B6%E5%99%A8/</url>
    
    <content type="html"><![CDATA[<h1 id="1、准备材料"><a href="#1、准备材料" class="headerlink" title="1、准备材料"></a>1、准备材料</h1><p>开发板（<a href="https://www.st.com/en/evaluation-tools/stm32f4discovery.html">STM32F407G-DISC1</a>）</p><p>STM32CubeMX软件（<a href="https://www.st.com/en/development-tools/stm32cubemx.html">Version 6.10.0</a>）</p><p>keil µVision5 IDE（<a href="https://www.keil.com/download/product/">MDK-Arm</a>）</p><p><a href="https://www.st.com/zh/development-tools/stsw-link009.html">ST-LINK&#x2F;V2驱动</a></p><p>逻辑分析仪<a href="https://github.com/wuxx/nanoDLA">nanoDLA</a></p><h1 id="2、实验目标"><a href="#2、实验目标" class="headerlink" title="2、实验目标"></a>2、实验目标</h1><p>使用STM32CubeMX软件配置STM32F407开发板<font color="#fe2c24"><strong>使用基本定时器TIM6实现每500ms控制绿灯状态变化一次，基本定时器TIM7实现每1s控制红灯状态变化一次</strong></font></p><h1 id="3、定时器概述"><a href="#3、定时器概述" class="headerlink" title="3、定时器概述"></a>3、定时器概述</h1><p>STM32F407拥有2个基础定时器、10个通用定时器和2个高级定时器，14个定时器全部挂载在APB1和APB2时钟总线上，APB2时钟总线时钟频率最高可达84MHz，APB1时钟总线时钟频率最高可达42MHz，除TIM2和TIM5为32位外，其余定时器全部为16位，其结构框图如下图所示 <em>（注释1）</em></p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/5.1.png" width = "700"></div><p>​不同的定时器具有不同的特性，有些定时器的计数器长度为16位，有些则为32位；有些定时器可以递增、递减或递增&#x2F;递减计数，但有些定时器只能递增计数；有些定时器可以产生DMA请求，有些则不可以；另外定时器捕获&#x2F;比较通道数量也不一样；具体特性区别请看下表 <em>（注释2）</em></p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/5.2.png" width = "700"></div><h1 id="​4、实验流程"><a href="#​4、实验流程" class="headerlink" title="​4、实验流程"></a>​4、实验流程</h1><h2 id="4-0、前提知识"><a href="#4-0、前提知识" class="headerlink" title="4.0、前提知识"></a>4.0、前提知识</h2><p>基本定时器由TIM6和TIM7组成，计数器为16位，内部结构较为简单，只有定时器的基本功能，可以做定时或驱动DAC，<font color="#fe2c24"><strong>本实验暂不讨论DAC，只用定时功能</strong></font>，如下图所示为基本定时器框架 <em>（注释3）</em></p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/5.3.png" width = "700"></div><p><font color="#fe2c24"><strong>​基本定时器的时钟来源为APB1 Timer clocks</strong></font>，当通过控制器启动基本定时器TIM6&#x2F;7时，时钟信号经过PSC预分频器将时钟分频，然后以分频后的时钟频率增加计数器的值，当计数器达到自动重载寄存器设置的值之后，产生溢出</p><h2 id="4-1、CubeMX相关配置"><a href="#4-1、CubeMX相关配置" class="headerlink" title="4.1、CubeMX相关配置"></a>4.1、CubeMX相关配置</h2><h3 id="4-1-0、工程基本配置"><a href="#4-1-0、工程基本配置" class="headerlink" title="4.1.0、工程基本配置"></a>4.1.0、工程基本配置</h3><p>打开STM32CubeMX软件，单击ACCESS TO MCU SELECTOR选择开发板MCU（选择你使用开发板的主控MCU型号），选中MCU型号后单击页面右上角Start Project开始工程，具体如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/5.4.png" width = "700"></div><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/5.5.png" width = "700"></div><p>​开始工程之后在配置主页面System Core&#x2F;RCC中配置HSE&#x2F;LSE晶振，在System Core&#x2F;SYS中配置Debug模式，具体如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/5.6.png" width = "700"></div><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/5.7.png" width = "700"></div><p>​详细工程建立内容读者可以阅读“<a href="https://www.cnblogs.com/lc-guo/p/17937268">STM32CubeMX教程1 工程建立</a>”</p><h3 id="4-1-1、时钟树配置"><a href="#4-1-1、时钟树配置" class="headerlink" title="4.1.1、时钟树配置"></a>4.1.1、时钟树配置</h3><p>基本定时器涉及到定时时间的问题，而TIM6&#x2F;7的时钟来源自APB1 Timer clocks，因此需要先知道APB1 Timer clocks的频率，才可以计算基本定时器的溢出时间</p><p>如下图所示，时钟树上所有总线频率均设置为了STM32F4能达到的最高频率，<font color="#fe2c24"><strong>此时APB1 Timer clocks&#x3D;84MHz</strong></font></p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/5.8.png" width = "700"></div><h3 id="4-1-2、外设参数配置"><a href="#4-1-2、外设参数配置" class="headerlink" title="4.1.2、外设参数配置"></a>4.1.2、外设参数配置</h3><p>在Pinout ＆ Configuration页面左侧功能分类栏目中点开Timers栏目，单击栏目下的TIM6和TIM7</p><p>在页面中间TIM6&#x2F;7 Mode and Configuration 中勾选Activated激活基本定时器，<font color="#fe2c24"><strong>One Pulse Mode为单次定时模式，勾选该模式则定时器只触发一次，默认定时器为连续触发</strong></font>，触发完一次后自动重载ARR中设置的值重新计数</p><p>在页面中间Configuration栏中可设置基本定时器参数，包括<font color="#be191c" style="background: #fef2f0"> Prescaler </font>（预分频系数）、<font color="#be191c" style="background: #fef2f0"> Counter Mode </font>（计数模式）和<font color="#be191c" style="background: #fef2f0"> Counter Period </font>（ARR寄存器的值）通过这些参数的设置可以决定基本定时器的溢出时间</p><p><font color="#fe2c24"><strong>APB1 Timer clocks&#x3D;84MHz，PSC&#x3D;8399，ARR&#x3D;4999，此时可计算溢出时间为(PSC+1)(ARR+1)&#x2F;APB1 Timer clocks&#x3D;0.5秒&#x3D;500毫秒</strong></font>，则每500ms定时器产生一次溢出，ARR设置为9999则定时器1s溢出一次</p><p><font color="#be191c" style="background: #fef2f0"> auto-reload preload </font>：可以选择使能或不使能，如果不使能该参数，则在使用__HAL_TIM_SET_AUTORELOAD()函数动态修改基本定时器ARR参数值时，修改的值会立马生效；而如果使能该参数，则修改的值会在当前计数溢出之后下次得到修改</p><p><font color="#be191c" style="background: #fef2f0"> Trigger Output (TRGO) Parameters </font>：一般是用来设置用作其他外设的触发源的，比如将Trigger Event Selection选择为Update Event，然后在其他外设比如ADC中配置外部触发源时选择该定时器的触发事件（如果可以的话），这样在定时器产生Update Event时就可以启动外设，实现用定时器来控制外设启动的功能</p><p>上述配置如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/5.9.png" width = "700"></div><h3 id="4-1-3、外设中断配置"><a href="#4-1-3、外设中断配置" class="headerlink" title="4.1.3、外设中断配置"></a>4.1.3、外设中断配置</h3><p><font color="#fe2c24"><strong>基本定时器的触发有三种模式 ① 轮询方式、② 中断方式和③ DMA方式，这里只介绍前两种方式</strong></font></p><p>① 对于轮询方式，当前设置已经足够，只需要在生成的程序中使用HAL_TIM_Base_Start(&amp;htim6)启动基本定时器，然后不断轮询计数值或UEV事件标志来判断是否发生了计数溢出</p><p>② 中断方式是基本定时器最常用的方式，在Pinout ＆ Configuration页面左侧功能分类栏目中点开NVIC栏目，然后选择合适的中断优先级并勾选基本定时器6和7的中断使能</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/5.10.png" width = "700"></div><h2 id="4-2、生成代码"><a href="#4-2、生成代码" class="headerlink" title="4.2、生成代码"></a>4.2、生成代码</h2><h3 id="4-2-0、配置Project-Manager页面"><a href="#4-2-0、配置Project-Manager页面" class="headerlink" title="4.2.0、配置Project Manager页面"></a>4.2.0、配置Project Manager页面</h3><p>单击进入Project Manager页面，在左边Project分栏中修改工程名称、工程目录和工具链，然后在Code Generator中勾选“Gnerate peripheral initialization as a pair of ‘c&#x2F;h’ files per peripheral”，最后单击页面右上角GENERATE CODE生成工程，具体如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/5.11.png" width = "700"></div><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/5.12.png" width = "700"></div><p>详细Project Manager配置内容读者可以阅读“<a href="https://www.cnblogs.com/lc-guo/p/17937268">STM32CubeMX教程1 工程建立</a>”实验3.4.3小节</p><h3 id="4-2-1、外设初始化调用流程"><a href="#4-2-1、外设初始化调用流程" class="headerlink" title="4.2.1、外设初始化调用流程"></a>4.2.1、外设初始化调用流程</h3><p>在工程代码主函数main()中调用MX_TIM6_Init()函数对基本定时器TIM6参数进行了配置</p><p>在该MX_TIM6_Init()函数中调用了HAL_TIM_Base_Init()对定时器进行了初始化</p><p>然后在HAL_TIM_Base_Init()函数中调用了HAL_TIM_Base_MspInit()函数对TIM6时钟和中断设置&#x2F;使能</p><p>TIM7初始化流程类似，具体定时器TIM6初始化流程如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/5.13.png" width = "700"></div><h3 id="4-2-2、外设中断调用流程"><a href="#4-2-2、外设中断调用流程" class="headerlink" title="4.2.2、外设中断调用流程"></a>4.2.2、外设中断调用流程</h3><p>激活了基本定时器并启动TIM6&#x2F;7全局中断之后，会在stm32f4xx_it.c中新增TIM6&#x2F;7的中断服务函数TIM6_DAC_IRQHandler()和TIM7_IRQHandler()</p><p>该函数均调用HAL库的定时器中断统一处理函数HAL_TIM_IRQHandler()，该函数通过一系列的判断最终得出基本定时器目的为周期回调 <em>（注释4）</em>，<font color="#fe2c24"><strong>因此最终调用周期回调函数HAL_TIM_PeriodElapsedCallback()，该函数为虚函数</strong></font></p><p>TIM7中断调用流程类似，具体定时器TIM6中断调用流程如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/5.14.png" width = "700"></div><h3 id="4-2-3、添加其他必要代码"><a href="#4-2-3、添加其他必要代码" class="headerlink" title="4.2.3、添加其他必要代码"></a>4.2.3、添加其他必要代码</h3><p>重新在tim.c中实现周期回调函数HAL_TIM_PeriodElapsedCallback()，当定时器TIM6溢出则翻转GREEN_LED引脚状态，当定时器TIM7溢出则翻转RED_LED引脚状态，具体代码如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/5.15.png" width = "700"></div><p>​源代码如下</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">/*基本定时器周期回调函数*/</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">HAL_TIM_PeriodElapsedCallback</span><span class="hljs-params">(TIM_HandleTypeDef *htim)</span><br>&#123;<br>    <span class="hljs-keyword">if</span>(htim == &amp;htim6)<br>    &#123;<br>        HAL_GPIO_TogglePin(GREEN_LED_GPIO_Port, GREEN_LED_Pin) ;<br>    &#125;<br> <br>    <span class="hljs-keyword">if</span>(htim == &amp;htim7)<br>    &#123;<br>        HAL_GPIO_TogglePin(RED_LED_GPIO_Port, RED_LED_Pin) ;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>在主函数中以中断方式启动基本定时器TIM6&#x2F;7，具体代码如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/5.16.png" ></div><h1 id="5、常用函数"><a href="#5、常用函数" class="headerlink" title="5、常用函数"></a>5、常用函数</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">/*以轮询工作方式启动定时器*/</span><br>HAL_StatusTypeDef <span class="hljs-title function_">HAL_TIM_Base_Start</span><span class="hljs-params">(TIM_HandleTypeDef *htim)</span><br> <br><span class="hljs-comment">/*停止轮询工作方式的定时器*/</span><br>HAL_StatusTypeDef <span class="hljs-title function_">HAL_TIM_Base_Stop</span><span class="hljs-params">(TIM_HandleTypeDef *htim)</span><br> <br><span class="hljs-comment">/*以中断工作方式启动定时器*/</span><br>HAL_StatusTypeDef <span class="hljs-title function_">HAL_TIM_Base_Start_IT</span><span class="hljs-params">(TIM_HandleTypeDef *htim)</span><br> <br><span class="hljs-comment">/*停止中断工作方式的定时器*/</span><br>HAL_StatusTypeDef <span class="hljs-title function_">HAL_TIM_Base_Stop_IT</span><span class="hljs-params">(TIM_HandleTypeDef *htim)</span><br> <br><span class="hljs-comment">/*定时器周期回调子函数*/</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">HAL_TIM_PeriodElapsedCallback</span><span class="hljs-params">(TIM_HandleTypeDef *htim)</span><br></code></pre></td></tr></table></figure><h1 id="6、烧录验证"><a href="#6、烧录验证" class="headerlink" title="6、烧录验证"></a>6、烧录验证</h1><p>烧录程序，开发板上电后观察现象为绿灯每隔500ms状态改变一次，红灯每隔1s状态改变一次</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/5.17.gif"></div><p>使用逻辑分析仪监测PD12&#x2F;14引脚状态，可以看出TIM6每500ms翻转一次PD12引脚状态，TIM7每1000ms翻转一次PD14引脚状态</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/5.18.png" width = "700"></div><h1 id="7、注释详解"><a href="#7、注释详解" class="headerlink" title="7、注释详解"></a>7、注释详解</h1><p><em>注释1</em>：图片来源STM32F407VGT6 Datasheet DS8626</p><p><em>注释2</em>：图片来源 <a href="https://www.cnblogs.com/schips/p/12427900.html">STM32 CubeMX 学习：003-定时器（其原表有错误）</a></p><p><em>注释3</em>：图片来源STM32F4xx中文参考手册</p><p><em>注释4</em>：具体过程请参看 HAL_TIM_IRQHandler(TIM_HandleTypeDef *htim) 函数详解</p>]]></content>
    
    
    
    <tags>
      
      <tag>STM32CubeMX</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>STM32CubeMX教程4 EXTI 按键外部中断</title>
    <link href="/2024/01/26/STM32CubeMX%E6%95%99%E7%A8%8B4-EXTI-%E6%8C%89%E9%94%AE%E5%A4%96%E9%83%A8%E4%B8%AD%E6%96%AD/"/>
    <url>/2024/01/26/STM32CubeMX%E6%95%99%E7%A8%8B4-EXTI-%E6%8C%89%E9%94%AE%E5%A4%96%E9%83%A8%E4%B8%AD%E6%96%AD/</url>
    
    <content type="html"><![CDATA[<h1 id="1、准备材料"><a href="#1、准备材料" class="headerlink" title="1、准备材料"></a>1、准备材料</h1><p>开发板（<a href="https://www.st.com/en/evaluation-tools/stm32f4discovery.html">STM32F407G-DISC1</a>）</p><p>STM32CubeMX软件（<a href="https://www.st.com/en/development-tools/stm32cubemx.html">Version 6.10.0</a>）</p><p>keil µVision5 IDE（<a href="https://www.keil.com/download/product/">MDK-Arm</a>）</p><p><a href="https://www.st.com/zh/development-tools/stsw-link009.html">ST-LINK&#x2F;V2驱动</a></p><h1 id="2、实验目标"><a href="#2、实验目标" class="headerlink" title="2、实验目标"></a>2、实验目标</h1><p>使用STM32CubeMX软件配置STM32F407开发板<font color="#fe2c24"><strong>通过用户按键产生外部中断</strong></font>，然后在中断中翻转绿色LED灯的状态</p><h1 id="3、中断系统概述"><a href="#3、中断系统概述" class="headerlink" title="3、中断系统概述"></a>3、中断系统概述</h1><h2 id="3-1、中断向量表"><a href="#3-1、中断向量表" class="headerlink" title="3.1、中断向量表"></a>3.1、中断向量表</h2><p>STM32F4系列有10个系统中断和82个可屏蔽的外部中断 <em>（注释1）</em>，除系统Reset中断外每个中断均有对应的中断服务函数，如下图所示为中断向量表</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/4.1.png" width = "700"></div><h2 id="3-2、中断优先级"><a href="#3-2、中断优先级" class="headerlink" title="3.2、中断优先级"></a>3.2、中断优先级</h2><p>嵌套向量中断控制器（NVIC）采用4位二进制数表示中断优先级，<font color="#fe2c24"><strong>这4位二进制数表示的中断优先级又分为了抢占优先级和次优先级</strong></font>，其中根据抢占优先级所使用的二进制位数分成了5个组，分为NVIC_PRIORITYGROUP_0 ~ NVIC_PRIORITYGROUP_4，分别表示抢占优先级使用0~4位二进制数表示，具体规则如下几点所述：</p><ol><li>高抢占优先级的中断可以打断低抢占优先级的中断</li><li>抢占优先级和次优先级均相同的两个中断谁先发生谁就先执行</li><li>抢占优先级相同但次优先级不同的两个中断，后触发的中断需要等待先触发的中断执行完毕才可以执行</li></ol><h1 id="4、实验流程"><a href="#4、实验流程" class="headerlink" title="4、实验流程"></a>4、实验流程</h1><h2 id="4-0、前提知识"><a href="#4-0、前提知识" class="headerlink" title="4.0、前提知识"></a>4.0、前提知识</h2><p>STM32F407一共有23个外部中断，其中包含16个外部中断（EXTI0~EXTI15）和7个对应不同的事件的中断，如下表所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/4.2.png" width = "700"></div><p>每一组GPIO的0号引脚均可以作为EXTI0的输入，同理，每一组GPIO的15号引脚均可以作为EXTI15的输入，具体映射如下图所示 <em>（注释2）</em></p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/4.3.png" width = "700"></div><h2 id="4-1、CubeMX相关配置"><a href="#4-1、CubeMX相关配置" class="headerlink" title="4.1、CubeMX相关配置"></a>4.1、CubeMX相关配置</h2><h3 id="4-1-0、工程基本配置"><a href="#4-1-0、工程基本配置" class="headerlink" title="4.1.0、工程基本配置"></a>4.1.0、工程基本配置</h3><p>打开STM32CubeMX软件，单击ACCESS TO MCU SELECTOR选择开发板MCU（选择你使用开发板的主控MCU型号），选中MCU型号后单击页面右上角Start Project开始工程，具体如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/4.4.png" width = "700"></div><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/4.5.png" width = "700"></div><p>开始工程之后在配置主页面System Core&#x2F;RCC中配置HSE&#x2F;LSE晶振，在System Core&#x2F;SYS中配置Debug模式，具体如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/4.6.png" width = "700"></div><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/4.7.png" width = "700"></div><p>详细工程建立内容读者可以阅读“<a href="https://www.cnblogs.com/lc-guo/p/17937268">STM32CubeMX教程1 工程建立</a>”</p><h3 id="4-1-1、时钟树配置"><a href="#4-1-1、时钟树配置" class="headerlink" title="4.1.1、时钟树配置"></a>4.1.1、时钟树配置</h3><p>系统时钟使用8MHz外部高速时钟HSE，HCLK、PCLK1和PCLK2均设置为STM32F407能达到的最高时钟频率，具体如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/4.8.png" width = "700"></div><h3 id="4-1-2、外设参数配置"><a href="#4-1-2、外设参数配置" class="headerlink" title="4.1.2、外设参数配置"></a>4.1.2、外设参数配置</h3><p>在Pinout ＆ Configuration页面右边单片机引脚预览Pinout view中，寻找需要设置的具体GPIO，这里我们仍然<font color="#fe2c24"><strong>选择用户按键的PA0引脚，但是右键单击将其配置为GPIO_EXTI0</strong></font></p><p>在页面的中间GPIO Mode and Configuration栏中选中PA0引脚，然后在下方对其引脚进行配置，外部中断主要配置<font color="#be191c" style="background: #fef2f0">   GPIO mode </font>和<font color="#be191c" style="background: #fef2f0"> GPIO Pull-up&#x2F;Pull-down </font></p><p><font color="#be191c" style="background: #fef2f0"> GPIO mode </font>：有外部中断上升沿、下降沿、上&#x2F;下降沿触发、外部事件上升沿、下降沿和上&#x2F;下降沿触发共计6种模式</p><p><font color="#be191c" style="background: #fef2f0"> GPIO Pull-up&#x2F;Pull-down </font>：选择无上&#x2F;下拉，根据“<a href="https://www.cnblogs.com/lc-guo/p/17938621">STM32CubeMX教程3 GPIO输入 - 按键响应</a>”实验“3.1.2、外设参数配置”小节可知开发板上的按键已经使用电阻进行外部下拉</p><p>我们使用的是外部中断，并且在按键按下松开时既会产生上升沿也会产生下降沿，因此笔者这里<font color="#fe2c24"><strong>选择下降沿触发，无上&#x2F;下拉的外部中断模式</strong></font>，具体配置如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/4.9.png" width = "700"></div><h3 id="4-1-3、外设中断配置"><a href="#4-1-3、外设中断配置" class="headerlink" title="4.1.3、外设中断配置"></a>4.1.3、外设中断配置</h3><p>将引脚配置为中断模式后，还需要<font color="#fe2c24"><strong>在NVIC中启动其具体的中断</strong></font>，单击页面左侧的NVIC配置，选择合适的中断优先级组，然后启动对应的中断，这里即用户按键引脚PA0的中断EXTline0 interrupt，具体配置如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/4.10.png" width = "700"></div><h2 id="4-2、生成代码"><a href="#4-2、生成代码" class="headerlink" title="4.2、生成代码"></a>4.2、生成代码</h2><h3 id="4-2-0、配置Project-Manager页面"><a href="#4-2-0、配置Project-Manager页面" class="headerlink" title="4.2.0、配置Project Manager页面"></a>4.2.0、配置Project Manager页面</h3><p>单击进入Project Manager页面，在左边Project分栏中修改工程名称、工程目录和工具链，然后在Code Generator中勾选“Gnerate peripheral initialization as a pair of ‘c&#x2F;h’ files per peripheral”，最后单击页面右上角GENERATE CODE生成工程，具体如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/4.11.png" width = "700"></div><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/4.12.png" width = "700"></div><p>详细Project Manager配置内容读者可以阅读“<a href="https://www.cnblogs.com/lc-guo/p/17937268">STM32CubeMX教程1 工程建立</a>”实验3.4.3小节</p><h3 id="4-2-1、外设初始化调用流程"><a href="#4-2-1、外设初始化调用流程" class="headerlink" title="4.2.1、外设初始化调用流程"></a>4.2.1、外设初始化调用流程</h3><p>当仅仅配置了引脚为外部中断模式，而不启动对应的外部中断时，在生成的代码引脚初始化函数MX_GPIO_Init中只会增加如下图框中所示的代码，此时由于未使能中断，因此中断不能正常响应，如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/4.13.png" width = "700"></div><h3 id="4-2-2、外设中断调用流程"><a href="#4-2-2、外设中断调用流程" class="headerlink" title="4.2.2、外设中断调用流程"></a>4.2.2、外设中断调用流程</h3><p>当配置了引脚为外部中断模式，且使能了引脚对应的中断，首先会在HAL_Init(void)函数中设置中断优先级组（系统默认开启了一些中断，因此即使我们不使能外部中断该函数也会被其他开启的中断调用从而设置中断优先级组），如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/4.14.png" width = "700"></div><p>另外除了上述的引脚模式设置代码外，还会在引脚初始化函数MX_GPIO_Init中新增加中断优先级设置及对应中断使能的函数，如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/4.15.png" width = "700"></div><p>然后在stm32f4xx_it.c文件中会出现对应的中断服务子函数void EXTI0_IRQHandler(void) <em>（注释3）</em>，中断服务子函数中调用了HAL_GPIO_EXTI_IRQHandler(GPIO_Pin)函数，跳转过去在函数内部执行了</p><ol><li>检测该中断线是否有挂起的外部中断</li><li>如果有则清除挂起的外部中断线</li><li>然后调用外部中断回调函数HAL_GPIO_EXTI_Callback(GPIO_Pin)（此函数为虚函数，可由用户自定义）</li></ol><p>具体流程如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/4.16.png" width = "700"></div><h3 id="4-2-3、添加其他必要代码"><a href="#4-2-3、添加其他必要代码" class="headerlink" title="4.2.3、添加其他必要代码"></a>4.2.3、添加其他必要代码</h3><p>此时<font color="#fe2c24"><strong>用户只需要重新实现HAL_GPIO_EXTI_Callback(GPIO_Pin)函数即可</strong></font>，在该函数体内可以实现中断触发后想要实现的功能代码，笔者将该函数重新实现在了gpio.c中</p><p>值得注意的是在外部中断回调函数中使用到了HAL库延时函数来对按键消抖，此处可能会存在严重的问题 <em>（注释4）</em></p><p>具体代码如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/4.17.png"></div><p>​源代码如下</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-type">void</span> <span class="hljs-title function_">HAL_GPIO_EXTI_Callback</span><span class="hljs-params">(<span class="hljs-type">uint16_t</span> GPIO_Pin)</span><br>&#123;<br>    <span class="hljs-keyword">if</span>(GPIO_Pin == USER_KEY_Pin)<br>    &#123;<br>        HAL_Delay(<span class="hljs-number">10</span>);<br>        HAL_GPIO_TogglePin(GREEN_LED_GPIO_Port, GREEN_LED_Pin);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="5、常用函数"><a href="#5、常用函数" class="headerlink" title="5、常用函数"></a>5、常用函数</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">/*所有外部中断触发回调服务子函数，通过GPIO_Pin判断是哪个中断线，然后在函数体内做相应动作*/</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">HAL_GPIO_EXTI_Callback</span><span class="hljs-params">(<span class="hljs-type">uint16_t</span> GPIO_Pin)</span><br></code></pre></td></tr></table></figure><h1 id="6、烧录验证"><a href="#6、烧录验证" class="headerlink" title="6、烧录验证"></a>6、烧录验证</h1><p>烧录程序，然后可以观察到当开发板上电后，四个颜色LED全部点亮，然后每按下一次用户按键，绿色LED灯状态均会发生翻转</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/4.18.gif" ></div><h1 id="7、注释解析"><a href="#7、注释解析" class="headerlink" title="7、注释解析"></a>7、注释解析</h1><p><em>注释1</em>：具体的中断向量表可以在keil工程目录启动文件startup_stm32f407xx.s中查看，这里的中断数量笔者是根据启动文件中的数量计算的，其中Reserved的中断向量未计数</p><p><em>注释2</em>：图片来自STM32F4xx中文参考手册.pdf</p><p><em>注释3</em>：以后对于每一个外设中断，启用后都会在stm32f4xx_it.c文件中找到对应的中断服务函数</p><p><em>注释4</em>：<font color="#fe2c24">HAL库延时函数HAL_Delay使用的是系统滴答定时器作为时间基准，而系统滴答定时器同为中断，在外部中断中触发系统滴答定时器中断会涉及中断优先级的问题</font>，此时需保证滴答定时器的抢占优先级高于我们所使用的外部中断，否则会出现卡死的现象发生</p>]]></content>
    
    
    
    <tags>
      
      <tag>STM32CubeMX</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>STM32CubeMX教程3 GPIO输入 - 按键响应</title>
    <link href="/2024/01/26/STM32CubeMX%E6%95%99%E7%A8%8B3-GPIO%E8%BE%93%E5%85%A5-%E6%8C%89%E9%94%AE%E5%93%8D%E5%BA%94/"/>
    <url>/2024/01/26/STM32CubeMX%E6%95%99%E7%A8%8B3-GPIO%E8%BE%93%E5%85%A5-%E6%8C%89%E9%94%AE%E5%93%8D%E5%BA%94/</url>
    
    <content type="html"><![CDATA[<h1 id="1、准备材料"><a href="#1、准备材料" class="headerlink" title="1、准备材料"></a>1、准备材料</h1><p>开发板（<a href="https://www.st.com/en/evaluation-tools/stm32f4discovery.html">STM32F407G-DISC1</a>）</p><p>STM32CubeMX软件（<a href="https://www.st.com/en/development-tools/stm32cubemx.html">Version 6.10.0</a>）</p><p>keil µVision5 IDE（<a href="https://www.keil.com/download/product/">MDK-Arm</a>）</p><p><a href="https://www.st.com/zh/development-tools/stsw-link009.html">ST-LINK&#x2F;V2驱动</a></p><h1 id="2、实验目标"><a href="#2、实验目标" class="headerlink" title="2、实验目标"></a>2、实验目标</h1><p>使用STM32CubeMX软件配置STM32F407开发板的按键作为输入，利用按键输入使LED灯产生响应</p><h1 id="3、实验流程"><a href="#3、实验流程" class="headerlink" title="3、实验流程"></a>3、实验流程</h1><h2 id="3-0、前提知识"><a href="#3-0、前提知识" class="headerlink" title="3.0、前提知识"></a>3.0、前提知识</h2><p>对于所有的GPIO来说都是既可以作为输出引脚也可以作为输入引脚使用，本开发板上有一个用户按键，可以作为本次实验的输入，如下图所示为用户按键的电路原理图，<font color="#fe2c24"><strong>当松开按键时，PA0为低电平；当按下按键时，PA0为高电平</strong></font> <em>（注释1）</em></p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/3.1.png" width = "700"></div><h2 id="3-1、CubeMX相关配置"><a href="#3-1、CubeMX相关配置" class="headerlink" title="3.1、CubeMX相关配置"></a>3.1、CubeMX相关配置</h2><h3 id="3-1-0、工程基本配置"><a href="#3-1-0、工程基本配置" class="headerlink" title="3.1.0、工程基本配置"></a>3.1.0、工程基本配置</h3><p>打开STM32CubeMX软件，单击ACCESS TO MCU SELECTOR选择开发板MCU（选择你使用开发板的主控MCU型号），选中MCU型号后单击页面右上角Start Project开始工程，具体如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/3.2.png" width = "700"></div><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/3.3.png" width = "700"></div><p>开始工程之后在配置主页面System Core&#x2F;RCC中配置HSE&#x2F;LSE晶振，在System Core&#x2F;SYS中配置Debug模式，具体如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/3.4.png" width = "700"></div><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/3.5.png" width = "700"></div><p>详细工程建立内容读者可以阅读“<a href="https://www.cnblogs.com/lc-guo/p/17937268">STM32CubeMX教程1 工程建立</a>”</p><h3 id="3-1-1、时钟树配置"><a href="#3-1-1、时钟树配置" class="headerlink" title="3.1.1、时钟树配置"></a>3.1.1、时钟树配置</h3><p>系统时钟使用8MHz外部高速时钟HSE，HCLK、PCLK1和PCLK2均设置为STM32F407能达到的最高时钟频率，具体如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/3.6.png" width = "700"></div><h3 id="3-1-2、外设参数配置"><a href="#3-1-2、外设参数配置" class="headerlink" title="3.1.2、外设参数配置"></a>3.1.2、外设参数配置</h3><p>在Pinout ＆ Configuration页面右边单片机引脚预览Pinout view中，寻找需要设置的具体GPIO，这里我们选择用户按键的PA0引脚，<font color="#fe2c24"><strong>左键单击引脚将引脚功能设置为GPIO_Input</strong></font></p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/3.7.png" width = "700"></div><p>当<font color="#be191c" style="background: #fef2f0"> GPIO mode </font>选择Input mode时，<font color="#be191c" style="background: #fef2f0"> GPIO Pull-up&#x2F;Pull-down </font>可以选择无上&#x2F;下拉、上拉和下拉</p><p>无上&#x2F;下拉表示引脚输入状态完全由外部输入决定，称为浮空输入</p><p>上拉表示当无外部输入时，此时引脚的状态被上拉至高电平</p><p>同理，下拉表示当无外部输入时，此时引脚的状态被下拉至低电平</p><p>根据用户按键的硬件原理图可以知道，该用户按键已经通过电阻进行外部下拉，因此无需我们软件配置上下拉（实际是否需要配置上&#x2F;下拉根据读者开发板按键硬件原理图决定）</p><p>这里我们<font color="#fe2c24"><strong>选择输入模式，无上&#x2F;下拉</strong></font>，具体配置如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/3.8.png" ></div><h2 id="3-2、生成代码"><a href="#3-2、生成代码" class="headerlink" title="3.2、生成代码"></a>3.2、生成代码</h2><h3 id="3-2-0、配置Project-Manager页面"><a href="#3-2-0、配置Project-Manager页面" class="headerlink" title="3.2.0、配置Project Manager页面"></a>3.2.0、配置Project Manager页面</h3><p>单击进入Project Manager页面，在左边Project分栏中修改工程名称、工程目录和工具链，然后在Code Generator中勾选“Gnerate peripheral initialization as a pair of ‘c&#x2F;h’ files per peripheral”，最后单击页面右上角GENERATE CODE生成工程，具体如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/3.9.png" width = "700"></div><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/3.10.png" width = "700"></div><p>详细Project Manager配置内容读者可以阅读“<a href="https://www.cnblogs.com/lc-guo/p/17937268">STM32CubeMX教程1 工程建立</a>”实验3.4.3小节</p><h3 id="3-2-1、外设初始化调用流程"><a href="#3-2-1、外设初始化调用流程" class="headerlink" title="3.2.1、外设初始化调用流程"></a>3.2.1、外设初始化调用流程</h3><p>从生成的代码工程目录中打开keil工程，在MX_GPIO_Init(void)函数中会发现我们新添加的USER_KEY按键初始化代码，其模式为输入模式</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/3.11.png" width = "700"></div><h3 id="3-2-2、添加其他必要代码"><a href="#3-2-2、添加其他必要代码" class="headerlink" title="3.2.2、添加其他必要代码"></a>3.2.2、添加其他必要代码</h3><p>在主函数的主循环中添加按键扫描及响应函数，如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/3.12.png" width = "700"></div><p>源代码如下 </p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-keyword">if</span>(HAL_GPIO_ReadPin(USER_KEY_GPIO_Port,USER_KEY_Pin) == GPIO_PIN_SET)<br>&#123;<br>    HAL_Delay(<span class="hljs-number">10</span>);<br>    <span class="hljs-keyword">if</span>(HAL_GPIO_ReadPin(USER_KEY_GPIO_Port,USER_KEY_Pin) == GPIO_PIN_SET)<br>    &#123;<br>        HAL_GPIO_TogglePin(GREEN_LED_GPIO_Port, GREEN_LED_Pin) ;<br>        <span class="hljs-keyword">while</span>(HAL_GPIO_ReadPin(USER_KEY_GPIO_Port,USER_KEY_Pin) == GPIO_PIN_SET);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="4、常用函数"><a href="#4、常用函数" class="headerlink" title="4、常用函数"></a>4、常用函数</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">/**</span><br><span class="hljs-comment">  * @brief  读取某个GPIO当前的状态</span><br><span class="hljs-comment">  * @param  GPIOx：引脚组别（GPIOA - GPIOI）</span><br><span class="hljs-comment">  * @param  GPIO_Pin：引脚（GPIO_PIN_0 - GPIO_PIN_15）</span><br><span class="hljs-comment">  * @retval GPIO_PinState：低电平（GPIO_PIN_RESET）、高电平（GPIO_PIN_SET）</span><br><span class="hljs-comment">  */</span><br>GPIO_PinState <span class="hljs-title function_">HAL_GPIO_ReadPin</span><span class="hljs-params">(GPIO_TypeDef* GPIOx, <span class="hljs-type">uint16_t</span> GPIO_Pin)</span><br> <br><span class="hljs-comment">/*读取PA0当前状态并存储到Now_PinState变量中*/</span><br>Now_PinState = HAL_GPIO_ReadPin(GPIOA,GPIO_PIN_0);<br></code></pre></td></tr></table></figure><h1 id="5、烧录验证"><a href="#5、烧录验证" class="headerlink" title="5、烧录验证"></a>5、烧录验证</h1><p>烧录程序，当开发板上电后，四个颜色的LED全部点亮，然后每按下一次用户按键，绿色LED灯状态会发生翻转</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/3.13.gif"></div><h1 id="6、注释解析"><a href="#6、注释解析" class="headerlink" title="6、注释解析"></a>6、注释解析</h1><p><em>注释1</em>：首先忽视掉R38和C38，因为笔者开发板上未焊接C38。当松开按键时，按键处相当于断路，此时PA0引脚经过R35、R39下拉至地，状态为低电平；当按下按键时，按键处相当于短路，此时PA0引脚经过R35被上拉至VDD，状态为高电平；</p>]]></content>
    
    
    
    <tags>
      
      <tag>STM32CubeMX</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>STM32CubeMX教程2 GPIO输出 - 点亮LED灯</title>
    <link href="/2024/01/26/STM32CubeMX%E6%95%99%E7%A8%8B2-GPIO%E8%BE%93%E5%87%BA-%E7%82%B9%E4%BA%AELED%E7%81%AF/"/>
    <url>/2024/01/26/STM32CubeMX%E6%95%99%E7%A8%8B2-GPIO%E8%BE%93%E5%87%BA-%E7%82%B9%E4%BA%AELED%E7%81%AF/</url>
    
    <content type="html"><![CDATA[<h1 id="1、准备材料"><a href="#1、准备材料" class="headerlink" title="1、准备材料"></a>1、准备材料</h1><p>开发板（<a href="https://www.st.com/en/evaluation-tools/stm32f4discovery.html">STM32F407G-DISC1</a>）</p><p>STM32CubeMX软件（<a href="https://www.st.com/en/development-tools/stm32cubemx.html">Version 6.10.0</a>）</p><p>keil µVision5 IDE（<a href="https://www.keil.com/download/product/">MDK-Arm</a>）</p><p><a href="https://www.st.com/zh/development-tools/stsw-link009.html">ST-LINK&#x2F;V2驱动</a></p><h1 id="2、实验目标"><a href="#2、实验目标" class="headerlink" title="2、实验目标"></a>2、实验目标</h1><p>使用STM32CubeMX软件配置STM32F407开发板点亮LED灯</p><h1 id="3、实验流程"><a href="#3、实验流程" class="headerlink" title="3、实验流程"></a>3、实验流程</h1><h2 id="3-0、前提知识"><a href="#3-0、前提知识" class="headerlink" title="3.0、前提知识"></a>3.0、前提知识</h2><p>笔者使用的STM32F407G-DISC1开发板主控制器为STM32F407VGT6，该MCU封装为LQFP 100，一共100个引脚，除去16个POWER引脚、1个NRST引脚和一个BOOT0引脚外，还剩余82个引脚，剩下的这些引脚均可以作为GPIO输入输出引脚使用，这些引脚分为6组，分别为GPIOA、GPIOB、GPIOC、GPIOD、GPIOE和GPIOH，除GPIOH只有2个引脚外，其余5组均为16个引脚，如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/2.1.png" ></div><p>在编程语言学习的过程中，一般学习者初始程序大多选择输出“Hello World!”，而在嵌入式单片机的学习中，一般学习者初始程序大多为“点亮LED灯”，笔者使用的开发板上拥有四个不同颜色的LED灯，其硬件原理图如下图所示，从电路连接上可以看出，<font color="#fe2c24"><strong>从上到下绿橙红蓝四个LED灯分别由单片机的PD12、PD13、PD14和PD15四个引脚控制，当这四个引脚输出高电平时，相应的LED则会被点亮</strong></font></p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/2.2.png"></div><h2 id="3-1、CubeMX相关配置"><a href="#3-1、CubeMX相关配置" class="headerlink" title="3.1、CubeMX相关配置"></a>3.1、CubeMX相关配置</h2><h3 id="3-1-0、工程基本配置"><a href="#3-1-0、工程基本配置" class="headerlink" title="3.1.0、工程基本配置"></a>3.1.0、工程基本配置</h3><p>打开STM32CubeMX软件，单击ACCESS TO MCU SELECTOR选择开发板MCU（选择你使用开发板的主控MCU型号），选中MCU型号后单击页面右上角Start Project开始工程，具体如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/2.3.png" width = "700"></div><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/2.4.png" width = "700"></div><p>开始工程之后在配置主页面System Core&#x2F;RCC中配置HSE&#x2F;LSE晶振，在System Core&#x2F;SYS中配置Debug模式，具体如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/2.5.png" width = "700"></div><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/2.6.png" width = "700"></div><p>详细工程建立内容读者可以阅读“<a href="https://www.cnblogs.com/lc-guo/p/17937268">STM32CubeMX教程1 工程建立</a>”</p><h3 id="3-1-1、时钟树配置"><a href="#3-1-1、时钟树配置" class="headerlink" title="3.1.1、时钟树配置"></a>3.1.1、时钟树配置</h3><p>系统时钟使用8MHz外部高速时钟HSE，HCLK、PCLK1和PCLK2均设置为STM32F407能达到的最高时钟频率，具体如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/2.7.png" width = "700"></div><h3 id="3-1-2、外设参数配置"><a href="#3-1-2、外设参数配置" class="headerlink" title="3.1.2、外设参数配置"></a>3.1.2、外设参数配置</h3><p>在Pinout ＆ Configuration页面右边单片机引脚预览Pinout view中，寻找需要设置的具体GPIO，这里我们选择PD12、PD13、PD14和PD15四个引脚，左键单击引脚可以对引脚功能进行设置，<font color="#fe2c24"><strong>统一选择为GPIO_Output</strong></font></p><p>在页面左边单片机功能分类栏目中选择GPIO，然后在页面中间栏目GPIO Mode and Configuration中可以看到所有使用到的具体GPIO及其相关配置，单击某个GPIO可以对其配置进行修改</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/2.8.png" width = "700"></div><p>当引脚选择GPIO Output时，GPIO mode有推挽输出和开漏输出两种，GPIO Pull-up&#x2F;Pull-down可以选择无上&#x2F;下拉、上拉和下拉其中的几种，<font color="#fe2c24"><strong>需要注意的是开漏输出无法真正输出高电平，即高电平时没有驱动能力，需要借助外部上拉电阻完成对外驱动</strong></font> <em>（注释1）</em></p><p>当GPIO mode设置为推挽输出时，此时上&#x2F;下拉只有在没有输出时才有作用，也就是说，推挽输出状态下，如果控制输出高电平那IO状态就为高电平，若控制输出低电平那IO状态就为低电平，此时与上&#x2F;下拉无关，而当没有控制输出时，此时IO的状态由上&#x2F;下拉决定 <em>（注释2）</em></p><p>当GPIO mode设置为开漏输出时，如果控制输出低电平那IO状态就为低电平；若控制输出高电平，此时输出指令就不会起到作用，IO状态由上&#x2F;下拉决定</p><p>因此<font color="#fe2c24"><strong>PD12、PD13、PD14和PD15四个引脚模式选择推挽输出，无上下拉</strong></font>，具体配置如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/2.9.png"></div><h2 id="3-2、生成代码"><a href="#3-2、生成代码" class="headerlink" title="3.2、生成代码"></a>3.2、生成代码</h2><h3 id="3-2-0、配置Project-Manager页面"><a href="#3-2-0、配置Project-Manager页面" class="headerlink" title="3.2.0、配置Project Manager页面"></a>3.2.0、配置Project Manager页面</h3><p>单击进入Project Manager页面，在左边Project分栏中修改工程名称、工程目录和工具链，然后在Code Generator中勾选“Gnerate peripheral initialization as a pair of ‘c&#x2F;h’ files per peripheral”，最后单击页面右上角GENERATE CODE生成工程，具体如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/2.10.png" width = "700"></div><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/2.11.png" width = "700"></div><p>详细Project Manager配置内容读者可以阅读“<a href="https://www.cnblogs.com/lc-guo/p/17937268">STM32CubeMX教程1 工程建立</a>”实验3.4.3小节</p><h3 id="3-2-1、外设初始化调用流程"><a href="#3-2-1、外设初始化调用流程" class="headerlink" title="3.2.1、外设初始化调用流程"></a>3.2.1、外设初始化调用流程</h3><p>打开工程，在main.c主函数中可以看到初始化部分多了MX_GPIO_Init()函数，此函数即初始化4个LED引脚为输出的函数</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/2.12.png" width = "700"></div><p>右键单击函数，单击Go To Definition Of ‘MX_GPlO_Init’ 定位<em>（注释3）</em>到函数定义所在的文件gpio.c<em>（注释4）</em>中，可以看到初始化函数中所做的设置正是我们在STM32CubeMX中所做的设置</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/2.13.png" width = "700"></div><p>此时如果不增加任何代码，编译整个工程应该是可以正常编译通过，0错误和0警告</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/2.14.png"></div><h3 id="3-2-2、添加其他必要代码"><a href="#3-2-2、添加其他必要代码" class="headerlink" title="3.2.2、添加其他必要代码"></a>3.2.2、添加其他必要代码</h3><p>然后我们就可以添加我们自己的功能代码，在主函数初始化LED的引脚之后，将引脚输出为高电平即可点亮LED，还可以在主循环中每隔一定时间翻转LED引脚的输出电平，形成LED闪烁的状态，添加代码如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/2.15.png" width = "700"></div><p>源代码如下</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">/*点亮四个LED灯*/</span><br>HAL_GPIO_WritePin(GREEN_LED_GPIO_Port,GREEN_LED_Pin,GPIO_PIN_SET);<br>HAL_GPIO_WritePin(ORANGE_LED_GPIO_Port,ORANGE_LED_Pin,GPIO_PIN_SET);<br>HAL_GPIO_WritePin(RED_LED_GPIO_Port,RED_LED_Pin,GPIO_PIN_SET);<br>HAL_GPIO_WritePin(BLUE_LED_GPIO_Port,BLUE_LED_Pin,GPIO_PIN_SET);<br><br><span class="hljs-comment">/*每隔100ms翻转绿色LED灯状态*/</span><br>HAL_GPIO_TogglePin(GREEN_LED_GPIO_Port, GREEN_LED_Pin) ;<br>HAL_Delay(<span class="hljs-number">100</span>);<br></code></pre></td></tr></table></figure><h1 id="4、常用函数"><a href="#4、常用函数" class="headerlink" title="4、常用函数"></a>4、常用函数</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">/**</span><br><span class="hljs-comment">  * @brief  设置某个GPIO固定输出高电平或低电平</span><br><span class="hljs-comment">  * @param  GPIOx：引脚组别（GPIOA - GPIOI）</span><br><span class="hljs-comment">  * @param  GPIO_Pin：引脚（GPIO_PIN_0 - GPIO_PIN_15）</span><br><span class="hljs-comment">  * @param  PinState：低电平（GPIO_PIN_RESET）、高电平（GPIO_PIN_SET）</span><br><span class="hljs-comment">  * @retval None</span><br><span class="hljs-comment">    */</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">HAL_GPIO_WritePin</span><span class="hljs-params">(GPIO_TypeDef* GPIOx, <span class="hljs-type">uint16_t</span> GPIO_Pin, GPIO_PinState PinState)</span>;<br><br><span class="hljs-comment">/*设置PA0引脚输出高电平*/</span><br>HAL_GPIO_WritePin(GPIOA,GPIO_PIN_0,GPIO_PIN_SET);<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment">  * @brief  设置某个GPIO的输出电平翻转</span><br><span class="hljs-comment">  * @param  GPIOx：引脚组别（GPIOA - GPIOI）</span><br><span class="hljs-comment">  * @param  GPIO_Pin：引脚（GPIO_PIN_0 - GPIO_PIN_15）</span><br><span class="hljs-comment">  * @retval None</span><br><span class="hljs-comment">    */</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">HAL_GPIO_TogglePin</span><span class="hljs-params">(GPIO_TypeDef* GPIOx, <span class="hljs-type">uint16_t</span> GPIO_Pin)</span>;<br><br><span class="hljs-comment">/*翻转PA0引脚输出电平*/</span><br>HAL_GPIO_TogglePin(GPIOA,GPIO_PIN_0);<br></code></pre></td></tr></table></figure><h1 id="5、烧录验证"><a href="#5、烧录验证" class="headerlink" title="5、烧录验证"></a>5、烧录验证</h1><h2 id="5-1、具体步骤"><a href="#5-1、具体步骤" class="headerlink" title="5.1、具体步骤"></a>5.1、具体步骤</h2><p>“初始化LED引脚为输出 -&gt; 使用HAL库函数设置LED引脚输出高电平 -&gt; 引脚对应的LED点亮”</p><h2 id="5-2、实验现象"><a href="#5-2、实验现象" class="headerlink" title="5.2、实验现象"></a>5.2、实验现象</h2><p>烧录程序，然后观察开发板上LED灯的闪烁状态，发现开发板上电后4个LED均被点亮，其中GREEN_LED每隔一段时间闪烁一次</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/2.16.gif"></div><h1 id="6、注释解析"><a href="#6、注释解析" class="headerlink" title="6、注释解析"></a>6、注释解析</h1><p><em>注释1</em>：参看文章“<a href="https://blog.csdn.net/weixin_44788542/article/details/115303125">GPIO推挽输出和开漏输出模式区别详解</a>”</p><p><em>注释2</em>：参看文章“<a href="https://shequ.stmicroelectronics.cn/thread-632277-1-1.html">STM32F4 GPIO八种模式及工作原理详解</a>”</p><p><em>注释3</em>：需要在keil软件魔术手Options for Target‘GPIO’&#x2F;Output中勾选Browse Infomation，然后编译整个工程才可以跳转</p><p><em>注释4</em>：如果在STM32CubeMX的Project Manager&#x2F;Code Generator&#x2F;Generated files中没有勾选Generate peripheral initialization as a pair of ‘c&#x2F;.h’ files per peripheral，则所有生成的代码都会在main.c中实现，而不是每个外设分成.c&#x2F;.h的形式</p>]]></content>
    
    
    
    <tags>
      
      <tag>STM32CubeMX</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>STM32CubeMX教程1 工程建立</title>
    <link href="/2024/01/26/STM32CubeMX%E6%95%99%E7%A8%8B1%20%E5%B7%A5%E7%A8%8B%E5%BB%BA%E7%AB%8B/"/>
    <url>/2024/01/26/STM32CubeMX%E6%95%99%E7%A8%8B1%20%E5%B7%A5%E7%A8%8B%E5%BB%BA%E7%AB%8B/</url>
    
    <content type="html"><![CDATA[<h1 id="1、准备材料"><a href="#1、准备材料" class="headerlink" title="1、准备材料"></a>1、准备材料</h1><p>开发板（<a href="https://www.st.com/en/evaluation-tools/stm32f4discovery.html">STM32F407G-DISC1</a>）</p><p>STM32CubeMX软件（<a href="https://www.st.com/en/development-tools/stm32cubemx.html">Version 6.10.0</a>）</p><p>keil µVision5 IDE（<a href="https://www.keil.com/download/product/">MDK-Arm</a>）</p><p><a href="https://www.st.com/zh/development-tools/stsw-link009.html">ST-LINK&#x2F;V2驱动</a></p><h1 id="2、实验目标"><a href="#2、实验目标" class="headerlink" title="2、实验目标"></a>2、实验目标</h1><p>使用STM32CubeMX软件<font color="#fe2c24"><strong>建立一个STM32F407的空工程</strong></font></p><h1 id="3、建立流程"><a href="#3、建立流程" class="headerlink" title="3、建立流程"></a>3、建立流程</h1><h2 id="3-1、打开STM32CubeMX软件"><a href="#3-1、打开STM32CubeMX软件" class="headerlink" title="3.1、打开STM32CubeMX软件"></a>3.1、打开STM32CubeMX软件</h2><p>如下图所示为STM32CubeMX软件主界面</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/1.1.png" width = "700"></div><h2 id="3-2、开始建立工程"><a href="#3-2、开始建立工程" class="headerlink" title="3.2、开始建立工程"></a>3.2、开始建立工程</h2><p>单击ACCESS TO MCU SELECTOR</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/1.2.png" width = "700"></div><h2 id="3-3、选择MCU"><a href="#3-3、选择MCU" class="headerlink" title="3.3、选择MCU"></a>3.3、选择MCU</h2><p>在弹出的MCU选择界面，搜索工程使用的MCU型号，然后选中该MCU，单击界面右上角Start Project</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/1.3.png" width = "700"></div><h2 id="3-4、进行必要配置"><a href="#3-4、进行必要配置" class="headerlink" title="3.4、进行必要配置"></a>3.4、进行必要配置</h2><h3 id="3-4-1、Pinout-＆-Configuration页面配置"><a href="#3-4-1、Pinout-＆-Configuration页面配置" class="headerlink" title="3.4.1、Pinout ＆ Configuration页面配置"></a>3.4.1、Pinout ＆ Configuration页面配置</h3><p>进入Pinout ＆ Configuration页面中，如下图所示，<font color="#fe2c24"><strong>对于空工程来说只需在Pinout ＆ Configuration页面中配置RCC和SYS</strong></font>，RCC中主要配置高速外部时钟HSE和低速外部时钟LSE，SYS中主要配置单片机的Debug模式</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/1.4.png" width = "700"></div><p><font color="#fe2c24"><strong>如果使用高速外部时钟HSE，则需要单片机PH0-OSC_IN和PH0-OSC_OUT两个引脚接入一颗4MHz~16MHz的陶瓷晶振</strong></font></p><p><font color="#fe2c24"><strong>如果使用低速外部时钟LSE，则一般需要单片机PC14-OSC32_IN和PC15-OSC32_OUT两个引脚接入一颗32.768kHz的陶瓷晶振</strong></font></p><p>如果开发板单片机的引脚PH0-OSC_IN和PH0-OSC_OUT在原理图上连接了一颗4MHz~16MHz晶体 &#x2F; 陶瓷晶振，那么HSE就选择Crystal&#x2F;Ceramic Resonator，否则就选择Disable</p><p>同理如果PC14-OSC32_IN和PC15-OSC32_OUT两个引脚连接了一颗32.768kHz的晶体&#x2F;陶瓷晶振，那么LSE也选择Crystal&#x2F;Ceramic Resonator，否则一般直接选Disable即可</p><p>笔者使用的开发板HSE外部接入了一颗8MHz的陶瓷晶振，LSE未接入任何晶振，因此配置如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/1.5.png"></div><p><font color="#fe2c24"><strong>SYS中Debug模式表示MCU使用的下载调试模式，一般烧录程序会使用STLINK&#x2F;JTAG&#x2F;DAP等</strong></font>，按照自己的模式选择即可，笔者这里开发板板载了STLINK下载器，因此选择Serial Wire即可</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/1.6.png" ></div><h3 id="3-4-2、Clock-Configuration页面配置"><a href="#3-4-2、Clock-Configuration页面配置" class="headerlink" title="3.4.2、Clock Configuration页面配置"></a>3.4.2、Clock Configuration页面配置</h3><p>参考下图调节即可</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/1.7.png" width = "700"></div><h3 id="3-4-3、Project-Manager页面配置"><a href="#3-4-3、Project-Manager页面配置" class="headerlink" title="3.4.3、Project Manager页面配置"></a>3.4.3、Project Manager页面配置</h3><p>主要设置工程名称，存储位置，工具链&#x2F;IDE</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/1.8.png" width = "700"></div><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/1.9.png" width = "700"></div><h2 id="3-5、生成代码"><a href="#3-5、生成代码" class="headerlink" title="3.5、生成代码"></a>3.5、生成代码</h2><p>单击页面右上角GENERATE CODE生成代码，提示生成代码成功</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/1.10.png" ></div><p>找到生成代码目录下MDK-ARM里的.uvprojx结尾的keil工程文件，双击打开，编译工程</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/1.11.png" width = "700"></div><p>生成的工程代码结构主要有①单片机的启动文件②用户核心应用文件③HAL库驱动文件④单片机系统初始化文件</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/1.12.png" ></div><p><font color="#fe2c24"><strong>用户添加代码需要在代码注释中指定的BEGIN和END之间，否则使用CubeMX重新构建工程之后，添加的代码会消失</strong></font></p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/1.13.png" width = "700"></div><h1 id="4、烧录验证"><a href="#4、烧录验证" class="headerlink" title="4、烧录验证"></a>4、烧录验证</h1><p>将开发板利用调试器与电脑连接，确保调试器驱动已安装，可以通过设备管理器查看驱动，如下图所示</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/1.14.png" width = "700"></div><p>单击魔术手，选择对应调试器并配置</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/1.15.png" width = "700"></div><p>单击LOAD，烧录程序</p><div align=center><img src="https://blog-picture-240114.oss-cn-beijing.aliyuncs.com/STM32CubeMX/1.16.png"></div><h1 id="5、小结"><a href="#5、小结" class="headerlink" title="5、小结"></a>5、小结</h1><p>当创建好空工程后，以后需要使用到MCU的什么功能，就可以重新打开这个STM32CubeMX工程，然后主要是在软件Pinout ＆ Configuration页面对功能进行配置，需要修改时钟在Clock Configuration页面配置，需要修改生成的工程及代码可以在Project Manager页面进行配置。</p><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p><a href="https://www.st.com/resource/zh/user_manual/um1718-stm32cubemx-for-stm32-configuration-and-initialization-c-code-generation-stmicroelectronics.pdf">um1718-stm32cubemx-for-stm32-configuration-and-initialization-c-code-generation-stmicroelectronics.pdf</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>STM32CubeMX</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
